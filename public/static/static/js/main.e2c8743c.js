/******/
(function(modules) { // webpackBootstrap
    /******/ // The module cache
    /******/
    var installedModules = {};
    /******/
    /******/ // The require function
    /******/
    function __webpack_require__(moduleId) {
        /******/
        /******/ // Check if module is in cache
        /******/
        if (installedModules[moduleId]) {
            /******/
            return installedModules[moduleId].exports;
            /******/
        }
        /******/ // Create a new module (and put it into the cache)
        /******/
        var module = installedModules[moduleId] = {
            /******/
            i: moduleId,
            /******/
            l: false,
            /******/
            exports: {}
            /******/
        };
        /******/
        /******/ // Execute the module function
        /******/
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/
        /******/ // Flag the module as loaded
        /******/
        module.l = true;
        /******/
        /******/ // Return the exports of the module
        /******/
        return module.exports;
        /******/
    }
    /******/
    /******/
    /******/ // expose the modules object (__webpack_modules__)
    /******/
    __webpack_require__.m = modules;
    /******/
    /******/ // expose the module cache
    /******/
    __webpack_require__.c = installedModules;
    /******/
    /******/ // define getter function for harmony exports
    /******/
    __webpack_require__.d = function(exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
            /******/
            Object.defineProperty(exports, name, {
                /******/
                configurable: false,
                /******/
                enumerable: true,
                /******/
                get: getter
                /******/
            });
            /******/
        }
        /******/
    };
    /******/
    /******/ // getDefaultExport function for compatibility with non-harmony modules
    /******/
    __webpack_require__.n = function(module) {
        /******/
        var getter = module && module.__esModule ?
            /******/
            function getDefault() {
                return module['default'];
            } :
            /******/
            function getModuleExports() {
                return module;
            };
        /******/
        __webpack_require__.d(getter, 'a', getter);
        /******/
        return getter;
        /******/
    };
    /******/
    /******/ // Object.prototype.hasOwnProperty.call
    /******/
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
    };
    /******/
    /******/ // __webpack_public_path__
    /******/
    __webpack_require__.p = "/";
    /******/
    /******/ // Load entry module and return exports
    /******/
    return __webpack_require__(__webpack_require__.s = 81);
    /******/
})
/************************************************************************/
/******/
([
    /* 0 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        if (true) {
            module.exports = __webpack_require__(88);
        } else {
            module.exports = require('./cjs/react.development.js');
        }


        /***/
    }),
    /* 1 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.ReactCSS = exports.loop = exports.handleActive = exports.handleHover = exports.hover = undefined;

        var _flattenNames = __webpack_require__(116);

        var _flattenNames2 = _interopRequireDefault(_flattenNames);

        var _mergeClasses = __webpack_require__(189);

        var _mergeClasses2 = _interopRequireDefault(_mergeClasses);

        var _autoprefix = __webpack_require__(214);

        var _autoprefix2 = _interopRequireDefault(_autoprefix);

        var _hover2 = __webpack_require__(215);

        var _hover3 = _interopRequireDefault(_hover2);

        var _active = __webpack_require__(216);

        var _active2 = _interopRequireDefault(_active);

        var _loop2 = __webpack_require__(217);

        var _loop3 = _interopRequireDefault(_loop2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        exports.hover = _hover3.default;
        exports.handleHover = _hover3.default;
        exports.handleActive = _active2.default;
        exports.loop = _loop3.default;
        var ReactCSS = exports.ReactCSS = function ReactCSS(classes) {
            for (var _len = arguments.length, activations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                activations[_key - 1] = arguments[_key];
            }

            var activeNames = (0, _flattenNames2.default)(activations);
            var merged = (0, _mergeClasses2.default)(classes, activeNames);
            return (0, _autoprefix2.default)(merged);
        };

        exports.default = ReactCSS;

        /***/
    }),
    /* 2 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _Alpha = __webpack_require__(218);

        Object.defineProperty(exports, 'Alpha', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Alpha).default;
            }
        });

        var _Checkboard = __webpack_require__(74);

        Object.defineProperty(exports, 'Checkboard', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Checkboard).default;
            }
        });

        var _EditableInput = __webpack_require__(221);

        Object.defineProperty(exports, 'EditableInput', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_EditableInput).default;
            }
        });

        var _Hue = __webpack_require__(222);

        Object.defineProperty(exports, 'Hue', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Hue).default;
            }
        });

        var _Raised = __webpack_require__(224);

        Object.defineProperty(exports, 'Raised', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Raised).default;
            }
        });

        var _Saturation = __webpack_require__(225);

        Object.defineProperty(exports, 'Saturation', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Saturation).default;
            }
        });

        var _ColorWrap = __webpack_require__(76);

        Object.defineProperty(exports, 'ColorWrap', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_ColorWrap).default;
            }
        });

        var _Swatch = __webpack_require__(233);

        Object.defineProperty(exports, 'Swatch', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Swatch).default;
            }
        });

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        /***/
    }),
    /* 3 */
    /***/
    (function(module, exports, __webpack_require__) {

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (false) {
            var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
                    Symbol.for &&
                    Symbol.for('react.element')) ||
                0xeac7;

            var isValidElement = function(object) {
                return typeof object === 'object' &&
                    object !== null &&
                    object.$$typeof === REACT_ELEMENT_TYPE;
            };

            // By explicitly using `prop-types` you are opting into new development behavior.
            // http://fb.me/prop-types-in-prod
            var throwOnDirectAccess = true;
            module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
        } else {
            // By explicitly using `prop-types` you are opting into new production behavior.
            // http://fb.me/prop-types-in-prod
            module.exports = __webpack_require__(103)();
        }


        /***/
    }),
    /* 4 */
    /***/
    (function(module, exports) {

        /**
         * Checks if `value` is classified as an `Array` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an array, else `false`.
         * @example
         *
         * _.isArray([1, 2, 3]);
         * // => true
         *
         * _.isArray(document.body.children);
         * // => false
         *
         * _.isArray('abc');
         * // => false
         *
         * _.isArray(_.noop);
         * // => false
         */
        var isArray = Array.isArray;

        module.exports = isArray;


        /***/
    }),
    /* 5 */
    /***/
    (function(module, exports, __webpack_require__) {

        var freeGlobal = __webpack_require__(45);

        /** Detect free variable `self`. */
        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        module.exports = root;


        /***/
    }),
    /* 6 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.red = undefined;

        var _each = __webpack_require__(230);

        var _each2 = _interopRequireDefault(_each);

        var _tinycolor = __webpack_require__(232);

        var _tinycolor2 = _interopRequireDefault(_tinycolor);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        exports.default = {
            simpleCheckForValidColor: function simpleCheckForValidColor(data) {
                var keysToCheck = ['r', 'g', 'b', 'a', 'h', 's', 'l', 'v'];
                var checked = 0;
                var passed = 0;
                (0, _each2.default)(keysToCheck, function(letter) {
                    if (data[letter]) {
                        checked += 1;
                        if (!isNaN(data[letter])) {
                            passed += 1;
                        }
                        if (letter === 's' || letter === 'l') {
                            var percentPatt = /^\d+%$/;
                            if (percentPatt.test(data[letter])) {
                                passed += 1;
                            }
                        }
                    }
                });
                return checked === passed ? data : false;
            },
            toState: function toState(data, oldHue) {
                var color = data.hex ? (0, _tinycolor2.default)(data.hex) : (0, _tinycolor2.default)(data);
                var hsl = color.toHsl();
                var hsv = color.toHsv();
                var rgb = color.toRgb();
                var hex = color.toHex();
                if (hsl.s === 0) {
                    hsl.h = oldHue || 0;
                    hsv.h = oldHue || 0;
                }
                var transparent = hex === '000000' && rgb.a === 0;

                return {
                    hsl: hsl,
                    hex: transparent ? 'transparent' : '#' + hex,
                    rgb: rgb,
                    hsv: hsv,
                    oldHue: data.h || oldHue || hsl.h,
                    source: data.source
                };
            },
            isValidHex: function isValidHex(hex) {
                // disable hex4 and hex8
                var lh = String(hex).charAt(0) === '#' ? 1 : 0;
                return hex.length !== 4 + lh && hex.length < 7 + lh && (0, _tinycolor2.default)(hex).isValid();
            },
            getContrastingColor: function getContrastingColor(data) {
                if (!data) {
                    return '#fff';
                }
                var col = this.toState(data);
                if (col.hex === 'transparent') {
                    return 'rgba(0,0,0,0.4)';
                }
                var yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;
                return yiq >= 128 ? '#000' : '#fff';
            }
        };
        var red = exports.red = {
            hsl: {
                a: 1,
                h: 0,
                l: 0.5,
                s: 1
            },
            hex: '#ff0000',
            rgb: {
                r: 255,
                g: 0,
                b: 0,
                a: 1
            },
            hsv: {
                h: 0,
                s: 1,
                v: 1,
                a: 1
            }
        };

        /***/
    }),
    /* 7 */
    /***/
    (function(module, exports) {

        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
            return value != null && typeof value == 'object';
        }

        module.exports = isObjectLike;


        /***/
    }),
    /* 8 */
    /***/
    (function(module, exports) {

        /**
         * Checks if `value` is the
         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
         * @example
         *
         * _.isObject({});
         * // => true
         *
         * _.isObject([1, 2, 3]);
         * // => true
         *
         * _.isObject(_.noop);
         * // => true
         *
         * _.isObject(null);
         * // => false
         */
        function isObject(value) {
            var type = typeof value;
            return value != null && (type == 'object' || type == 'function');
        }

        module.exports = isObject;


        /***/
    }),
    /* 9 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayMap = __webpack_require__(55),
            baseIteratee = __webpack_require__(129),
            baseMap = __webpack_require__(187),
            isArray = __webpack_require__(4);

        /**
         * Creates an array of values by running each element in `collection` thru
         * `iteratee`. The iteratee is invoked with three arguments:
         * (value, index|key, collection).
         *
         * Many lodash methods are guarded to work as iteratees for methods like
         * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
         *
         * The guarded methods are:
         * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
         * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
         * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
         * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Collection
         * @param {Array|Object} collection The collection to iterate over.
         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
         * @returns {Array} Returns the new mapped array.
         * @example
         *
         * function square(n) {
         *   return n * n;
         * }
         *
         * _.map([4, 8], square);
         * // => [16, 64]
         *
         * _.map({ 'a': 4, 'b': 8 }, square);
         * // => [16, 64] (iteration order is not guaranteed)
         *
         * var users = [
         *   { 'user': 'barney' },
         *   { 'user': 'fred' }
         * ];
         *
         * // The `_.property` iteratee shorthand.
         * _.map(users, 'user');
         * // => ['barney', 'fred']
         */
        function map(collection, iteratee) {
            var func = isArray(collection) ? arrayMap : baseMap;
            return func(collection, baseIteratee(iteratee, 3));
        }

        module.exports = map;


        /***/
    }),
    /* 10 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(13),
            getRawTag = __webpack_require__(118),
            objectToString = __webpack_require__(119);

        /** `Object#toString` result references. */
        var nullTag = '[object Null]',
            undefinedTag = '[object Undefined]';

        /** Built-in value references. */
        var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

        /**
         * The base implementation of `getTag` without fallbacks for buggy environments.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        function baseGetTag(value) {
            if (value == null) {
                return value === undefined ? undefinedTag : nullTag;
            }
            return (symToStringTag && symToStringTag in Object(value)) ?
                getRawTag(value) :
                objectToString(value);
        }

        module.exports = baseGetTag;


        /***/
    }),
    /* 11 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsNative = __webpack_require__(142),
            getValue = __webpack_require__(145);

        /**
         * Gets the native function at `key` of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {string} key The key of the method to get.
         * @returns {*} Returns the function if it's native, else `undefined`.
         */
        function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : undefined;
        }

        module.exports = getNative;


        /***/
    }),
    /* 12 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(process, module) { /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "b", function() {
                return css;
            });
            /* unused harmony export keyframes */
            /* unused harmony export injectGlobal */
            /* unused harmony export isStyledComponent */
            /* unused harmony export consolidateStreamedStyles */
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "a", function() {
                return ThemeProvider;
            });
            /* unused harmony export withTheme */
            /* unused harmony export ServerStyleSheet */
            /* unused harmony export StyleSheetManager */
            /* unused harmony export __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS */
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_0_is_plain_object__ = __webpack_require__(99);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_0_is_plain_object___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_is_plain_object__);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_1_stylis__ = __webpack_require__(101);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_1_stylis___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_stylis__);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_2_stylis_rule_sheet__ = __webpack_require__(102);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_2_stylis_rule_sheet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_stylis_rule_sheet__);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_3_react__ = __webpack_require__(0);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_3_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react__);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(3);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_5_hoist_non_react_statics__ = __webpack_require__(105);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_5_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_hoist_non_react_statics__);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_6_react_is__ = __webpack_require__(106);
            /* harmony import */
            var __WEBPACK_IMPORTED_MODULE_6_react_is___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_react_is__);








            /**
             * Copyright (c) 2013-present, Facebook, Inc.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             *
             * @typechecks
             */

            var _uppercasePattern = /([A-Z])/g;

            /**
             * Hyphenates a camelcased string, for example:
             *
             *   > hyphenate('backgroundColor')
             *   < "background-color"
             *
             * For CSS style names, use `hyphenateStyleName` instead which works properly
             * with all vendor prefixes, including `ms`.
             *
             * @param {string} string
             * @return {string}
             */
            function hyphenate$2(string) {
                return string.replace(_uppercasePattern, '-$1').toLowerCase();
            }

            var hyphenate_1 = hyphenate$2;

            var hyphenate = hyphenate_1;

            var msPattern = /^ms-/;

            /**
             * Hyphenates a camelcased CSS property name, for example:
             *
             *   > hyphenateStyleName('backgroundColor')
             *   < "background-color"
             *   > hyphenateStyleName('MozTransition')
             *   < "-moz-transition"
             *   > hyphenateStyleName('msTransition')
             *   < "-ms-transition"
             *
             * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
             * is converted to `-ms-`.
             *
             * @param {string} string
             * @return {string}
             */
            function hyphenateStyleName(string) {
                return hyphenate(string).replace(msPattern, '-ms-');
            }

            var hyphenateStyleName_1 = hyphenateStyleName;

            // 
            var objToCss = function objToCss(obj, prevKey) {
                var css = Object.keys(obj).filter(function(key) {
                    var chunk = obj[key];
                    return chunk !== undefined && chunk !== null && chunk !== false && chunk !== '';
                }).map(function(key) {
                    if (__WEBPACK_IMPORTED_MODULE_0_is_plain_object___default()(obj[key])) return objToCss(obj[key], key);
                    return hyphenateStyleName_1(key) + ': ' + obj[key] + ';';
                }).join(' ');
                return prevKey ? prevKey + ' {\n  ' + css + '\n}' : css;
            };

            var flatten = function flatten(chunks, executionContext) {
                return chunks.reduce(function(ruleSet, chunk) {
                    /* Remove falsey values */
                    if (chunk === undefined || chunk === null || chunk === false || chunk === '') {
                        return ruleSet;
                    }
                    /* Flatten ruleSet */
                    if (Array.isArray(chunk)) {
                        return [].concat(ruleSet, flatten(chunk, executionContext));
                    }

                    /* Handle other components */
                    if (chunk.hasOwnProperty('styledComponentId')) {
                        // $FlowFixMe not sure how to make this pass
                        return [].concat(ruleSet, ['.' + chunk.styledComponentId]);
                    }

                    /* Either execute or defer the function */
                    if (typeof chunk === 'function') {
                        return executionContext ? ruleSet.concat.apply(ruleSet, flatten([chunk(executionContext)], executionContext)) : ruleSet.concat(chunk);
                    }

                    /* Handle objects */
                    return ruleSet.concat(
                        // $FlowFixMe have to add %checks somehow to isPlainObject
                        __WEBPACK_IMPORTED_MODULE_0_is_plain_object___default()(chunk) ? objToCss(chunk) : chunk.toString());
                }, []);
            };

            // 
            // NOTE: This stylis instance is only used to split rules from SSR'd style tags
            var stylisSplitter = new __WEBPACK_IMPORTED_MODULE_1_stylis___default.a({
                global: false,
                cascade: true,
                keyframe: false,
                prefix: false,
                compress: false,
                semicolon: true
            });

            var stylis = new __WEBPACK_IMPORTED_MODULE_1_stylis___default.a({
                global: false,
                cascade: true,
                keyframe: false,
                prefix: true,
                compress: false,
                semicolon: false // NOTE: This means "autocomplete missing semicolons"
            });

            // Wrap `insertRulePlugin to build a list of rules,
            // and then make our own plugin to return the rules. This
            // makes it easier to hook into the existing SSR architecture

            var parsingRules = [];
            // eslint-disable-next-line consistent-return
            var returnRulesPlugin = function returnRulesPlugin(context) {
                if (context === -2) {
                    var parsedRules = parsingRules;
                    parsingRules = [];
                    return parsedRules;
                }
            };

            var parseRulesPlugin = __WEBPACK_IMPORTED_MODULE_2_stylis_rule_sheet___default()(function(rule) {
                parsingRules.push(rule);
            });

            stylis.use([parseRulesPlugin, returnRulesPlugin]);
            stylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);

            var stringifyRules = function stringifyRules(rules, selector, prefix) {
                var flatCSS = rules.join('').replace(/^\s*\/\/.*$/gm, ''); // replace JS comments

                var cssStr = selector && prefix ? prefix + ' ' + selector + ' { ' + flatCSS + ' }' : flatCSS;

                return stylis(prefix || !selector ? '' : selector, cssStr);
            };

            var splitByRules = function splitByRules(css) {
                return stylisSplitter('', css);
            };

            // 

            function isStyledComponent(target) /* : %checks */ {
                return (
                    // $FlowFixMe TODO: flow for styledComponentId
                    typeof target === 'function' && typeof target.styledComponentId === 'string'
                );
            }

            // 

            /* This function is DEPRECATED and will be removed on the next major version release.
             * It was needed to rehydrate all style blocks prepended to chunks before React
             * tries to rehydrate its HTML stream. Since the master StyleSheet will now detect
             * the use of streamed style tags and will perform the rehydration earlier when needed
             * this function will not be needed anymore */
            function consolidateStreamedStyles() {
                if (false) {
                    // eslint-disable-next-line no-console
                    console.warn('styled-components automatically does streaming SSR rehydration now.\n' + 'Calling consolidateStreamedStyles manually is no longer necessary and a noop now.\n' + '- Please remove the consolidateStreamedStyles call from your client.');
                }
            }

            // 
            /* eslint-disable no-bitwise */

            /* This is the "capacity" of our alphabet i.e. 2x26 for all letters plus their capitalised
             * counterparts */
            var charsLength = 52;

            /* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */
            var getAlphabeticChar = function getAlphabeticChar(code) {
                return String.fromCharCode(code + (code > 25 ? 39 : 97));
            };

            /* input a number, usually a hash and convert it to base-52 */
            var generateAlphabeticName = function generateAlphabeticName(code) {
                var name = '';
                var x = void 0;

                /* get a char and divide by alphabet-length */
                for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {
                    name = getAlphabeticChar(x % charsLength) + name;
                }

                return getAlphabeticChar(x % charsLength) + name;
            };

            // 

            var interleave = (function(strings, interpolations) {
                return interpolations.reduce(function(array, interp, i) {
                    return array.concat(interp, strings[i + 1]);
                }, [strings[0]]);
            });

            var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
                return typeof obj;
            } : function(obj) {
                return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            };











            var classCallCheck = function(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                    throw new TypeError("Cannot call a class as a function");
                }
            };

            var createClass = function() {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function(Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();







            var _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            };



            var inherits = function(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }

                subClass.prototype = Object.create(superClass && superClass.prototype, {
                    constructor: {
                        value: subClass,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
            };









            var objectWithoutProperties = function(obj, keys) {
                var target = {};

                for (var i in obj) {
                    if (keys.indexOf(i) >= 0) continue;
                    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
                    target[i] = obj[i];
                }

                return target;
            };

            var possibleConstructorReturn = function(self, call) {
                if (!self) {
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }

                return call && (typeof call === "object" || typeof call === "function") ? call : self;
            };

            // 
            var css = (function(styles) {
                for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    interpolations[_key - 1] = arguments[_key];
                }

                if (!Array.isArray(styles) && (typeof styles === 'undefined' ? 'undefined' : _typeof(styles)) === 'object') {
                    return flatten(interleave([], [styles].concat(interpolations)));
                }
                return flatten(interleave(styles, interpolations));
            });

            var stream = {}

            // 


            var SC_ATTR = typeof process !== 'undefined' && Object({
                "NODE_ENV": "production",
                "PUBLIC_URL": ""
            }).SC_ATTR || 'data-styled-components';
            var SC_STREAM_ATTR = 'data-styled-streamed';
            var CONTEXT_KEY = '__styled-components-stylesheet__';

            var IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;

            var DISABLE_SPEEDY = typeof false === 'boolean' && false || "production" !== 'production';

            // 
            var SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm;

            var extractComps = (function(maybeCSS) {
                var css = '' + (maybeCSS || ''); // Definitely a string, and a clone
                var existingComponents = [];
                css.replace(SC_COMPONENT_ID, function(match, componentId, matchIndex) {
                    existingComponents.push({
                        componentId: componentId,
                        matchIndex: matchIndex
                    });
                    return match;
                });
                return existingComponents.map(function(_ref, i) {
                    var componentId = _ref.componentId,
                        matchIndex = _ref.matchIndex;

                    var nextComp = existingComponents[i + 1];
                    var cssFromDOM = nextComp ? css.slice(matchIndex, nextComp.matchIndex) : css.slice(matchIndex);
                    return {
                        componentId: componentId,
                        cssFromDOM: cssFromDOM
                    };
                });
            });

            // 
            /* eslint-disable camelcase, no-undef */

            var getNonce = (function() {
                return true ? __webpack_require__.nc : null;
            });

            // 
            // Helper to call a given function, only once
            var once = (function(cb) {
                var called = false;

                return function() {
                    if (!called) {
                        called = true;
                        cb();
                    }
                };
            });

            // 
            /* These are helpers for the StyleTags to keep track of the injected
             * rule names for each (component) ID that they're keeping track of.
             * They're crucial for detecting whether a name has already been
             * injected.
             * (This excludes rehydrated names) */

            /* adds a new ID:name pairing to a names dictionary */
            var addNameForId = function addNameForId(names, id, name) {
                if (name) {
                    // eslint-disable-next-line no-param-reassign
                    var namesForId = names[id] || (names[id] = Object.create(null));
                    namesForId[name] = true;
                }
            };

            /* resets an ID entirely by overwriting it in the dictionary */
            var resetIdNames = function resetIdNames(names, id) {
                // eslint-disable-next-line no-param-reassign
                names[id] = Object.create(null);
            };

            /* factory for a names dictionary checking the existance of an ID:name pairing */
            var hasNameForId = function hasNameForId(names) {
                return function(id, name) {
                    return names[id] !== undefined && names[id][name];
                };
            };

            /* stringifies names for the html/element output */
            var stringifyNames = function stringifyNames(names) {
                var str = '';
                // eslint-disable-next-line guard-for-in
                for (var id in names) {
                    str += Object.keys(names[id]).join(' ') + ' ';
                }
                return str.trim();
            };

            /* clones the nested names dictionary */
            var cloneNames = function cloneNames(names) {
                var clone = Object.create(null);
                // eslint-disable-next-line guard-for-in
                for (var id in names) {
                    clone[id] = _extends({}, names[id]);
                }
                return clone;
            };

            // 
            /* These are helpers that deal with the insertRule (aka speedy) API
             * They are used in the StyleTags and specifically the speedy tag
             */

            /* retrieve a sheet for a given style tag */
            var sheetForTag = function sheetForTag(tag) {
                // $FlowFixMe
                if (tag.sheet) return tag.sheet;

                /* Firefox quirk requires us to step through all stylesheets to find one owned by the given tag */
                var size = document.styleSheets.length;
                for (var i = 0; i < size; i += 1) {
                    var sheet = document.styleSheets[i];
                    // $FlowFixMe
                    if (sheet.ownerNode === tag) return sheet;
                }

                /* we should always be able to find a tag */
                throw new Error();
            };

            /* insert a rule safely and return whether it was actually injected */
            var safeInsertRule = function safeInsertRule(sheet, cssRule, index) {
                /* abort early if cssRule string is falsy */
                if (!cssRule) return false;

                var maxIndex = sheet.cssRules.length;

                try {
                    /* use insertRule and cap passed index with maxIndex (no of cssRules) */
                    sheet.insertRule(cssRule, index <= maxIndex ? index : maxIndex);
                } catch (err) {
                    /* any error indicates an invalid rule */
                    return false;
                }

                return true;
            };

            /* deletes `size` rules starting from `removalIndex` */
            var deleteRules = function deleteRules(sheet, removalIndex, size) {
                var lowerBound = removalIndex - size;
                for (var i = removalIndex; i > lowerBound; i -= 1) {
                    sheet.deleteRule(i);
                }
            };

            // 
            /* eslint-disable flowtype/object-type-delimiter */
            /* eslint-disable react/prop-types */

            /* this error is used for makeStyleTag */
            var parentNodeUnmountedErr = false ? '\nTrying to insert a new style tag, but the given Node is unmounted!\n- Are you using a custom target that isn\'t mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n'.trim() : '';

            /* this error is used for tags */
            var throwCloneTagErr = function throwCloneTagErr() {
                throw new Error(false ? '\nThe clone method cannot be used on the client!\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n'.trim() : '');
            };

            /* this marker separates component styles and is important for rehydration */
            var makeTextMarker = function makeTextMarker(id) {
                return '\n/* sc-component-id: ' + id + ' */\n';
            };

            /* add up all numbers in array up until and including the index */
            var addUpUntilIndex = function addUpUntilIndex(sizes, index) {
                var totalUpToIndex = 0;
                for (var i = 0; i <= index; i += 1) {
                    totalUpToIndex += sizes[i];
                }

                return totalUpToIndex;
            };

            /* create a new style tag after lastEl */
            var makeStyleTag = function makeStyleTag(target, tagEl, insertBefore) {
                var el = document.createElement('style');
                el.setAttribute(SC_ATTR, '');

                var nonce = getNonce();
                if (nonce) {
                    el.setAttribute('nonce', nonce);
                }

                /* Work around insertRule quirk in EdgeHTML */
                el.appendChild(document.createTextNode(''));

                if (target && !tagEl) {
                    /* Append to target when no previous element was passed */
                    target.appendChild(el);
                } else {
                    if (!tagEl || !target || !tagEl.parentNode) {
                        throw new Error(parentNodeUnmountedErr);
                    }

                    /* Insert new style tag after the previous one */
                    tagEl.parentNode.insertBefore(el, insertBefore ? tagEl : tagEl.nextSibling);
                }

                return el;
            };

            /* takes a css factory function and outputs an html styled tag factory */
            var wrapAsHtmlTag = function wrapAsHtmlTag(css, names) {
                return function(additionalAttrs) {
                    var nonce = getNonce();
                    var attrs = [nonce && 'nonce="' + nonce + '"', SC_ATTR + '="' + stringifyNames(names) + '"', additionalAttrs];

                    var htmlAttr = attrs.filter(Boolean).join(' ');
                    return '<style ' + htmlAttr + '>' + css() + '</style>';
                };
            };

            /* takes a css factory function and outputs an element factory */
            var wrapAsElement = function wrapAsElement(css, names) {
                return function() {
                    var _props;

                    var props = (_props = {}, _props[SC_ATTR] = stringifyNames(names), _props);

                    var nonce = getNonce();
                    if (nonce) {
                        // $FlowFixMe
                        props.nonce = nonce;
                    }

                    // eslint-disable-next-line react/no-danger
                    return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement('style', _extends({}, props, {
                        dangerouslySetInnerHTML: {
                            __html: css()
                        }
                    }));
                };
            };

            var getIdsFromMarkersFactory = function getIdsFromMarkersFactory(markers) {
                return function() {
                    return Object.keys(markers);
                };
            };

            /* speedy tags utilise insertRule */
            var makeSpeedyTag = function makeSpeedyTag(el, getImportRuleTag) {
                var names = Object.create(null);
                var markers = Object.create(null);
                var sizes = [];

                var extractImport = getImportRuleTag !== undefined;
                /* indicates whther getImportRuleTag was called */
                var usedImportRuleTag = false;

                var insertMarker = function insertMarker(id) {
                    var prev = markers[id];
                    if (prev !== undefined) {
                        return prev;
                    }

                    markers[id] = sizes.length;
                    sizes.push(0);
                    resetIdNames(names, id);

                    return markers[id];
                };

                var insertRules = function insertRules(id, cssRules, name) {
                    var marker = insertMarker(id);
                    var sheet = sheetForTag(el);
                    var insertIndex = addUpUntilIndex(sizes, marker);

                    var injectedRules = 0;
                    var importRules = [];
                    var cssRulesSize = cssRules.length;

                    for (var i = 0; i < cssRulesSize; i += 1) {
                        var cssRule = cssRules[i];
                        var mayHaveImport = extractImport; /* @import rules are reordered to appear first */
                        if (mayHaveImport && cssRule.indexOf('@import') !== -1) {
                            importRules.push(cssRule);
                        } else if (safeInsertRule(sheet, cssRule, insertIndex + injectedRules)) {
                            mayHaveImport = false;
                            injectedRules += 1;
                        }
                    }

                    if (extractImport && importRules.length > 0) {
                        usedImportRuleTag = true;
                        // $FlowFixMe
                        getImportRuleTag().insertRules(id + '-import', importRules);
                    }

                    sizes[marker] += injectedRules; /* add up no of injected rules */
                    addNameForId(names, id, name);
                };

                var removeRules = function removeRules(id) {
                    var marker = markers[id];
                    if (marker === undefined) return;

                    var size = sizes[marker];
                    var sheet = sheetForTag(el);
                    var removalIndex = addUpUntilIndex(sizes, marker);
                    deleteRules(sheet, removalIndex, size);
                    sizes[marker] = 0;
                    resetIdNames(names, id);

                    if (extractImport && usedImportRuleTag) {
                        // $FlowFixMe
                        getImportRuleTag().removeRules(id + '-import');
                    }
                };

                var css = function css() {
                    var _sheetForTag = sheetForTag(el),
                        cssRules = _sheetForTag.cssRules;

                    var str = '';

                    // eslint-disable-next-line guard-for-in
                    for (var id in markers) {
                        str += makeTextMarker(id);
                        var marker = markers[id];
                        var end = addUpUntilIndex(sizes, marker);
                        var size = sizes[marker];
                        for (var i = end - size; i < end; i += 1) {
                            var rule = cssRules[i];
                            if (rule !== undefined) {
                                str += rule.cssText;
                            }
                        }
                    }

                    return str;
                };

                return {
                    styleTag: el,
                    getIds: getIdsFromMarkersFactory(markers),
                    hasNameForId: hasNameForId(names),
                    insertMarker: insertMarker,
                    insertRules: insertRules,
                    removeRules: removeRules,
                    css: css,
                    toHTML: wrapAsHtmlTag(css, names),
                    toElement: wrapAsElement(css, names),
                    clone: throwCloneTagErr
                };
            };

            var makeBrowserTag = function makeBrowserTag(el, getImportRuleTag) {
                var names = Object.create(null);
                var markers = Object.create(null);

                var extractImport = getImportRuleTag !== undefined;
                var makeTextNode = function makeTextNode(id) {
                    return document.createTextNode(makeTextMarker(id));
                };

                /* indicates whther getImportRuleTag was called */
                var usedImportRuleTag = false;

                var insertMarker = function insertMarker(id) {
                    var prev = markers[id];
                    if (prev !== undefined) {
                        return prev;
                    }

                    markers[id] = makeTextNode(id);
                    el.appendChild(markers[id]);
                    names[id] = Object.create(null);

                    return markers[id];
                };

                var insertRules = function insertRules(id, cssRules, name) {
                    var marker = insertMarker(id);
                    var importRules = [];
                    var cssRulesSize = cssRules.length;

                    for (var i = 0; i < cssRulesSize; i += 1) {
                        var rule = cssRules[i];
                        var mayHaveImport = extractImport;
                        if (mayHaveImport && rule.indexOf('@import') !== -1) {
                            importRules.push(rule);
                        } else {
                            mayHaveImport = false;
                            var separator = i === cssRulesSize - 1 ? '' : ' ';
                            marker.appendData('' + rule + separator);
                        }
                    }

                    addNameForId(names, id, name);

                    if (extractImport && importRules.length > 0) {
                        usedImportRuleTag = true;
                        // $FlowFixMe
                        getImportRuleTag().insertRules(id + '-import', importRules);
                    }
                };

                var removeRules = function removeRules(id) {
                    var marker = markers[id];
                    if (marker === undefined) return;

                    /* create new empty text node and replace the current one */
                    var newMarker = makeTextNode(id);
                    el.replaceChild(newMarker, marker);
                    markers[id] = newMarker;
                    resetIdNames(names, id);

                    if (extractImport && usedImportRuleTag) {
                        // $FlowFixMe
                        getImportRuleTag().removeRules(id + '-import');
                    }
                };

                var css = function css() {
                    var str = '';
                    // eslint-disable-next-line guard-for-in
                    for (var id in markers) {
                        str += markers[id].data;
                    }
                    return str;
                };

                return {
                    styleTag: el,
                    getIds: getIdsFromMarkersFactory(markers),
                    hasNameForId: hasNameForId(names),
                    insertMarker: insertMarker,
                    insertRules: insertRules,
                    removeRules: removeRules,
                    css: css,
                    toHTML: wrapAsHtmlTag(css, names),
                    toElement: wrapAsElement(css, names),
                    clone: throwCloneTagErr
                };
            };

            var makeServerTagInternal = function makeServerTagInternal(namesArg, markersArg) {
                var names = namesArg === undefined ? Object.create(null) : namesArg;
                var markers = markersArg === undefined ? Object.create(null) : markersArg;

                var insertMarker = function insertMarker(id) {
                    var prev = markers[id];
                    if (prev !== undefined) {
                        return prev;
                    }

                    return markers[id] = [''];
                };

                var insertRules = function insertRules(id, cssRules, name) {
                    var marker = insertMarker(id);
                    marker[0] += cssRules.join(' ');
                    addNameForId(names, id, name);
                };

                var removeRules = function removeRules(id) {
                    var marker = markers[id];
                    if (marker === undefined) return;
                    marker[0] = '';
                    resetIdNames(names, id);
                };

                var css = function css() {
                    var str = '';
                    // eslint-disable-next-line guard-for-in
                    for (var id in markers) {
                        var cssForId = markers[id][0];
                        if (cssForId) {
                            str += makeTextMarker(id) + cssForId;
                        }
                    }
                    return str;
                };

                var clone = function clone() {
                    var namesClone = cloneNames(names);
                    var markersClone = Object.create(null);

                    // eslint-disable-next-line guard-for-in
                    for (var id in markers) {
                        markersClone[id] = [markers[id][0]];
                    }

                    return makeServerTagInternal(namesClone, markersClone);
                };

                var tag = {
                    styleTag: null,
                    getIds: getIdsFromMarkersFactory(markers),
                    hasNameForId: hasNameForId(names),
                    insertMarker: insertMarker,
                    insertRules: insertRules,
                    removeRules: removeRules,
                    css: css,
                    toHTML: wrapAsHtmlTag(css, names),
                    toElement: wrapAsElement(css, names),
                    clone: clone
                };

                return tag;
            };

            var makeServerTag = function makeServerTag() {
                return makeServerTagInternal();
            };

            var makeTag = function makeTag(target, tagEl, forceServer, insertBefore, getImportRuleTag) {
                if (IS_BROWSER && !forceServer) {
                    var el = makeStyleTag(target, tagEl, insertBefore);
                    if (DISABLE_SPEEDY) {
                        return makeBrowserTag(el, getImportRuleTag);
                    } else {
                        return makeSpeedyTag(el, getImportRuleTag);
                    }
                }

                return makeServerTag();
            };

            /* wraps a given tag so that rehydration is performed once when necessary */
            var makeRehydrationTag = function makeRehydrationTag(tag, els, extracted, names, immediateRehydration) {
                /* rehydration function that adds all rules to the new tag */
                var rehydrate = once(function() {
                    /* add all extracted components to the new tag */
                    for (var i = 0; i < extracted.length; i += 1) {
                        var _extracted$i = extracted[i],
                            componentId = _extracted$i.componentId,
                            cssFromDOM = _extracted$i.cssFromDOM;

                        var cssRules = splitByRules(cssFromDOM);
                        tag.insertRules(componentId, cssRules);
                    }

                    /* remove old HTMLStyleElements, since they have been rehydrated */
                    for (var _i = 0; _i < els.length; _i += 1) {
                        var el = els[_i];
                        if (el.parentNode) {
                            el.parentNode.removeChild(el);
                        }
                    }
                });

                if (immediateRehydration) rehydrate();

                return _extends({}, tag, {
                    /* add rehydration hook to insertion methods */
                    insertMarker: function insertMarker(id) {
                        rehydrate();
                        return tag.insertMarker(id);
                    },
                    insertRules: function insertRules(id, cssRules, name) {
                        rehydrate();
                        return tag.insertRules(id, cssRules, name);
                    }
                });
            };

            // 

            /* determine the maximum number of components before tags are sharded */
            var MAX_SIZE = void 0;
            if (IS_BROWSER) {
                /* in speedy mode we can keep a lot more rules in a sheet before a slowdown can be expected */
                MAX_SIZE = DISABLE_SPEEDY ? 40 : 1000;
            } else {
                /* for servers we do not need to shard at all */
                MAX_SIZE = -1;
            }

            var sheetRunningId = 0;
            var master = void 0;

            var StyleSheet = function() {
                /* a map from ids to tags */
                /* deferred rules for a given id */
                /* this is used for not reinjecting rules via hasNameForId() */
                /* when rules for an id are removed using remove() we have to ignore rehydratedNames for it */
                /* a list of tags belonging to this StyleSheet */
                /* a tag for import rules */
                /* current capacity until a new tag must be created */
                /* children (aka clones) of this StyleSheet inheriting all and future injections */

                function StyleSheet() {
                    var _this = this;

                    var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : IS_BROWSER ? document.head : null;
                    var forceServer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                    classCallCheck(this, StyleSheet);

                    this.getImportRuleTag = function() {
                        var importRuleTag = _this.importRuleTag;

                        if (importRuleTag !== undefined) {
                            return importRuleTag;
                        }

                        var firstTag = _this.tags[0];
                        var insertBefore = true;

                        return _this.importRuleTag = makeTag(_this.target, firstTag ? firstTag.styleTag : null, _this.forceServer, insertBefore);
                    };

                    sheetRunningId += 1;
                    this.id = sheetRunningId;
                    this.sealed = false;
                    this.forceServer = forceServer;
                    this.target = forceServer ? null : target;
                    this.tagMap = {};
                    this.deferred = {};
                    this.rehydratedNames = {};
                    this.ignoreRehydratedNames = {};
                    this.tags = [];
                    this.capacity = 1;
                    this.clones = [];
                }

                /* rehydrate all SSR'd style tags */


                StyleSheet.prototype.rehydrate = function rehydrate() {
                    if (!IS_BROWSER || this.forceServer) {
                        return this;
                    }

                    var els = [];
                    var names = [];
                    var extracted = [];
                    var isStreamed = false;

                    /* retrieve all of our SSR style elements from the DOM */
                    var nodes = document.querySelectorAll('style[' + SC_ATTR + ']');
                    var nodesSize = nodes.length;

                    /* abort rehydration if no previous style tags were found */
                    if (nodesSize === 0) {
                        return this;
                    }

                    for (var i = 0; i < nodesSize; i += 1) {
                        // $FlowFixMe: We can trust that all elements in this query are style elements
                        var el = nodes[i];

                        /* check if style tag is a streamed tag */
                        isStreamed = !!el.getAttribute(SC_STREAM_ATTR) || isStreamed;

                        /* retrieve all component names */
                        var elNames = (el.getAttribute(SC_ATTR) || '').trim().split(/\s+/);
                        var elNamesSize = elNames.length;
                        for (var j = 0; j < elNamesSize; j += 1) {
                            var name = elNames[j];
                            /* add rehydrated name to sheet to avoid readding styles */
                            this.rehydratedNames[name] = true;
                            names.push(name);
                        }

                        /* extract all components and their CSS */
                        extracted = extracted.concat(extractComps(el.textContent));
                        /* store original HTMLStyleElement */
                        els.push(el);
                    }

                    /* abort rehydration if nothing was extracted */
                    var extractedSize = extracted.length;
                    if (extractedSize === 0) {
                        return this;
                    }

                    /* create a tag to be used for rehydration */
                    var tag = this.makeTag(null);
                    var rehydrationTag = makeRehydrationTag(tag, els, extracted, names, isStreamed);

                    /* reset capacity and adjust MAX_SIZE by the initial size of the rehydration */
                    this.capacity = Math.max(1, MAX_SIZE - extractedSize);
                    this.tags.push(rehydrationTag);

                    /* retrieve all component ids */
                    for (var _j = 0; _j < extractedSize; _j += 1) {
                        this.tagMap[extracted[_j].componentId] = rehydrationTag;
                    }

                    return this;
                };

                /* retrieve a "master" instance of StyleSheet which is typically used when no other is available
                 * The master StyleSheet is targeted by injectGlobal, keyframes, and components outside of any
                 * StyleSheetManager's context */


                /* reset the internal "master" instance */
                StyleSheet.reset = function reset() {
                    var forceServer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

                    master = new StyleSheet(undefined, forceServer).rehydrate();
                };

                /* adds "children" to the StyleSheet that inherit all of the parents' rules
                 * while their own rules do not affect the parent */


                StyleSheet.prototype.clone = function clone() {
                    var sheet = new StyleSheet(this.target, this.forceServer);
                    /* add to clone array */
                    this.clones.push(sheet);

                    /* clone all tags */
                    sheet.tags = this.tags.map(function(tag) {
                        var ids = tag.getIds();
                        var newTag = tag.clone();

                        /* reconstruct tagMap */
                        for (var i = 0; i < ids.length; i += 1) {
                            sheet.tagMap[ids[i]] = newTag;
                        }

                        return newTag;
                    });

                    /* clone other maps */
                    sheet.rehydratedNames = _extends({}, this.rehydratedNames);
                    sheet.deferred = _extends({}, this.deferred);

                    return sheet;
                };

                /* force StyleSheet to create a new tag on the next injection */


                StyleSheet.prototype.sealAllTags = function sealAllTags() {
                    this.capacity = 1;
                    this.sealed = true;
                };

                StyleSheet.prototype.makeTag = function makeTag$$1(tag) {
                    var lastEl = tag ? tag.styleTag : null;
                    var insertBefore = false;

                    return makeTag(this.target, lastEl, this.forceServer, insertBefore, this.getImportRuleTag);
                };

                /* get a tag for a given componentId, assign the componentId to one, or shard */
                StyleSheet.prototype.getTagForId = function getTagForId(id) {
                    /* simply return a tag, when the componentId was already assigned one */
                    var prev = this.tagMap[id];
                    if (prev !== undefined && !this.sealed) {
                        return prev;
                    }

                    var tag = this.tags[this.tags.length - 1];

                    /* shard (create a new tag) if the tag is exhausted (See MAX_SIZE) */
                    this.capacity -= 1;
                    if (this.capacity === 0) {
                        this.capacity = MAX_SIZE;
                        this.sealed = false;
                        tag = this.makeTag(tag);
                        this.tags.push(tag);
                    }

                    return this.tagMap[id] = tag;
                };

                /* mainly for injectGlobal to check for its id */


                StyleSheet.prototype.hasId = function hasId(id) {
                    return this.tagMap[id] !== undefined;
                };

                /* caching layer checking id+name to already have a corresponding tag and injected rules */


                StyleSheet.prototype.hasNameForId = function hasNameForId(id, name) {
                    /* exception for rehydrated names which are checked separately */
                    if (this.ignoreRehydratedNames[id] === undefined && this.rehydratedNames[name]) {
                        return true;
                    }

                    var tag = this.tagMap[id];
                    return tag !== undefined && tag.hasNameForId(id, name);
                };

                /* registers a componentId and registers it on its tag */


                StyleSheet.prototype.deferredInject = function deferredInject(id, cssRules) {
                    /* don't inject when the id is already registered */
                    if (this.tagMap[id] !== undefined) return;

                    var clones = this.clones;

                    for (var i = 0; i < clones.length; i += 1) {
                        clones[i].deferredInject(id, cssRules);
                    }

                    this.getTagForId(id).insertMarker(id);
                    this.deferred[id] = cssRules;
                };

                /* injects rules for a given id with a name that will need to be cached */


                StyleSheet.prototype.inject = function inject(id, cssRules, name) {
                    var clones = this.clones;

                    for (var i = 0; i < clones.length; i += 1) {
                        clones[i].inject(id, cssRules, name);
                    }

                    /* add deferred rules for component */
                    var injectRules = cssRules;
                    var deferredRules = this.deferred[id];
                    if (deferredRules !== undefined) {
                        injectRules = deferredRules.concat(injectRules);
                        delete this.deferred[id];
                    }

                    var tag = this.getTagForId(id);
                    tag.insertRules(id, injectRules, name);
                };

                /* removes all rules for a given id, which doesn't remove its marker but resets it */


                StyleSheet.prototype.remove = function remove(id) {
                    var tag = this.tagMap[id];
                    if (tag === undefined) return;

                    var clones = this.clones;

                    for (var i = 0; i < clones.length; i += 1) {
                        clones[i].remove(id);
                    }

                    /* remove all rules from the tag */
                    tag.removeRules(id);
                    /* ignore possible rehydrated names */
                    this.ignoreRehydratedNames[id] = true;
                    /* delete possible deferred rules */
                    delete this.deferred[id];
                };

                StyleSheet.prototype.toHTML = function toHTML() {
                    return this.tags.map(function(tag) {
                        return tag.toHTML();
                    }).join('');
                };

                StyleSheet.prototype.toReactElements = function toReactElements() {
                    var id = this.id;


                    return this.tags.map(function(tag, i) {
                        var key = 'sc-' + id + '-' + i;
                        return Object(__WEBPACK_IMPORTED_MODULE_3_react__["cloneElement"])(tag.toElement(), {
                            key: key
                        });
                    });
                };

                createClass(StyleSheet, null, [{
                    key: 'master',
                    get: function get$$1() {
                        return master || (master = new StyleSheet().rehydrate());
                    }

                    /* NOTE: This is just for backwards-compatibility with jest-styled-components */

                }, {
                    key: 'instance',
                    get: function get$$1() {
                        return StyleSheet.master;
                    }
                }]);
                return StyleSheet;
            }();

            var _StyleSheetManager$ch;

            // 
            /* this error is used for makeStyleTag */
            var targetPropErr = false ? '\nThe StyleSheetManager expects a valid target or sheet prop!\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n'.trim() : '';

            var StyleSheetManager = function(_Component) {
                inherits(StyleSheetManager, _Component);

                function StyleSheetManager() {
                    classCallCheck(this, StyleSheetManager);
                    return possibleConstructorReturn(this, _Component.apply(this, arguments));
                }

                StyleSheetManager.prototype.getChildContext = function getChildContext() {
                    var _ref;

                    return _ref = {}, _ref[CONTEXT_KEY] = this.sheetInstance, _ref;
                };

                StyleSheetManager.prototype.componentWillMount = function componentWillMount() {
                    if (this.props.sheet) {
                        this.sheetInstance = this.props.sheet;
                    } else if (this.props.target) {
                        this.sheetInstance = new StyleSheet(this.props.target);
                    } else {
                        throw new Error(targetPropErr);
                    }
                };

                StyleSheetManager.prototype.render = function render() {
                    /* eslint-disable react/prop-types */
                    // Flow v0.43.1 will report an error accessing the `children` property,
                    // but v0.47.0 will not. It is necessary to use a type cast instead of
                    // a "fixme" comment to satisfy both Flow versions.
                    return __WEBPACK_IMPORTED_MODULE_3_react___default.a.Children.only(this.props.children);
                };

                return StyleSheetManager;
            }(__WEBPACK_IMPORTED_MODULE_3_react__["Component"]);

            StyleSheetManager.childContextTypes = (_StyleSheetManager$ch = {}, _StyleSheetManager$ch[CONTEXT_KEY] = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.instanceOf(StyleSheet), __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.instanceOf(ServerStyleSheet)]).isRequired, _StyleSheetManager$ch);

            false ? StyleSheetManager.propTypes = {
                sheet: PropTypes.oneOfType([PropTypes.instanceOf(StyleSheet), PropTypes.instanceOf(ServerStyleSheet)]),
                target: PropTypes.shape({
                    appendChild: PropTypes.func.isRequired
                })
            } : void 0;

            // 
            /* eslint-disable no-underscore-dangle */
            /* this error is used for makeStyleTag */
            var sheetClosedErr = false ? '\nCan\'t collect styles once you\'ve consumed a ServerStyleSheet\'s styles!\nServerStyleSheet is a one off instance for each server-side render cycle.\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n'.trim() : '';

            var streamBrowserErr = false ? 'Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.' : '';

            var ServerStyleSheet = function() {
                function ServerStyleSheet() {
                    classCallCheck(this, ServerStyleSheet);

                    /* The master sheet might be reset, so keep a reference here */
                    this.masterSheet = StyleSheet.master;
                    this.instance = this.masterSheet.clone();
                    this.closed = false;
                }

                ServerStyleSheet.prototype.complete = function complete() {
                    if (!this.closed) {
                        /* Remove closed StyleSheets from the master sheet */
                        var index = this.masterSheet.clones.indexOf(this.instance);
                        this.masterSheet.clones.splice(index, 1);
                        this.closed = true;
                    }
                };

                ServerStyleSheet.prototype.collectStyles = function collectStyles(children) {
                    if (this.closed) {
                        throw new Error(sheetClosedErr);
                    }

                    return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(
                        StyleSheetManager, {
                            sheet: this.instance
                        },
                        children
                    );
                };

                ServerStyleSheet.prototype.getStyleTags = function getStyleTags() {
                    this.complete();
                    return this.instance.toHTML();
                };

                ServerStyleSheet.prototype.getStyleElement = function getStyleElement() {
                    this.complete();
                    return this.instance.toReactElements();
                };

                ServerStyleSheet.prototype.interleaveWithNodeStream = function interleaveWithNodeStream(readableStream) {
                    var _this = this;

                    {
                        throw new Error(streamBrowserErr);
                    }

                    /* the tag index keeps track of which tags have already been emitted */
                    var instance = this.instance;

                    var instanceTagIndex = 0;

                    var streamAttr = SC_STREAM_ATTR + '="true"';

                    var transformer = new stream.Transform({
                        transform: function appendStyleChunks(chunk, /* encoding */ _, callback) {
                            var tags = instance.tags;

                            var html = '';

                            /* retrieve html for each new style tag */
                            for (; instanceTagIndex < tags.length; instanceTagIndex += 1) {
                                var tag = tags[instanceTagIndex];
                                html += tag.toHTML(streamAttr);
                            }

                            /* force our StyleSheets to emit entirely new tags */
                            instance.sealAllTags();

                            /* prepend style html to chunk */
                            this.push(html + chunk);
                            callback();
                        }
                    });

                    readableStream.on('end', function() {
                        return _this.complete();
                    });
                    readableStream.on('error', function(err) {
                        _this.complete();

                        // forward the error to the transform stream
                        transformer.emit('error', err);
                    });

                    return readableStream.pipe(transformer);
                };

                return ServerStyleSheet;
            }();

            // 

            var LIMIT = 200;

            var createWarnTooManyClasses = (function(displayName) {
                var generatedClasses = {};
                var warningSeen = false;

                return function(className) {
                    if (!warningSeen) {
                        generatedClasses[className] = true;
                        if (Object.keys(generatedClasses).length >= LIMIT) {
                            // Unable to find latestRule in test environment.
                            /* eslint-disable no-console, prefer-template */
                            console.warn('Over ' + LIMIT + ' classes were generated for component ' + displayName + '. \n' + 'Consider using the attrs method, together with a style object for frequently changed styles.\n' + 'Example:\n' + '  const Component = styled.div.attrs({\n' + '    style: ({ background }) => ({\n' + '      background,\n' + '    }),\n' + '  })`width: 100%;`\n\n' + '  <Component />');
                            warningSeen = true;
                            generatedClasses = {};
                        }
                    }
                };
            });

            // 

            var determineTheme = (function(props, fallbackTheme, defaultProps) {
                // Props should take precedence over ThemeProvider, which should take precedence over
                // defaultProps, but React automatically puts defaultProps on props.

                /* eslint-disable react/prop-types */
                var isDefaultTheme = defaultProps && props.theme === defaultProps.theme;
                var theme = props.theme && !isDefaultTheme ? props.theme : fallbackTheme;
                /* eslint-enable */

                return theme;
            });

            // 
            var escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g;
            var dashesAtEnds = /(^-|-$)/g;

            /**
             * TODO: Explore using CSS.escape when it becomes more available
             * in evergreen browsers.
             */
            function escape(str) {
                return str
                    // Replace all possible CSS selectors
                    .replace(escapeRegex, '-')

                    // Remove extraneous hyphens at the start and end
                    .replace(dashesAtEnds, '');
            }

            // 

            function getComponentName(target) {
                return target.displayName || target.name || 'Component';
            }

            // 

            function isTag(target) /* : %checks */ {
                return typeof target === 'string';
            }

            // 
            function generateDisplayName(target) {
                return isTag(target) ? 'styled.' + target : 'Styled(' + getComponentName(target) + ')';
            }

            // 
            /* eslint-disable max-len */
            /**
             * Trying to avoid the unknown-prop errors on styled components by filtering by
             * React's attribute whitelist.
             *
             * To regenerate this regex:
             *
             * 1. `npm i -g regexgen` (https://github.com/devongovett/regexgen)
             * 2. Run `regexgen` with the list of space-separated words below as input
             * 3. Surround the emitted regex with this: `/^(GENERATED_REGEX)$/` -- this will ensure a full string match
             *    and no false positives from partials
             * */
            /*
            children dangerouslySetInnerHTML key ref autoFocus defaultValue valueLink defaultChecked checkedLink innerHTML suppressContentEditableWarning onFocusIn onFocusOut className onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown onKeyPress onKeyUp onFocus onBlur onChange onInput onInvalid onSubmit onReset onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onAnimationStart onAnimationEnd onAnimationIteration onTransitionEnd onCopyCapture onCutCapture onPasteCapture onCompositionEndCapture onCompositionStartCapture onCompositionUpdateCapture onKeyDownCapture onKeyPressCapture onKeyUpCapture onFocusCapture onBlurCapture onChangeCapture onInputCapture onSubmitCapture onResetCapture onClickCapture onContextMenuCapture onDoubleClickCapture onDragCapture onDragEndCapture onDragEnterCapture onDragExitCapture onDragLeaveCapture onDragOverCapture onDragStartCapture onDropCapture onMouseDownCapture onMouseEnterCapture onMouseLeaveCapture onMouseMoveCapture onMouseOutCapture onMouseOverCapture onMouseUpCapture onSelectCapture onTouchCancelCapture onTouchEndCapture onTouchMoveCapture onTouchStartCapture onScrollCapture onWheelCapture onAbortCapture onCanPlayCapture onCanPlayThroughCapture onDurationChangeCapture onEmptiedCapture onEncryptedCapture onEndedCapture onErrorCapture onLoadedDataCapture onLoadedMetadataCapture onLoadStartCapture onPauseCapture onPlayCapture onPlayingCapture onProgressCapture onRateChangeCapture onSeekedCapture onSeekingCapture onStalledCapture onSuspendCapture onTimeUpdateCapture onVolumeChangeCapture onWaitingCapture onLoadCapture onAnimationStartCapture onAnimationEndCapture onAnimationIterationCapture onTransitionEndCapture accept acceptCharset accessKey action allowFullScreen allowTransparency alt as async autoComplete autoPlay capture cellPadding cellSpacing charSet challenge checked cite classID className cols colSpan content contentEditable contextMenu controlsList controls coords crossOrigin data dateTime default defer dir disabled download draggable encType form formAction formEncType formMethod formNoValidate formTarget frameBorder headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media mediaGroup method min minLength multiple muted name nonce noValidate open optimum pattern placeholder playsInline poster preload profile radioGroup readOnly referrerPolicy rel required reversed role rows rowSpan sandbox scope scoped scrolling seamless selected shape size sizes span spellCheck src srcDoc srcLang srcSet start step style summary tabIndex target title type useMap value width wmode wrap about datatype inlist prefix property resource typeof vocab autoCapitalize autoCorrect autoSave color itemProp itemScope itemType itemID itemRef results security unselectable accentHeight accumulate additive alignmentBaseline allowReorder alphabetic amplitude arabicForm ascent attributeName attributeType autoReverse azimuth baseFrequency baseProfile baselineShift bbox begin bias by calcMode capHeight clip clipPath clipRule clipPathUnits colorInterpolation colorInterpolationFilters colorProfile colorRendering contentScriptType contentStyleType cursor cx cy d decelerate descent diffuseConstant direction display divisor dominantBaseline dur dx dy edgeMode elevation enableBackground end exponent externalResourcesRequired fill fillOpacity fillRule filter filterRes filterUnits floodColor floodOpacity focusable fontFamily fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontWeight format from fx fy g1 g2 glyphName glyphOrientationHorizontal glyphOrientationVertical glyphRef gradientTransform gradientUnits hanging horizAdvX horizOriginX ideographic imageRendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lengthAdjust letterSpacing lightingColor limitingConeAngle local markerEnd markerMid markerStart markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical mode numOctaves offset opacity operator order orient orientation origin overflow overlinePosition overlineThickness paintOrder panose1 pathLength patternContentUnits patternTransform patternUnits pointerEvents points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY renderingIntent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shapeRendering slope spacing specularConstant specularExponent speed spreadMethod startOffset stdDeviation stemh stemv stitchTiles stopColor stopOpacity strikethroughPosition strikethroughThickness string stroke strokeDasharray strokeDashoffset strokeLinecap strokeLinejoin strokeMiterlimit strokeOpacity strokeWidth surfaceScale systemLanguage tableValues targetX targetY textAnchor textDecoration textRendering textLength to transform u1 u2 underlinePosition underlineThickness unicode unicodeBidi unicodeRange unitsPerEm vAlphabetic vHanging vIdeographic vMathematical values vectorEffect version vertAdvY vertOriginX vertOriginY viewBox viewTarget visibility widths wordSpacing writingMode x xHeight x1 x2 xChannelSelector xlinkActuate xlinkArcrole xlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlBase xmlns xmlnsXlink xmlLang xmlSpace y y1 y2 yChannelSelector z zoomAndPan onPointerDown onPointerMove onPointerUp onPointerCancel onGotPointerCapture onLostPointerCapture onPointerEnter onPointerLeave onPointerOver onPointerOut
            */
            /* eslint-enable max-len */

            var ATTRIBUTE_REGEX = /^((?:s(?:uppressContentEditableWarn|croll|pac)|(?:shape|image|text)Render|(?:letter|word)Spac|vHang|hang)ing|(?:on(?:AnimationIteration|C(?:o(?:mposition(?:Update|Start|End)|ntextMenu|py)|anPlayThrough|anPlay|hange|lick|ut)|(?:Animation|Touch|Load|Drag)Start|(?:(?:Duration|Volume|Rate)Chang|(?:MouseLea|(?:Touch|Mouse)Mo|DragLea)v|Paus)e|Loaded(?:Metad|D)ata|(?:(?:T(?:ransition|ouch)|Animation)E|Suspe)nd|DoubleClick|(?:TouchCanc|Whe)el|Lo(?:stPointer|ad)|TimeUpdate|(?:Mouse(?:Ent|Ov)e|Drag(?:Ent|Ov)e|Erro)r|GotPointer|MouseDown|(?:E(?:n(?:crypt|d)|mpti)|S(?:tall|eek))ed|KeyPress|(?:MouseOu|DragExi|S(?:elec|ubmi)|Rese|Inpu)t|P(?:rogress|laying)|DragEnd|Key(?:Down|Up)|(?:MouseU|Dro)p|(?:Wait|Seek)ing|Scroll|Focus|Paste|Abort|Drag|Play|Blur)Captur|alignmentBaselin|(?:limitingConeAng|xlink(?:(?:Arcr|R)o|Tit)|s(?:urfaceSca|ty|ca)|unselectab|baseProfi|fontSty|(?:focus|dragg)ab|multip|profi|tit)l|d(?:ominantBaselin|efaultValu)|onPointerLeav|a(?:uto(?:Capitaliz|Revers|Sav)|dditiv)|(?:(?:formNoValid|xlinkActu|noValid|accumul|rot)a|autoComple|decelera)t|(?:(?:attribute|item)T|datat)yp|onPointerMov|(?:attribute|glyph)Nam|playsInlin|(?:writing|input|edge)Mod|(?:formE|e)ncTyp|(?:amplitu|mo)d|(?:xlinkTy|itemSco|keyTy|slo)p|(?:xmlSpa|non)c|fillRul|(?:dateTi|na)m|r(?:esourc|ol)|xmlBas|wmod)e|(?:glyphOrientationHorizont|loc)al|(?:externalResourcesRequir|select|revers|mut)ed|c(?:o(?:lorInterpolationFilter|ord)s|o(?:lor(?:Interpolation)?|nt(?:rols|ent))|(?:ontentS(?:cript|tyle)Typ|o(?:ntentEditab|lorProfi)l|l(?:assNam|ipRul)|a(?:lcMod|ptur)|it)e|olorRendering|l(?:ipPathUnits|assID)|(?:ontrolsLis|apHeigh)t|h(?:eckedLink|a(?:llenge|rSet)|ildren|ecked)|ell(?:Spac|Padd)ing|o(?:ntextMenu|ls)|(?:rossOrigi|olSpa)n|lip(?:Path)?|ursor|[xy])|glyphOrientationVertical|d(?:angerouslySetInnerHTML|efaultChecked|ownload|isabled|isplay|[xy])|(?:s(?:trikethroughThickn|eaml)es|(?:und|ov)erlineThicknes|r(?:equiredExtension|adiu)|(?:requiredFeatur|tableValu|stitchTil|numOctav|filterR)e|key(?:(?:Splin|Tim)e|Param)|autoFocu|header|bia)s|(?:(?:st(?:rikethroughPosi|dDevia)|(?:und|ov)erlinePosi|(?:textDecor|elev)a|orienta)tio|(?:strokeLinejo|orig)i|on(?:PointerDow|FocusI)|formActio|zoomAndPa|directio|(?:vers|act)io|rowSpa|begi|ico)n|o(?:n(?:AnimationIteration|C(?:o(?:mposition(?:Update|Start|End)|ntextMenu|py)|anPlayThrough|anPlay|hange|lick|ut)|(?:(?:Duration|Volume|Rate)Chang|(?:MouseLea|(?:Touch|Mouse)Mo|DragLea)v|Paus)e|Loaded(?:Metad|D)ata|(?:Animation|Touch|Load|Drag)Start|(?:(?:T(?:ransition|ouch)|Animation)E|Suspe)nd|DoubleClick|(?:TouchCanc|Whe)el|(?:Mouse(?:Ent|Ov)e|Drag(?:Ent|Ov)e|Erro)r|TimeUpdate|(?:E(?:n(?:crypt|d)|mpti)|S(?:tall|eek))ed|MouseDown|P(?:rogress|laying)|(?:MouseOu|DragExi|S(?:elec|ubmi)|Rese|Inpu)t|KeyPress|DragEnd|Key(?:Down|Up)|(?:Wait|Seek)ing|(?:MouseU|Dro)p|Scroll|Paste|Focus|Abort|Drag|Play|Load|Blur)|rient)|p(?:reserveA(?:spectRatio|lpha)|ointsAt[X-Z]|anose1)|(?:patternContent|ma(?:sk(?:Content)?|rker)|primitive|gradient|pattern|filter)Units|(?:(?:allowTranspar|baseFrequ)enc|re(?:ferrerPolic|adOnl)|(?:(?:st(?:roke|op)O|floodO|fillO|o)pac|integr|secur)it|visibilit|fontFamil|accessKe|propert|summar)y|(?:gradientT|patternT|t)ransform|(?:[xy]ChannelSelect|lightingCol|textAnch|floodCol|stopCol|operat|htmlF)or|(?:strokeMiterlimi|(?:specularConsta|repeatCou|fontVaria)n|(?:(?:specularE|e)xpon|renderingInt|asc)en|d(?:iffuseConsta|esce)n|(?:fontSizeAdju|lengthAdju|manife)s|baselineShif|onPointerOu|vectorEffec|(?:(?:mar(?:ker|gin)|x)H|accentH|fontW)eigh|markerStar|a(?:utoCorrec|bou)|onFocusOu|intercep|restar|forma|inlis|heigh|lis)t|(?:(?:st(?:rokeDasho|artO)|o)ffs|acceptChars|formTarg|viewTarg|srcS)et|k(?:ernel(?:UnitLength|Matrix)|[1-4])|(?:(?:enableBackgrou|markerE)n|s(?:p(?:readMetho|ee)|ee)|formMetho|(?:markerM|onInval)i|preloa|metho|kin)d|strokeDasharray|(?:onPointerCanc|lab)el|(?:allowFullScre|hidd)en|systemLanguage|(?:(?:o(?:nPointer(?:Ent|Ov)|rd)|allowReord|placehold|frameBord|paintOrd|post)e|repeatDu|d(?:efe|u))r|v(?:Mathematical|ert(?:Origin[XY]|AdvY)|alues|ocab)|(?:pointerEve|keyPoi)nts|(?:strokeLineca|onPointerU|itemPro|useMa|wra|loo)p|h(?:oriz(?:Origin|Adv)X|ttpEquiv)|(?:vI|i)deographic|unicodeRange|mathematical|vAlphabetic|u(?:nicodeBidi|[12])|(?:fontStretc|hig)h|(?:(?:mar(?:ker|gin)W|strokeW)id|azimu)th|(?:xmlnsXl|valueL)ink|mediaGroup|spellCheck|(?:text|m(?:in|ax))Length|(?:unitsPerE|optimu|fro)m|r(?:adioGroup|e(?:sults|f[XY]|l)|ows|[xy])|a(?:rabicForm|l(?:phabetic|t)|sync)|pathLength|innerHTML|xlinkShow|(?:xlinkHr|glyphR)ef|(?:tabInde|(?:sand|b)bo|viewBo)x|(?:(?:href|xml|src)La|kerni)ng|autoPlay|o(?:verflow|pen)|f(?:o(?:ntSize|rm)|il(?:ter|l))|r(?:e(?:quired|sult|f))?|divisor|p(?:attern|oints)|unicode|d(?:efault|ata|ir)?|i(?:temRef|n2|s)|t(?:arget[XY]|o)|srcDoc|s(?:coped|te(?:m[hv]|p)|pan)|(?:width|size)s|prefix|typeof|itemID|s(?:t(?:roke|art)|hape|cope|rc)|t(?:arget|ype)|(?:stri|la)ng|a(?:ccept|s)|m(?:edia|a(?:sk|x)|in)|x(?:mlns)?|width|value|size|href|k(?:ey)?|end|low|by|i[dn]|y[12]|g[12]|x[12]|f[xy]|[yz])$/;

            /* From DOMProperty */
            var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
            var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
            var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(x|data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));

            var validAttr = (function(name) {
                return ATTRIBUTE_REGEX.test(name) || isCustomAttribute(name.toLowerCase());
            });

            // 

            function hasInInheritanceChain(child, parent) {
                var target = child;

                while (target) {
                    target = Object.getPrototypeOf(target);

                    if (target && target === parent) {
                        return true;
                    }
                }

                return false;
            }

            // 
            /**
             * Creates a broadcast that can be listened to, i.e. simple event emitter
             *
             * @see https://github.com/ReactTraining/react-broadcast
             */

            var createBroadcast = function createBroadcast(initialState) {
                var listeners = {};
                var id = 0;
                var state = initialState;

                function publish(nextState) {
                    state = nextState;

                    // eslint-disable-next-line guard-for-in, no-restricted-syntax
                    for (var key in listeners) {
                        var listener = listeners[key];
                        if (listener === undefined) {
                            // eslint-disable-next-line no-continue
                            continue;
                        }

                        listener(state);
                    }
                }

                function subscribe(listener) {
                    var currentId = id;
                    listeners[currentId] = listener;
                    id += 1;
                    listener(state);
                    return currentId;
                }

                function unsubscribe(unsubID) {
                    listeners[unsubID] = undefined;
                }

                return {
                    publish: publish,
                    subscribe: subscribe,
                    unsubscribe: unsubscribe
                };
            };

            var _ThemeProvider$childC;
            var _ThemeProvider$contex;

            // 
            // NOTE: DO NOT CHANGE, changing this is a semver major change!
            var CHANNEL = '__styled-components__';
            var CHANNEL_NEXT = CHANNEL + 'next__';

            var CONTEXT_CHANNEL_SHAPE = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.shape({
                getTheme: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
                subscribe: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
                unsubscribe: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func
            });

            var warnChannelDeprecated = void 0;
            if (false) {
                warnChannelDeprecated = once(function() {
                    // eslint-disable-next-line no-console
                    console.error('Warning: Usage of `context.' + CHANNEL + '` as a function is deprecated. It will be replaced with the object on `.context.' + CHANNEL_NEXT + '` in a future version.');
                });
            }

            var isFunction = function isFunction(test) {
                return typeof test === 'function';
            };

            /**
             * Provide a theme to an entire react component tree via context and event listeners (have to do
             * both context and event emitter as pure components block context updates)
             */

            var ThemeProvider = function(_Component) {
                inherits(ThemeProvider, _Component);

                function ThemeProvider() {
                    classCallCheck(this, ThemeProvider);

                    var _this = possibleConstructorReturn(this, _Component.call(this));

                    _this.unsubscribeToOuterId = -1;

                    _this.getTheme = _this.getTheme.bind(_this);
                    return _this;
                }

                ThemeProvider.prototype.componentWillMount = function componentWillMount() {
                    var _this2 = this;

                    // If there is a ThemeProvider wrapper anywhere around this theme provider, merge this theme
                    // with the outer theme
                    var outerContext = this.context[CHANNEL_NEXT];
                    if (outerContext !== undefined) {
                        this.unsubscribeToOuterId = outerContext.subscribe(function(theme) {
                            _this2.outerTheme = theme;

                            if (_this2.broadcast !== undefined) {
                                _this2.publish(_this2.props.theme);
                            }
                        });
                    }

                    this.broadcast = createBroadcast(this.getTheme());
                };

                ThemeProvider.prototype.getChildContext = function getChildContext() {
                    var _this3 = this,
                        _babelHelpers$extends;

                    return _extends({}, this.context, (_babelHelpers$extends = {}, _babelHelpers$extends[CHANNEL_NEXT] = {
                        getTheme: this.getTheme,
                        subscribe: this.broadcast.subscribe,
                        unsubscribe: this.broadcast.unsubscribe
                    }, _babelHelpers$extends[CHANNEL] = function(subscriber) {
                        if (false) {
                            warnChannelDeprecated();
                        }

                        // Patch the old `subscribe` provide via `CHANNEL` for older clients.
                        var unsubscribeId = _this3.broadcast.subscribe(subscriber);
                        return function() {
                            return _this3.broadcast.unsubscribe(unsubscribeId);
                        };
                    }, _babelHelpers$extends));
                };

                ThemeProvider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
                    if (this.props.theme !== nextProps.theme) {
                        this.publish(nextProps.theme);
                    }
                };

                ThemeProvider.prototype.componentWillUnmount = function componentWillUnmount() {
                    if (this.unsubscribeToOuterId !== -1) {
                        this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeToOuterId);
                    }
                };

                // Get the theme from the props, supporting both (outerTheme) => {} as well as object notation


                ThemeProvider.prototype.getTheme = function getTheme(passedTheme) {
                    var theme = passedTheme || this.props.theme;
                    if (isFunction(theme)) {
                        var mergedTheme = theme(this.outerTheme);
                        if (false) {
                            throw new Error(process.env.NODE_ENV !== 'production' ? '[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!' : '');
                        }
                        return mergedTheme;
                    }
                    if (theme === null || Array.isArray(theme) || (typeof theme === 'undefined' ? 'undefined' : _typeof(theme)) !== 'object') {
                        throw new Error(false ? '[ThemeProvider] Please make your theme prop an object' : '');
                    }
                    return _extends({}, this.outerTheme, theme);
                };

                ThemeProvider.prototype.publish = function publish(theme) {
                    this.broadcast.publish(this.getTheme(theme));
                };

                ThemeProvider.prototype.render = function render() {
                    if (!this.props.children) {
                        return null;
                    }
                    return __WEBPACK_IMPORTED_MODULE_3_react___default.a.Children.only(this.props.children);
                };

                return ThemeProvider;
            }(__WEBPACK_IMPORTED_MODULE_3_react__["Component"]);

            ThemeProvider.childContextTypes = (_ThemeProvider$childC = {}, _ThemeProvider$childC[CHANNEL] = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func, _ThemeProvider$childC[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$childC);
            ThemeProvider.contextTypes = (_ThemeProvider$contex = {}, _ThemeProvider$contex[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$contex);

            // 

            // HACK for generating all static styles without needing to allocate
            // an empty execution context every single time...
            var STATIC_EXECUTION_CONTEXT = {};

            var _StyledComponent = (function(ComponentStyle, constructWithOptions) {
                var identifiers = {};

                /* We depend on components having unique IDs */
                var generateId = function generateId(_displayName, parentComponentId) {
                    var displayName = typeof _displayName !== 'string' ? 'sc' : escape(_displayName);

                    /**
                     * This ensures uniqueness if two components happen to share
                     * the same displayName.
                     */
                    var nr = (identifiers[displayName] || 0) + 1;
                    identifiers[displayName] = nr;

                    var componentId = displayName + '-' + ComponentStyle.generateName(displayName + nr);

                    return parentComponentId !== undefined ? parentComponentId + '-' + componentId : componentId;
                };

                // $FlowFixMe

                var BaseStyledComponent = function(_Component) {
                    inherits(BaseStyledComponent, _Component);

                    function BaseStyledComponent() {
                        var _temp, _this, _ret;

                        classCallCheck(this, BaseStyledComponent);

                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                            args[_key] = arguments[_key];
                        }

                        return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.attrs = {}, _this.state = {
                            theme: null,
                            generatedClassName: ''
                        }, _this.unsubscribeId = -1, _temp), possibleConstructorReturn(_this, _ret);
                    }

                    BaseStyledComponent.prototype.unsubscribeFromContext = function unsubscribeFromContext() {
                        if (this.unsubscribeId !== -1) {
                            this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
                        }
                    };

                    BaseStyledComponent.prototype.buildExecutionContext = function buildExecutionContext(theme, props) {
                        var attrs = this.constructor.attrs;

                        var context = _extends({}, props, {
                            theme: theme
                        });
                        if (attrs === undefined) {
                            return context;
                        }

                        this.attrs = Object.keys(attrs).reduce(function(acc, key) {
                            var attr = attrs[key];
                            // eslint-disable-next-line no-param-reassign
                            acc[key] = typeof attr === 'function' && !hasInInheritanceChain(attr, __WEBPACK_IMPORTED_MODULE_3_react__["Component"]) ? attr(context) : attr;
                            return acc;
                        }, {});

                        return _extends({}, context, this.attrs);
                    };

                    BaseStyledComponent.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {
                        var _constructor = this.constructor,
                            attrs = _constructor.attrs,
                            componentStyle = _constructor.componentStyle,
                            warnTooManyClasses = _constructor.warnTooManyClasses;

                        var styleSheet = this.context[CONTEXT_KEY] || StyleSheet.master;

                        // staticaly styled-components don't need to build an execution context object,
                        // and shouldn't be increasing the number of class names
                        if (componentStyle.isStatic && attrs === undefined) {
                            return componentStyle.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, styleSheet);
                        } else {
                            var executionContext = this.buildExecutionContext(theme, props);
                            var className = componentStyle.generateAndInjectStyles(executionContext, styleSheet);

                            if (false) {
                                warnTooManyClasses(className);
                            }

                            return className;
                        }
                    };

                    BaseStyledComponent.prototype.componentWillMount = function componentWillMount() {
                        var _this2 = this;

                        var componentStyle = this.constructor.componentStyle;

                        var styledContext = this.context[CHANNEL_NEXT];

                        // If this is a staticaly-styled component, we don't need to the theme
                        // to generate or build styles.
                        if (componentStyle.isStatic) {
                            var generatedClassName = this.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, this.props);
                            this.setState({
                                generatedClassName: generatedClassName
                            });
                            // If there is a theme in the context, subscribe to the event emitter. This
                            // is necessary due to pure components blocking context updates, this circumvents
                            // that by updating when an event is emitted
                        } else if (styledContext !== undefined) {
                            var subscribe = styledContext.subscribe;

                            this.unsubscribeId = subscribe(function(nextTheme) {
                                // This will be called once immediately
                                var theme = determineTheme(_this2.props, nextTheme, _this2.constructor.defaultProps);
                                var generatedClassName = _this2.generateAndInjectStyles(theme, _this2.props);

                                _this2.setState({
                                    theme: theme,
                                    generatedClassName: generatedClassName
                                });
                            });
                        } else {
                            // eslint-disable-next-line react/prop-types
                            var theme = this.props.theme || {};
                            var _generatedClassName = this.generateAndInjectStyles(theme, this.props);
                            this.setState({
                                theme: theme,
                                generatedClassName: _generatedClassName
                            });
                        }
                    };

                    BaseStyledComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
                        var _this3 = this;

                        // If this is a statically-styled component, we don't need to listen to
                        // props changes to update styles
                        var componentStyle = this.constructor.componentStyle;

                        if (componentStyle.isStatic) {
                            return;
                        }

                        this.setState(function(prevState) {
                            var theme = determineTheme(nextProps, prevState.theme, _this3.constructor.defaultProps);
                            var generatedClassName = _this3.generateAndInjectStyles(theme, nextProps);

                            return {
                                theme: theme,
                                generatedClassName: generatedClassName
                            };
                        });
                    };

                    BaseStyledComponent.prototype.componentWillUnmount = function componentWillUnmount() {
                        this.unsubscribeFromContext();
                    };

                    BaseStyledComponent.prototype.render = function render() {
                        var _this4 = this;

                        // eslint-disable-next-line react/prop-types
                        var innerRef = this.props.innerRef;
                        var generatedClassName = this.state.generatedClassName;
                        var _constructor2 = this.constructor,
                            styledComponentId = _constructor2.styledComponentId,
                            target = _constructor2.target;


                        var isTargetTag = isTag(target);

                        var className = [
                            // eslint-disable-next-line react/prop-types
                            this.props.className, styledComponentId, this.attrs.className, generatedClassName
                        ].filter(Boolean).join(' ');

                        var baseProps = _extends({}, this.attrs, {
                            className: className
                        });

                        if (isStyledComponent(target)) {
                            baseProps.innerRef = innerRef;
                        } else {
                            baseProps.ref = innerRef;
                        }

                        var propsForElement = Object.keys(this.props).reduce(function(acc, propName) {
                            // Don't pass through non HTML tags through to HTML elements
                            // always omit innerRef
                            if (propName !== 'innerRef' && propName !== 'className' && (!isTargetTag || validAttr(propName))) {
                                // eslint-disable-next-line no-param-reassign
                                acc[propName] = _this4.props[propName];
                            }

                            return acc;
                        }, baseProps);

                        return Object(__WEBPACK_IMPORTED_MODULE_3_react__["createElement"])(target, propsForElement);
                    };

                    return BaseStyledComponent;
                }(__WEBPACK_IMPORTED_MODULE_3_react__["Component"]);

                var createStyledComponent = function createStyledComponent(target, options, rules) {
                    var _StyledComponent$cont;

                    var _options$isClass = options.isClass,
                        isClass = _options$isClass === undefined ? !isTag(target) : _options$isClass,
                        _options$displayName = options.displayName,
                        displayName = _options$displayName === undefined ? generateDisplayName(target) : _options$displayName,
                        _options$componentId = options.componentId,
                        componentId = _options$componentId === undefined ? generateId(options.displayName, options.parentComponentId) : _options$componentId,
                        _options$ParentCompon = options.ParentComponent,
                        ParentComponent = _options$ParentCompon === undefined ? BaseStyledComponent : _options$ParentCompon,
                        extendingRules = options.rules,
                        attrs = options.attrs;


                    var styledComponentId = options.displayName && options.componentId ? escape(options.displayName) + '-' + options.componentId : options.componentId || componentId;

                    var componentStyle = new ComponentStyle(extendingRules === undefined ? rules : extendingRules.concat(rules), attrs, styledComponentId);

                    var StyledComponent = function(_ParentComponent) {
                        inherits(StyledComponent, _ParentComponent);

                        function StyledComponent() {
                            classCallCheck(this, StyledComponent);
                            return possibleConstructorReturn(this, _ParentComponent.apply(this, arguments));
                        }

                        StyledComponent.withComponent = function withComponent(tag) {
                            var previousComponentId = options.componentId,
                                optionsToCopy = objectWithoutProperties(options, ['componentId']);


                            var newComponentId = previousComponentId && previousComponentId + '-' + (isTag(tag) ? tag : escape(getComponentName(tag)));

                            var newOptions = _extends({}, optionsToCopy, {
                                componentId: newComponentId,
                                ParentComponent: StyledComponent
                            });

                            return createStyledComponent(tag, newOptions, rules);
                        };

                        createClass(StyledComponent, null, [{
                            key: 'extend',
                            get: function get$$1() {
                                var rulesFromOptions = options.rules,
                                    parentComponentId = options.componentId,
                                    optionsToCopy = objectWithoutProperties(options, ['rules', 'componentId']);


                                var newRules = rulesFromOptions === undefined ? rules : rulesFromOptions.concat(rules);

                                var newOptions = _extends({}, optionsToCopy, {
                                    rules: newRules,
                                    parentComponentId: parentComponentId,
                                    ParentComponent: StyledComponent
                                });

                                return constructWithOptions(createStyledComponent, target, newOptions);
                            }
                        }]);
                        return StyledComponent;
                    }(ParentComponent);

                    StyledComponent.attrs = attrs;
                    StyledComponent.componentStyle = componentStyle;
                    StyledComponent.displayName = displayName;
                    StyledComponent.styledComponentId = styledComponentId;
                    StyledComponent.target = target;
                    StyledComponent.contextTypes = (_StyledComponent$cont = {}, _StyledComponent$cont[CHANNEL] = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func, _StyledComponent$cont[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _StyledComponent$cont[CONTEXT_KEY] = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.instanceOf(StyleSheet), __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.instanceOf(ServerStyleSheet)]), _StyledComponent$cont);


                    if (false) {
                        StyledComponent.warnTooManyClasses = createWarnTooManyClasses(displayName);
                    }

                    if (isClass) {
                        __WEBPACK_IMPORTED_MODULE_5_hoist_non_react_statics___default()(StyledComponent, target, {
                            // all SC-specific things should not be hoisted
                            attrs: true,
                            componentStyle: true,
                            displayName: true,
                            extend: true,
                            styledComponentId: true,
                            target: true,
                            warnTooManyClasses: true,
                            withComponent: true
                        });
                    }

                    return StyledComponent;
                };

                return createStyledComponent;
            });

            // Source: https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js
            function murmurhash(str) {
                var l = str.length | 0,
                    h = l | 0,
                    i = 0,
                    k;

                while (l >= 4) {
                    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;

                    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
                    k ^= k >>> 24;
                    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);

                    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;

                    l -= 4;
                    ++i;
                }

                switch (l) {
                    case 3:
                        h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
                    case 2:
                        h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
                    case 1:
                        h ^= str.charCodeAt(i) & 0xff;
                        h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
                }

                h ^= h >>> 13;
                h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
                h ^= h >>> 15;

                return h >>> 0;
            }

            // 
            var areStylesCacheable = IS_BROWSER;

            var isStaticRules = function isStaticRules(rules, attrs) {
                for (var i = 0; i < rules.length; i += 1) {
                    var rule = rules[i];

                    // recursive case
                    if (Array.isArray(rule) && !isStaticRules(rule)) {
                        return false;
                    } else if (typeof rule === 'function' && !isStyledComponent(rule)) {
                        // functions are allowed to be static if they're just being
                        // used to get the classname of a nested styled component
                        return false;
                    }
                }

                if (attrs !== undefined) {
                    // eslint-disable-next-line guard-for-in, no-restricted-syntax
                    for (var key in attrs) {
                        var value = attrs[key];
                        if (typeof value === 'function') {
                            return false;
                        }
                    }
                }

                return true;
            };

            var isHMREnabled = typeof module !== 'undefined' && module.hot && "production" !== 'production';

            /*
             ComponentStyle is all the CSS-specific stuff, not
             the React-specific stuff.
             */
            var _ComponentStyle = (function(nameGenerator, flatten, stringifyRules) {
                /* combines hashStr (murmurhash) and nameGenerator for convenience */
                var generateRuleHash = function generateRuleHash(str) {
                    return nameGenerator(murmurhash(str));
                };

                var ComponentStyle = function() {
                    function ComponentStyle(rules, attrs, componentId) {
                        classCallCheck(this, ComponentStyle);

                        this.rules = rules;
                        this.isStatic = !isHMREnabled && isStaticRules(rules, attrs);
                        this.componentId = componentId;

                        if (!StyleSheet.master.hasId(componentId)) {
                            var placeholder = false ? ['.' + componentId + ' {}'] : [];

                            StyleSheet.master.deferredInject(componentId, placeholder);
                        }
                    }

                    /*
                     * Flattens a rule set into valid CSS
                     * Hashes it, wraps the whole chunk in a .hash1234 {}
                     * Returns the hash to be injected on render()
                     * */


                    ComponentStyle.prototype.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet) {
                        var isStatic = this.isStatic,
                            componentId = this.componentId,
                            lastClassName = this.lastClassName;

                        if (areStylesCacheable && isStatic && lastClassName !== undefined && styleSheet.hasNameForId(componentId, lastClassName)) {
                            return lastClassName;
                        }

                        var flatCSS = flatten(this.rules, executionContext);
                        var name = generateRuleHash(this.componentId + flatCSS.join(''));

                        if (!styleSheet.hasNameForId(componentId, name)) {
                            var css = stringifyRules(flatCSS, '.' + name);
                            styleSheet.inject(this.componentId, css, name);
                        }

                        this.lastClassName = name;
                        return name;
                    };

                    ComponentStyle.generateName = function generateName(str) {
                        return generateRuleHash(str);
                    };

                    return ComponentStyle;
                }();

                return ComponentStyle;
            });

            // 
            // Thanks to ReactDOMFactories for this handy list!

            var domElements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',

                // SVG
                'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'
            ];

            // 
            var _styled = (function(styledComponent, constructWithOptions) {
                var styled = function styled(tag) {
                    return constructWithOptions(styledComponent, tag);
                };

                // Shorthands for all valid HTML Elements
                domElements.forEach(function(domElement) {
                    styled[domElement] = styled(domElement);
                });

                return styled;
            });

            // 
            var replaceWhitespace = function replaceWhitespace(str) {
                return str.replace(/\s|\\n/g, '');
            };

            var _keyframes = (function(nameGenerator, stringifyRules, css) {
                return function() {
                    var styleSheet = StyleSheet.master;
                    var rules = css.apply(undefined, arguments);
                    var name = nameGenerator(murmurhash(replaceWhitespace(JSON.stringify(rules))));
                    var id = 'sc-keyframes-' + name;

                    if (!styleSheet.hasNameForId(id, name)) {
                        styleSheet.inject(id, stringifyRules(rules, name, '@keyframes'), name);
                    }

                    return name;
                };
            });

            // 
            var _injectGlobal = (function(stringifyRules, css) {
                var injectGlobal = function injectGlobal() {
                    var styleSheet = StyleSheet.master;
                    var rules = css.apply(undefined, arguments);
                    var hash = murmurhash(JSON.stringify(rules));
                    var id = 'sc-global-' + hash;

                    if (!styleSheet.hasId(id)) {
                        styleSheet.inject(id, stringifyRules(rules));
                    }
                };

                return injectGlobal;
            });

            // 
            var _constructWithOptions = (function(css) {
                var constructWithOptions = function constructWithOptions(componentConstructor, tag) {
                    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

                    if (!Object(__WEBPACK_IMPORTED_MODULE_6_react_is__["isValidElementType"])(tag)) {
                        throw new Error(false ? 'Cannot create styled-component for component: ' + String(tag) : '');
                    }

                    /* This is callable directly as a template function */
                    // $FlowFixMe: Not typed to avoid destructuring arguments
                    var templateFunction = function templateFunction() {
                        return componentConstructor(tag, options, css.apply(undefined, arguments));
                    };

                    /* If config methods are called, wrap up a new template function and merge options */
                    templateFunction.withConfig = function(config) {
                        return constructWithOptions(componentConstructor, tag, _extends({}, options, config));
                    };
                    templateFunction.attrs = function(attrs) {
                        return constructWithOptions(componentConstructor, tag, _extends({}, options, {
                            attrs: _extends({}, options.attrs || {}, attrs)
                        }));
                    };

                    return templateFunction;
                };

                return constructWithOptions;
            });

            // 
            var wrapWithTheme = function wrapWithTheme(Component$$1) {
                var _WithTheme$contextTyp;

                var componentName = Component$$1.displayName || Component$$1.name || 'Component';
                var isStatelessFunctionalComponent = typeof Component$$1 === 'function' &&
                    // $FlowFixMe TODO: flow for prototype
                    !(Component$$1.prototype && 'isReactComponent' in Component$$1.prototype);

                // NOTE: We can't pass a ref to a stateless functional component
                var shouldSetInnerRef = isStyledComponent(Component$$1) || isStatelessFunctionalComponent;

                var WithTheme = function(_React$Component) {
                    inherits(WithTheme, _React$Component);

                    function WithTheme() {
                        var _temp, _this, _ret;

                        classCallCheck(this, WithTheme);

                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                            args[_key] = arguments[_key];
                        }

                        return _ret = (_temp = (_this = possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _this.unsubscribeId = -1, _temp), possibleConstructorReturn(_this, _ret);
                    }

                    // NOTE: This is so that isStyledComponent passes for the innerRef unwrapping


                    WithTheme.prototype.componentWillMount = function componentWillMount() {
                        var _this2 = this;

                        var defaultProps = this.constructor.defaultProps;

                        var styledContext = this.context[CHANNEL_NEXT];
                        var themeProp = determineTheme(this.props, undefined, defaultProps);
                        if (styledContext === undefined && themeProp === undefined && "production" !== 'production') {
                            // eslint-disable-next-line no-console
                            console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps');
                        } else if (styledContext === undefined && themeProp !== undefined) {
                            this.setState({
                                theme: themeProp
                            });
                        } else {
                            var subscribe = styledContext.subscribe;

                            this.unsubscribeId = subscribe(function(nextTheme) {
                                var theme = determineTheme(_this2.props, nextTheme, defaultProps);
                                _this2.setState({
                                    theme: theme
                                });
                            });
                        }
                    };

                    WithTheme.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
                        var defaultProps = this.constructor.defaultProps;

                        this.setState(function(oldState) {
                            var theme = determineTheme(nextProps, oldState.theme, defaultProps);

                            return {
                                theme: theme
                            };
                        });
                    };

                    WithTheme.prototype.componentWillUnmount = function componentWillUnmount() {
                        if (this.unsubscribeId !== -1) {
                            this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
                        }
                    };

                    WithTheme.prototype.render = function render() {
                        var props = _extends({
                            theme: this.state.theme
                        }, this.props);

                        if (!shouldSetInnerRef) {
                            props.ref = props.innerRef;
                            delete props.innerRef;
                        }

                        return __WEBPACK_IMPORTED_MODULE_3_react___default.a.createElement(Component$$1, props);
                    };

                    return WithTheme;
                }(__WEBPACK_IMPORTED_MODULE_3_react___default.a.Component);

                WithTheme.displayName = 'WithTheme(' + componentName + ')';
                WithTheme.styledComponentId = 'withTheme';
                WithTheme.contextTypes = (_WithTheme$contextTyp = {}, _WithTheme$contextTyp[CHANNEL] = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func, _WithTheme$contextTyp[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _WithTheme$contextTyp);


                return __WEBPACK_IMPORTED_MODULE_5_hoist_non_react_statics___default()(WithTheme, Component$$1);
            };

            // 

            /* eslint-disable */
            var __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS = {
                StyleSheet: StyleSheet
            };

            // 

            /* Import singletons */
            /* Import singleton constructors */
            /* Import components */
            /* Import Higher Order Components */
            /* Warning if you've imported this file on React Native */
            if (false) {
                // eslint-disable-next-line no-console
                console.warn("It looks like you've imported 'styled-components' on React Native.\n" + "Perhaps you're looking to import 'styled-components/native'?\n" + 'Read more about this at https://www.styled-components.com/docs/basics#react-native');
            }

            /* Warning if there are several instances of styled-components */
            if (false) {
                window['__styled-components-init__'] = window['__styled-components-init__'] || 0;

                if (window['__styled-components-init__'] === 1) {
                    // eslint-disable-next-line no-console
                    console.warn("It looks like there are several instances of 'styled-components' initialized in this application. " + 'This may cause dynamic styles not rendering properly, errors happening during rehydration process ' + 'and makes your application bigger without a good reason.\n\n' + 'See https://s-c.sh/2BAXzed for more info.');
                }

                window['__styled-components-init__'] += 1;
            }

            /* Instantiate singletons */
            var ComponentStyle = _ComponentStyle(generateAlphabeticName, flatten, stringifyRules);
            var constructWithOptions = _constructWithOptions(css);
            var StyledComponent = _StyledComponent(ComponentStyle, constructWithOptions);

            /* Instantiate exported singletons */
            var keyframes = _keyframes(generateAlphabeticName, stringifyRules, css);
            var injectGlobal = _injectGlobal(stringifyRules, css);
            var styled = _styled(StyledComponent, constructWithOptions);


            /* harmony default export */
            __webpack_exports__["c"] = (styled);
            //# sourceMappingURL=styled-components.browser.es.js.map

            /* WEBPACK VAR INJECTION */
        }.call(__webpack_exports__, __webpack_require__(97), __webpack_require__(98)(module)))

        /***/
    }),
    /* 13 */
    /***/
    (function(module, exports, __webpack_require__) {

        var root = __webpack_require__(5);

        /** Built-in value references. */
        var Symbol = root.Symbol;

        module.exports = Symbol;


        /***/
    }),
    /* 14 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayLikeKeys = __webpack_require__(47),
            baseKeys = __webpack_require__(126),
            isArrayLike = __webpack_require__(15);

        /**
         * Creates an array of the own enumerable property names of `object`.
         *
         * **Note:** Non-object values are coerced to objects. See the
         * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
         * for more details.
         *
         * @static
         * @since 0.1.0
         * @memberOf _
         * @category Object
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         * @example
         *
         * function Foo() {
         *   this.a = 1;
         *   this.b = 2;
         * }
         *
         * Foo.prototype.c = 3;
         *
         * _.keys(new Foo);
         * // => ['a', 'b'] (iteration order is not guaranteed)
         *
         * _.keys('hi');
         * // => ['0', '1']
         */
        function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }

        module.exports = keys;


        /***/
    }),
    /* 15 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isFunction = __webpack_require__(52),
            isLength = __webpack_require__(28);

        /**
         * Checks if `value` is array-like. A value is considered array-like if it's
         * not a function and has a `value.length` that's an integer greater than or
         * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
         * @example
         *
         * _.isArrayLike([1, 2, 3]);
         * // => true
         *
         * _.isArrayLike(document.body.children);
         * // => true
         *
         * _.isArrayLike('abc');
         * // => true
         *
         * _.isArrayLike(_.noop);
         * // => false
         */
        function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
        }

        module.exports = isArrayLike;


        /***/
    }),
    /* 16 */
    /***/
    (function(module, exports, __webpack_require__) {

        var listCacheClear = __webpack_require__(132),
            listCacheDelete = __webpack_require__(133),
            listCacheGet = __webpack_require__(134),
            listCacheHas = __webpack_require__(135),
            listCacheSet = __webpack_require__(136);

        /**
         * Creates an list cache object.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function ListCache(entries) {
            var index = -1,
                length = entries == null ? 0 : entries.length;

            this.clear();
            while (++index < length) {
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }

        // Add methods to `ListCache`.
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype['delete'] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;

        module.exports = ListCache;


        /***/
    }),
    /* 17 */
    /***/
    (function(module, exports, __webpack_require__) {

        var eq = __webpack_require__(34);

        /**
         * Gets the index at which the `key` is found in `array` of key-value pairs.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {*} key The key to search for.
         * @returns {number} Returns the index of the matched value, else `-1`.
         */
        function assocIndexOf(array, key) {
            var length = array.length;
            while (length--) {
                if (eq(array[length][0], key)) {
                    return length;
                }
            }
            return -1;
        }

        module.exports = assocIndexOf;


        /***/
    }),
    /* 18 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(11);

        /* Built-in method references that are verified to be native. */
        var nativeCreate = getNative(Object, 'create');

        module.exports = nativeCreate;


        /***/
    }),
    /* 19 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isKeyable = __webpack_require__(154);

        /**
         * Gets the data for `map`.
         *
         * @private
         * @param {Object} map The map to query.
         * @param {string} key The reference key.
         * @returns {*} Returns the map data.
         */
        function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ?
                data[typeof key == 'string' ? 'string' : 'hash'] :
                data.map;
        }

        module.exports = getMapData;


        /***/
    }),
    /* 20 */
    /***/
    (function(module, exports, __webpack_require__) {

        var DataView = __webpack_require__(169),
            Map = __webpack_require__(35),
            Promise = __webpack_require__(170),
            Set = __webpack_require__(171),
            WeakMap = __webpack_require__(172),
            baseGetTag = __webpack_require__(10),
            toSource = __webpack_require__(56);

        /** `Object#toString` result references. */
        var mapTag = '[object Map]',
            objectTag = '[object Object]',
            promiseTag = '[object Promise]',
            setTag = '[object Set]',
            weakMapTag = '[object WeakMap]';

        var dataViewTag = '[object DataView]';

        /** Used to detect maps, sets, and weakmaps. */
        var dataViewCtorString = toSource(DataView),
            mapCtorString = toSource(Map),
            promiseCtorString = toSource(Promise),
            setCtorString = toSource(Set),
            weakMapCtorString = toSource(WeakMap);

        /**
         * Gets the `toStringTag` of `value`.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        var getTag = baseGetTag;

        // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
        if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
            (Map && getTag(new Map) != mapTag) ||
            (Promise && getTag(Promise.resolve()) != promiseTag) ||
            (Set && getTag(new Set) != setTag) ||
            (WeakMap && getTag(new WeakMap) != weakMapTag)) {
            getTag = function(value) {
                var result = baseGetTag(value),
                    Ctor = result == objectTag ? value.constructor : undefined,
                    ctorString = Ctor ? toSource(Ctor) : '';

                if (ctorString) {
                    switch (ctorString) {
                        case dataViewCtorString:
                            return dataViewTag;
                        case mapCtorString:
                            return mapTag;
                        case promiseCtorString:
                            return promiseTag;
                        case setCtorString:
                            return setTag;
                        case weakMapCtorString:
                            return weakMapTag;
                    }
                }
                return result;
            };
        }

        module.exports = getTag;


        /***/
    }),
    /* 21 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(10),
            isObjectLike = __webpack_require__(7);

        /** `Object#toString` result references. */
        var symbolTag = '[object Symbol]';

        /**
         * Checks if `value` is classified as a `Symbol` primitive or object.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
         * @example
         *
         * _.isSymbol(Symbol.iterator);
         * // => true
         *
         * _.isSymbol('abc');
         * // => false
         */
        function isSymbol(value) {
            return typeof value == 'symbol' ||
                (isObjectLike(value) && baseGetTag(value) == symbolTag);
        }

        module.exports = isSymbol;


        /***/
    }),
    /* 22 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isSymbol = __webpack_require__(21);

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0;

        /**
         * Converts `value` to a string key if it's not a string or symbol.
         *
         * @private
         * @param {*} value The value to inspect.
         * @returns {string|symbol} Returns the key.
         */
        function toKey(value) {
            if (typeof value == 'string' || isSymbol(value)) {
                return value;
            }
            var result = (value + '');
            return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
        }

        module.exports = toKey;


        /***/
    }),
    /* 23 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assignValue = __webpack_require__(70),
            baseAssignValue = __webpack_require__(71);

        /**
         * Copies properties of `source` to `object`.
         *
         * @private
         * @param {Object} source The object to copy properties from.
         * @param {Array} props The property identifiers to copy.
         * @param {Object} [object={}] The object to copy properties to.
         * @param {Function} [customizer] The function to customize copied values.
         * @returns {Object} Returns `object`.
         */
        function copyObject(source, props, object, customizer) {
            var isNew = !object;
            object || (object = {});

            var index = -1,
                length = props.length;

            while (++index < length) {
                var key = props[index];

                var newValue = customizer ?
                    customizer(object[key], source[key], key, object, source) :
                    undefined;

                if (newValue === undefined) {
                    newValue = source[key];
                }
                if (isNew) {
                    baseAssignValue(object, key, newValue);
                } else {
                    assignValue(object, key, newValue);
                }
            }
            return object;
        }

        module.exports = copyObject;


        /***/
    }),
    /* 24 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /*
        object-assign
        (c) Sindre Sorhus
        @license MIT
        */


        /* eslint-disable no-unused-vars */
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var propIsEnumerable = Object.prototype.propertyIsEnumerable;

        function toObject(val) {
            if (val === null || val === undefined) {
                throw new TypeError('Object.assign cannot be called with null or undefined');
            }

            return Object(val);
        }

        function shouldUseNative() {
            try {
                if (!Object.assign) {
                    return false;
                }

                // Detect buggy property enumeration order in older V8 versions.

                // https://bugs.chromium.org/p/v8/issues/detail?id=4118
                var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
                test1[5] = 'de';
                if (Object.getOwnPropertyNames(test1)[0] === '5') {
                    return false;
                }

                // https://bugs.chromium.org/p/v8/issues/detail?id=3056
                var test2 = {};
                for (var i = 0; i < 10; i++) {
                    test2['_' + String.fromCharCode(i)] = i;
                }
                var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
                    return test2[n];
                });
                if (order2.join('') !== '0123456789') {
                    return false;
                }

                // https://bugs.chromium.org/p/v8/issues/detail?id=3056
                var test3 = {};
                'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
                    test3[letter] = letter;
                });
                if (Object.keys(Object.assign({}, test3)).join('') !==
                    'abcdefghijklmnopqrst') {
                    return false;
                }

                return true;
            } catch (err) {
                // We don't expect any of the above to throw, but better to be safe.
                return false;
            }
        }

        module.exports = shouldUseNative() ? Object.assign : function(target, source) {
            var from;
            var to = toObject(target);
            var symbols;

            for (var s = 1; s < arguments.length; s++) {
                from = Object(arguments[s]);

                for (var key in from) {
                    if (hasOwnProperty.call(from, key)) {
                        to[key] = from[key];
                    }
                }

                if (getOwnPropertySymbols) {
                    symbols = getOwnPropertySymbols(from);
                    for (var i = 0; i < symbols.length; i++) {
                        if (propIsEnumerable.call(from, symbols[i])) {
                            to[symbols[i]] = from[symbols[i]];
                        }
                    }
                }
            }

            return to;
        };


        /***/
    }),
    /* 25 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseForOwn = __webpack_require__(46),
            castFunction = __webpack_require__(53);

        /**
         * Iterates over own enumerable string keyed properties of an object and
         * invokes `iteratee` for each property. The iteratee is invoked with three
         * arguments: (value, key, object). Iteratee functions may exit iteration
         * early by explicitly returning `false`.
         *
         * @static
         * @memberOf _
         * @since 0.3.0
         * @category Object
         * @param {Object} object The object to iterate over.
         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
         * @returns {Object} Returns `object`.
         * @see _.forOwnRight
         * @example
         *
         * function Foo() {
         *   this.a = 1;
         *   this.b = 2;
         * }
         *
         * Foo.prototype.c = 3;
         *
         * _.forOwn(new Foo, function(value, key) {
         *   console.log(key);
         * });
         * // => Logs 'a' then 'b' (iteration order is not guaranteed).
         */
        function forOwn(object, iteratee) {
            return object && baseForOwn(object, castFunction(iteratee));
        }

        module.exports = forOwn;


        /***/
    }),
    /* 26 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(module) {
            var root = __webpack_require__(5),
                stubFalse = __webpack_require__(124);

            /** Detect free variable `exports`. */
            var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

            /** Detect free variable `module`. */
            var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports;

            /** Built-in value references. */
            var Buffer = moduleExports ? root.Buffer : undefined;

            /* Built-in method references for those with the same name as other `lodash` methods. */
            var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

            /**
             * Checks if `value` is a buffer.
             *
             * @static
             * @memberOf _
             * @since 4.3.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
             * @example
             *
             * _.isBuffer(new Buffer(2));
             * // => true
             *
             * _.isBuffer(new Uint8Array(2));
             * // => false
             */
            var isBuffer = nativeIsBuffer || stubFalse;

            module.exports = isBuffer;

            /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(27)(module)))

        /***/
    }),
    /* 27 */
    /***/
    (function(module, exports) {

        module.exports = function(module) {
            if (!module.webpackPolyfill) {
                module.deprecate = function() {};
                module.paths = [];
                // module.parent = undefined by default
                if (!module.children) module.children = [];
                Object.defineProperty(module, "loaded", {
                    enumerable: true,
                    get: function() {
                        return module.l;
                    }
                });
                Object.defineProperty(module, "id", {
                    enumerable: true,
                    get: function() {
                        return module.i;
                    }
                });
                module.webpackPolyfill = 1;
            }
            return module;
        };


        /***/
    }),
    /* 28 */
    /***/
    (function(module, exports) {

        /** Used as references for various `Number` constants. */
        var MAX_SAFE_INTEGER = 9007199254740991;

        /**
         * Checks if `value` is a valid array-like length.
         *
         * **Note:** This method is loosely based on
         * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
         * @example
         *
         * _.isLength(3);
         * // => true
         *
         * _.isLength(Number.MIN_VALUE);
         * // => false
         *
         * _.isLength(Infinity);
         * // => false
         *
         * _.isLength('3');
         * // => false
         */
        function isLength(value) {
            return typeof value == 'number' &&
                value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }

        module.exports = isLength;


        /***/
    }),
    /* 29 */
    /***/
    (function(module, exports) {

        /**
         * The base implementation of `_.unary` without support for storing metadata.
         *
         * @private
         * @param {Function} func The function to cap arguments for.
         * @returns {Function} Returns the new capped function.
         */
        function baseUnary(func) {
            return function(value) {
                return func(value);
            };
        }

        module.exports = baseUnary;


        /***/
    }),
    /* 30 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(module) {
            var freeGlobal = __webpack_require__(45);

            /** Detect free variable `exports`. */
            var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

            /** Detect free variable `module`. */
            var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports;

            /** Detect free variable `process` from Node.js. */
            var freeProcess = moduleExports && freeGlobal.process;

            /** Used to access faster Node.js helpers. */
            var nodeUtil = (function() {
                try {
                    // Use `util.types` for Node.js 10+.
                    var types = freeModule && freeModule.require && freeModule.require('util').types;

                    if (types) {
                        return types;
                    }

                    // Legacy `process.binding('util')` for Node.js < 10.
                    return freeProcess && freeProcess.binding && freeProcess.binding('util');
                } catch (e) {}
            }());

            module.exports = nodeUtil;

            /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(27)(module)))

        /***/
    }),
    /* 31 */
    /***/
    (function(module, exports) {

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
         * Checks if `value` is likely a prototype object.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
         */
        function isPrototype(value) {
            var Ctor = value && value.constructor,
                proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

            return value === proto;
        }

        module.exports = isPrototype;


        /***/
    }),
    /* 32 */
    /***/
    (function(module, exports, __webpack_require__) {

        var overArg = __webpack_require__(51);

        /** Built-in value references. */
        var getPrototype = overArg(Object.getPrototypeOf, Object);

        module.exports = getPrototype;


        /***/
    }),
    /* 33 */
    /***/
    (function(module, exports, __webpack_require__) {

        var ListCache = __webpack_require__(16),
            stackClear = __webpack_require__(137),
            stackDelete = __webpack_require__(138),
            stackGet = __webpack_require__(139),
            stackHas = __webpack_require__(140),
            stackSet = __webpack_require__(141);

        /**
         * Creates a stack cache object to store key-value pairs.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function Stack(entries) {
            var data = this.__data__ = new ListCache(entries);
            this.size = data.size;
        }

        // Add methods to `Stack`.
        Stack.prototype.clear = stackClear;
        Stack.prototype['delete'] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;

        module.exports = Stack;


        /***/
    }),
    /* 34 */
    /***/
    (function(module, exports) {

        /**
         * Performs a
         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
         * comparison between two values to determine if they are equivalent.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to compare.
         * @param {*} other The other value to compare.
         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
         * @example
         *
         * var object = { 'a': 1 };
         * var other = { 'a': 1 };
         *
         * _.eq(object, object);
         * // => true
         *
         * _.eq(object, other);
         * // => false
         *
         * _.eq('a', 'a');
         * // => true
         *
         * _.eq('a', Object('a'));
         * // => false
         *
         * _.eq(NaN, NaN);
         * // => true
         */
        function eq(value, other) {
            return value === other || (value !== value && other !== other);
        }

        module.exports = eq;


        /***/
    }),
    /* 35 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(11),
            root = __webpack_require__(5);

        /* Built-in method references that are verified to be native. */
        var Map = getNative(root, 'Map');

        module.exports = Map;


        /***/
    }),
    /* 36 */
    /***/
    (function(module, exports, __webpack_require__) {

        var mapCacheClear = __webpack_require__(146),
            mapCacheDelete = __webpack_require__(153),
            mapCacheGet = __webpack_require__(155),
            mapCacheHas = __webpack_require__(156),
            mapCacheSet = __webpack_require__(157);

        /**
         * Creates a map cache object to store key-value pairs.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function MapCache(entries) {
            var index = -1,
                length = entries == null ? 0 : entries.length;

            this.clear();
            while (++index < length) {
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }

        // Add methods to `MapCache`.
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype['delete'] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;

        module.exports = MapCache;


        /***/
    }),
    /* 37 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayFilter = __webpack_require__(168),
            stubArray = __webpack_require__(63);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Built-in value references. */
        var propertyIsEnumerable = objectProto.propertyIsEnumerable;

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeGetSymbols = Object.getOwnPropertySymbols;

        /**
         * Creates an array of the own enumerable symbols of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of symbols.
         */
        var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
            if (object == null) {
                return [];
            }
            object = Object(object);
            return arrayFilter(nativeGetSymbols(object), function(symbol) {
                return propertyIsEnumerable.call(object, symbol);
            });
        };

        module.exports = getSymbols;


        /***/
    }),
    /* 38 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isArray = __webpack_require__(4),
            isSymbol = __webpack_require__(21);

        /** Used to match property names within property paths. */
        var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
            reIsPlainProp = /^\w*$/;

        /**
         * Checks if `value` is a property name and not a property path.
         *
         * @private
         * @param {*} value The value to check.
         * @param {Object} [object] The object to query keys on.
         * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
         */
        function isKey(value, object) {
            if (isArray(value)) {
                return false;
            }
            var type = typeof value;
            if (type == 'number' || type == 'symbol' || type == 'boolean' ||
                value == null || isSymbol(value)) {
                return true;
            }
            return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
                (object != null && value in Object(object));
        }

        module.exports = isKey;


        /***/
    }),
    /* 39 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Uint8Array = __webpack_require__(59);

        /**
         * Creates a clone of `arrayBuffer`.
         *
         * @private
         * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
         * @returns {ArrayBuffer} Returns the cloned array buffer.
         */
        function cloneArrayBuffer(arrayBuffer) {
            var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array(result).set(new Uint8Array(arrayBuffer));
            return result;
        }

        module.exports = cloneArrayBuffer;


        /***/
    }),
    /* 40 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        var asap = __webpack_require__(84);

        function noop() {}

        // States:
        //
        // 0 - pending
        // 1 - fulfilled with _value
        // 2 - rejected with _value
        // 3 - adopted the state of another promise, _value
        //
        // once the state is no longer pending (0) it is immutable

        // All `_` prefixed properties will be reduced to `_{random number}`
        // at build time to obfuscate them and discourage their use.
        // We don't use symbols or Object.defineProperty to fully hide them
        // because the performance isn't good enough.


        // to avoid using try/catch inside critical functions, we
        // extract them to here.
        var LAST_ERROR = null;
        var IS_ERROR = {};

        function getThen(obj) {
            try {
                return obj.then;
            } catch (ex) {
                LAST_ERROR = ex;
                return IS_ERROR;
            }
        }

        function tryCallOne(fn, a) {
            try {
                return fn(a);
            } catch (ex) {
                LAST_ERROR = ex;
                return IS_ERROR;
            }
        }

        function tryCallTwo(fn, a, b) {
            try {
                fn(a, b);
            } catch (ex) {
                LAST_ERROR = ex;
                return IS_ERROR;
            }
        }

        module.exports = Promise;

        function Promise(fn) {
            if (typeof this !== 'object') {
                throw new TypeError('Promises must be constructed via new');
            }
            if (typeof fn !== 'function') {
                throw new TypeError('Promise constructor\'s argument is not a function');
            }
            this._75 = 0;
            this._83 = 0;
            this._18 = null;
            this._38 = null;
            if (fn === noop) return;
            doResolve(fn, this);
        }
        Promise._47 = null;
        Promise._71 = null;
        Promise._44 = noop;

        Promise.prototype.then = function(onFulfilled, onRejected) {
            if (this.constructor !== Promise) {
                return safeThen(this, onFulfilled, onRejected);
            }
            var res = new Promise(noop);
            handle(this, new Handler(onFulfilled, onRejected, res));
            return res;
        };

        function safeThen(self, onFulfilled, onRejected) {
            return new self.constructor(function(resolve, reject) {
                var res = new Promise(noop);
                res.then(resolve, reject);
                handle(self, new Handler(onFulfilled, onRejected, res));
            });
        }

        function handle(self, deferred) {
            while (self._83 === 3) {
                self = self._18;
            }
            if (Promise._47) {
                Promise._47(self);
            }
            if (self._83 === 0) {
                if (self._75 === 0) {
                    self._75 = 1;
                    self._38 = deferred;
                    return;
                }
                if (self._75 === 1) {
                    self._75 = 2;
                    self._38 = [self._38, deferred];
                    return;
                }
                self._38.push(deferred);
                return;
            }
            handleResolved(self, deferred);
        }

        function handleResolved(self, deferred) {
            asap(function() {
                var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;
                if (cb === null) {
                    if (self._83 === 1) {
                        resolve(deferred.promise, self._18);
                    } else {
                        reject(deferred.promise, self._18);
                    }
                    return;
                }
                var ret = tryCallOne(cb, self._18);
                if (ret === IS_ERROR) {
                    reject(deferred.promise, LAST_ERROR);
                } else {
                    resolve(deferred.promise, ret);
                }
            });
        }

        function resolve(self, newValue) {
            // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
            if (newValue === self) {
                return reject(
                    self,
                    new TypeError('A promise cannot be resolved with itself.')
                );
            }
            if (
                newValue &&
                (typeof newValue === 'object' || typeof newValue === 'function')
            ) {
                var then = getThen(newValue);
                if (then === IS_ERROR) {
                    return reject(self, LAST_ERROR);
                }
                if (
                    then === self.then &&
                    newValue instanceof Promise
                ) {
                    self._83 = 3;
                    self._18 = newValue;
                    finale(self);
                    return;
                } else if (typeof then === 'function') {
                    doResolve(then.bind(newValue), self);
                    return;
                }
            }
            self._83 = 1;
            self._18 = newValue;
            finale(self);
        }

        function reject(self, newValue) {
            self._83 = 2;
            self._18 = newValue;
            if (Promise._71) {
                Promise._71(self, newValue);
            }
            finale(self);
        }

        function finale(self) {
            if (self._75 === 1) {
                handle(self, self._38);
                self._38 = null;
            }
            if (self._75 === 2) {
                for (var i = 0; i < self._38.length; i++) {
                    handle(self, self._38[i]);
                }
                self._38 = null;
            }
        }

        function Handler(onFulfilled, onRejected, promise) {
            this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
            this.onRejected = typeof onRejected === 'function' ? onRejected : null;
            this.promise = promise;
        }

        /**
         * Take a potentially misbehaving resolver function and make sure
         * onFulfilled and onRejected are only called once.
         *
         * Makes no guarantees about asynchrony.
         */
        function doResolve(fn, promise) {
            var done = false;
            var res = tryCallTwo(fn, function(value) {
                if (done) return;
                done = true;
                resolve(promise, value);
            }, function(reason) {
                if (done) return;
                done = true;
                reject(promise, reason);
            });
            if (!done && res === IS_ERROR) {
                done = true;
                reject(promise, LAST_ERROR);
            }
        }


        /***/
    }),
    /* 41 */
    /***/
    (function(module, exports) {

        var g;

        // This works in non-strict mode
        g = (function() {
            return this;
        })();

        try {
            // This works if eval is allowed (see CSP)
            g = g || Function("return this")() || (1, eval)("this");
        } catch (e) {
            // This works if the window reference is available
            if (typeof window === "object")
                g = window;
        }

        // g can still be undefined, but nothing to do about it...
        // We return undefined, instead of nothing here, so it's
        // easier to handle this case. if(!global) { ...}

        module.exports = g;


        /***/
    }),
    /* 42 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */



        /**
         * Use invariant() to assert state which your program assumes to be true.
         *
         * Provide sprintf-style format (only %s is supported) and arguments
         * to provide information about what broke and what you were
         * expecting.
         *
         * The invariant message will be stripped in production, but the invariant
         * will remain to ensure logic does not differ in production.
         */

        var validateFormat = function validateFormat(format) {};

        if (false) {
            validateFormat = function validateFormat(format) {
                if (format === undefined) {
                    throw new Error('invariant requires an error message argument');
                }
            };
        }

        function invariant(condition, format, a, b, c, d, e, f) {
            validateFormat(format);

            if (!condition) {
                var error;
                if (format === undefined) {
                    error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
                } else {
                    var args = [a, b, c, d, e, f];
                    var argIndex = 0;
                    error = new Error(format.replace(/%s/g, function() {
                        return args[argIndex++];
                    }));
                    error.name = 'Invariant Violation';
                }

                error.framesToPop = 1; // we don't care about invariant's own frame
                throw error;
            }
        }

        module.exports = invariant;

        /***/
    }),
    /* 43 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */



        var emptyObject = {};

        if (false) {
            Object.freeze(emptyObject);
        }

        module.exports = emptyObject;

        /***/
    }),
    /* 44 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * 
         */

        function makeEmptyFunction(arg) {
            return function() {
                return arg;
            };
        }

        /**
         * This function accepts and discards inputs; it has no side effects. This is
         * primarily useful idiomatically for overridable function endpoints which
         * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
         */
        var emptyFunction = function emptyFunction() {};

        emptyFunction.thatReturns = makeEmptyFunction;
        emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
        emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
        emptyFunction.thatReturnsNull = makeEmptyFunction(null);
        emptyFunction.thatReturnsThis = function() {
            return this;
        };
        emptyFunction.thatReturnsArgument = function(arg) {
            return arg;
        };

        module.exports = emptyFunction;

        /***/
    }),
    /* 45 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(global) { /** Detect free variable `global` from Node.js. */
            var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

            module.exports = freeGlobal;

            /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(41)))

        /***/
    }),
    /* 46 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseFor = __webpack_require__(120),
            keys = __webpack_require__(14);

        /**
         * The base implementation of `_.forOwn` without support for iteratee shorthands.
         *
         * @private
         * @param {Object} object The object to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Object} Returns `object`.
         */
        function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys);
        }

        module.exports = baseForOwn;


        /***/
    }),
    /* 47 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseTimes = __webpack_require__(122),
            isArguments = __webpack_require__(48),
            isArray = __webpack_require__(4),
            isBuffer = __webpack_require__(26),
            isIndex = __webpack_require__(49),
            isTypedArray = __webpack_require__(50);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Creates an array of the enumerable property names of the array-like `value`.
         *
         * @private
         * @param {*} value The value to query.
         * @param {boolean} inherited Specify returning inherited property names.
         * @returns {Array} Returns the array of property names.
         */
        function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value),
                isArg = !isArr && isArguments(value),
                isBuff = !isArr && !isArg && isBuffer(value),
                isType = !isArr && !isArg && !isBuff && isTypedArray(value),
                skipIndexes = isArr || isArg || isBuff || isType,
                result = skipIndexes ? baseTimes(value.length, String) : [],
                length = result.length;

            for (var key in value) {
                if ((inherited || hasOwnProperty.call(value, key)) &&
                    !(skipIndexes && (
                        // Safari 9 has enumerable `arguments.length` in strict mode.
                        key == 'length' ||
                        // Node.js 0.10 has enumerable non-index properties on buffers.
                        (isBuff && (key == 'offset' || key == 'parent')) ||
                        // PhantomJS 2 has enumerable non-index properties on typed arrays.
                        (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
                        // Skip index properties.
                        isIndex(key, length)
                    ))) {
                    result.push(key);
                }
            }
            return result;
        }

        module.exports = arrayLikeKeys;


        /***/
    }),
    /* 48 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsArguments = __webpack_require__(123),
            isObjectLike = __webpack_require__(7);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /** Built-in value references. */
        var propertyIsEnumerable = objectProto.propertyIsEnumerable;

        /**
         * Checks if `value` is likely an `arguments` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an `arguments` object,
         *  else `false`.
         * @example
         *
         * _.isArguments(function() { return arguments; }());
         * // => true
         *
         * _.isArguments([1, 2, 3]);
         * // => false
         */
        var isArguments = baseIsArguments(function() {
            return arguments;
        }()) ? baseIsArguments : function(value) {
            return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
                !propertyIsEnumerable.call(value, 'callee');
        };

        module.exports = isArguments;


        /***/
    }),
    /* 49 */
    /***/
    (function(module, exports) {

        /** Used as references for various `Number` constants. */
        var MAX_SAFE_INTEGER = 9007199254740991;

        /** Used to detect unsigned integer values. */
        var reIsUint = /^(?:0|[1-9]\d*)$/;

        /**
         * Checks if `value` is a valid array-like index.
         *
         * @private
         * @param {*} value The value to check.
         * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
         * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
         */
        function isIndex(value, length) {
            var type = typeof value;
            length = length == null ? MAX_SAFE_INTEGER : length;

            return !!length &&
                (type == 'number' ||
                    (type != 'symbol' && reIsUint.test(value))) &&
                (value > -1 && value % 1 == 0 && value < length);
        }

        module.exports = isIndex;


        /***/
    }),
    /* 50 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsTypedArray = __webpack_require__(125),
            baseUnary = __webpack_require__(29),
            nodeUtil = __webpack_require__(30);

        /* Node.js helper references. */
        var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

        /**
         * Checks if `value` is classified as a typed array.
         *
         * @static
         * @memberOf _
         * @since 3.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
         * @example
         *
         * _.isTypedArray(new Uint8Array);
         * // => true
         *
         * _.isTypedArray([]);
         * // => false
         */
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

        module.exports = isTypedArray;


        /***/
    }),
    /* 51 */
    /***/
    (function(module, exports) {

        /**
         * Creates a unary function that invokes `func` with its argument transformed.
         *
         * @private
         * @param {Function} func The function to wrap.
         * @param {Function} transform The argument transform.
         * @returns {Function} Returns the new function.
         */
        function overArg(func, transform) {
            return function(arg) {
                return func(transform(arg));
            };
        }

        module.exports = overArg;


        /***/
    }),
    /* 52 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(10),
            isObject = __webpack_require__(8);

        /** `Object#toString` result references. */
        var asyncTag = '[object AsyncFunction]',
            funcTag = '[object Function]',
            genTag = '[object GeneratorFunction]',
            proxyTag = '[object Proxy]';

        /**
         * Checks if `value` is classified as a `Function` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a function, else `false`.
         * @example
         *
         * _.isFunction(_);
         * // => true
         *
         * _.isFunction(/abc/);
         * // => false
         */
        function isFunction(value) {
            if (!isObject(value)) {
                return false;
            }
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 9 which returns 'object' for typed arrays and other constructors.
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }

        module.exports = isFunction;


        /***/
    }),
    /* 53 */
    /***/
    (function(module, exports, __webpack_require__) {

        var identity = __webpack_require__(54);

        /**
         * Casts `value` to `identity` if it's not a function.
         *
         * @private
         * @param {*} value The value to inspect.
         * @returns {Function} Returns cast function.
         */
        function castFunction(value) {
            return typeof value == 'function' ? value : identity;
        }

        module.exports = castFunction;


        /***/
    }),
    /* 54 */
    /***/
    (function(module, exports) {

        /**
         * This method returns the first argument it receives.
         *
         * @static
         * @since 0.1.0
         * @memberOf _
         * @category Util
         * @param {*} value Any value.
         * @returns {*} Returns `value`.
         * @example
         *
         * var object = { 'a': 1 };
         *
         * console.log(_.identity(object) === object);
         * // => true
         */
        function identity(value) {
            return value;
        }

        module.exports = identity;


        /***/
    }),
    /* 55 */
    /***/
    (function(module, exports) {

        /**
         * A specialized version of `_.map` for arrays without support for iteratee
         * shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns the new mapped array.
         */
        function arrayMap(array, iteratee) {
            var index = -1,
                length = array == null ? 0 : array.length,
                result = Array(length);

            while (++index < length) {
                result[index] = iteratee(array[index], index, array);
            }
            return result;
        }

        module.exports = arrayMap;


        /***/
    }),
    /* 56 */
    /***/
    (function(module, exports) {

        /** Used for built-in method references. */
        var funcProto = Function.prototype;

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /**
         * Converts `func` to its source code.
         *
         * @private
         * @param {Function} func The function to convert.
         * @returns {string} Returns the source code.
         */
        function toSource(func) {
            if (func != null) {
                try {
                    return funcToString.call(func);
                } catch (e) {}
                try {
                    return (func + '');
                } catch (e) {}
            }
            return '';
        }

        module.exports = toSource;


        /***/
    }),
    /* 57 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsEqualDeep = __webpack_require__(158),
            isObjectLike = __webpack_require__(7);

        /**
         * The base implementation of `_.isEqual` which supports partial comparisons
         * and tracks traversed objects.
         *
         * @private
         * @param {*} value The value to compare.
         * @param {*} other The other value to compare.
         * @param {boolean} bitmask The bitmask flags.
         *  1 - Unordered comparison
         *  2 - Partial comparison
         * @param {Function} [customizer] The function to customize comparisons.
         * @param {Object} [stack] Tracks traversed `value` and `other` objects.
         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
         */
        function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) {
                return true;
            }
            if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
                return value !== value && other !== other;
            }
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }

        module.exports = baseIsEqual;


        /***/
    }),
    /* 58 */
    /***/
    (function(module, exports, __webpack_require__) {

        var SetCache = __webpack_require__(159),
            arraySome = __webpack_require__(162),
            cacheHas = __webpack_require__(163);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2;

        /**
         * A specialized version of `baseIsEqualDeep` for arrays with support for
         * partial deep comparisons.
         *
         * @private
         * @param {Array} array The array to compare.
         * @param {Array} other The other array to compare.
         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
         * @param {Function} customizer The function to customize comparisons.
         * @param {Function} equalFunc The function to determine equivalents of values.
         * @param {Object} stack Tracks traversed `array` and `other` objects.
         * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
         */
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
                arrLength = array.length,
                othLength = other.length;

            if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
                return false;
            }
            // Assume cyclic values are equal.
            var stacked = stack.get(array);
            if (stacked && stack.get(other)) {
                return stacked == other;
            }
            var index = -1,
                result = true,
                seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

            stack.set(array, other);
            stack.set(other, array);

            // Ignore non-index properties.
            while (++index < arrLength) {
                var arrValue = array[index],
                    othValue = other[index];

                if (customizer) {
                    var compared = isPartial ?
                        customizer(othValue, arrValue, index, other, array, stack) :
                        customizer(arrValue, othValue, index, array, other, stack);
                }
                if (compared !== undefined) {
                    if (compared) {
                        continue;
                    }
                    result = false;
                    break;
                }
                // Recursively compare arrays (susceptible to call stack limits).
                if (seen) {
                    if (!arraySome(other, function(othValue, othIndex) {
                            if (!cacheHas(seen, othIndex) &&
                                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                                return seen.push(othIndex);
                            }
                        })) {
                        result = false;
                        break;
                    }
                } else if (!(
                        arrValue === othValue ||
                        equalFunc(arrValue, othValue, bitmask, customizer, stack)
                    )) {
                    result = false;
                    break;
                }
            }
            stack['delete'](array);
            stack['delete'](other);
            return result;
        }

        module.exports = equalArrays;


        /***/
    }),
    /* 59 */
    /***/
    (function(module, exports, __webpack_require__) {

        var root = __webpack_require__(5);

        /** Built-in value references. */
        var Uint8Array = root.Uint8Array;

        module.exports = Uint8Array;


        /***/
    }),
    /* 60 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetAllKeys = __webpack_require__(61),
            getSymbols = __webpack_require__(37),
            keys = __webpack_require__(14);

        /**
         * Creates an array of own enumerable property names and symbols of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names and symbols.
         */
        function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
        }

        module.exports = getAllKeys;


        /***/
    }),
    /* 61 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayPush = __webpack_require__(62),
            isArray = __webpack_require__(4);

        /**
         * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
         * `keysFunc` and `symbolsFunc` to get the enumerable property names and
         * symbols of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {Function} keysFunc The function to get the keys of `object`.
         * @param {Function} symbolsFunc The function to get the symbols of `object`.
         * @returns {Array} Returns the array of property names and symbols.
         */
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object);
            return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
        }

        module.exports = baseGetAllKeys;


        /***/
    }),
    /* 62 */
    /***/
    (function(module, exports) {

        /**
         * Appends the elements of `values` to `array`.
         *
         * @private
         * @param {Array} array The array to modify.
         * @param {Array} values The values to append.
         * @returns {Array} Returns `array`.
         */
        function arrayPush(array, values) {
            var index = -1,
                length = values.length,
                offset = array.length;

            while (++index < length) {
                array[offset + index] = values[index];
            }
            return array;
        }

        module.exports = arrayPush;


        /***/
    }),
    /* 63 */
    /***/
    (function(module, exports) {

        /**
         * This method returns a new empty array.
         *
         * @static
         * @memberOf _
         * @since 4.13.0
         * @category Util
         * @returns {Array} Returns the new empty array.
         * @example
         *
         * var arrays = _.times(2, _.stubArray);
         *
         * console.log(arrays);
         * // => [[], []]
         *
         * console.log(arrays[0] === arrays[1]);
         * // => false
         */
        function stubArray() {
            return [];
        }

        module.exports = stubArray;


        /***/
    }),
    /* 64 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(8);

        /**
         * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` if suitable for strict
         *  equality comparisons, else `false`.
         */
        function isStrictComparable(value) {
            return value === value && !isObject(value);
        }

        module.exports = isStrictComparable;


        /***/
    }),
    /* 65 */
    /***/
    (function(module, exports) {

        /**
         * A specialized version of `matchesProperty` for source values suitable
         * for strict equality comparisons, i.e. `===`.
         *
         * @private
         * @param {string} key The key of the property to get.
         * @param {*} srcValue The value to match.
         * @returns {Function} Returns the new spec function.
         */
        function matchesStrictComparable(key, srcValue) {
            return function(object) {
                if (object == null) {
                    return false;
                }
                return object[key] === srcValue &&
                    (srcValue !== undefined || (key in Object(object)));
            };
        }

        module.exports = matchesStrictComparable;


        /***/
    }),
    /* 66 */
    /***/
    (function(module, exports, __webpack_require__) {

        var castPath = __webpack_require__(67),
            toKey = __webpack_require__(22);

        /**
         * The base implementation of `_.get` without support for default values.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {Array|string} path The path of the property to get.
         * @returns {*} Returns the resolved value.
         */
        function baseGet(object, path) {
            path = castPath(path, object);

            var index = 0,
                length = path.length;

            while (object != null && index < length) {
                object = object[toKey(path[index++])];
            }
            return (index && index == length) ? object : undefined;
        }

        module.exports = baseGet;


        /***/
    }),
    /* 67 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isArray = __webpack_require__(4),
            isKey = __webpack_require__(38),
            stringToPath = __webpack_require__(176),
            toString = __webpack_require__(179);

        /**
         * Casts `value` to a path array if it's not one.
         *
         * @private
         * @param {*} value The value to inspect.
         * @param {Object} [object] The object to query keys on.
         * @returns {Array} Returns the cast property path array.
         */
        function castPath(value, object) {
            if (isArray(value)) {
                return value;
            }
            return isKey(value, object) ? [value] : stringToPath(toString(value));
        }

        module.exports = castPath;


        /***/
    }),
    /* 68 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseForOwn = __webpack_require__(46),
            createBaseEach = __webpack_require__(188);

        /**
         * The base implementation of `_.forEach` without support for iteratee shorthands.
         *
         * @private
         * @param {Array|Object} collection The collection to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array|Object} Returns `collection`.
         */
        var baseEach = createBaseEach(baseForOwn);

        module.exports = baseEach;


        /***/
    }),
    /* 69 */
    /***/
    (function(module, exports) {

        /**
         * A specialized version of `_.forEach` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns `array`.
         */
        function arrayEach(array, iteratee) {
            var index = -1,
                length = array == null ? 0 : array.length;

            while (++index < length) {
                if (iteratee(array[index], index, array) === false) {
                    break;
                }
            }
            return array;
        }

        module.exports = arrayEach;


        /***/
    }),
    /* 70 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseAssignValue = __webpack_require__(71),
            eq = __webpack_require__(34);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Assigns `value` to `key` of `object` if the existing value is not equivalent
         * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
         * for equality comparisons.
         *
         * @private
         * @param {Object} object The object to modify.
         * @param {string} key The key of the property to assign.
         * @param {*} value The value to assign.
         */
        function assignValue(object, key, value) {
            var objValue = object[key];
            if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
                (value === undefined && !(key in object))) {
                baseAssignValue(object, key, value);
            }
        }

        module.exports = assignValue;


        /***/
    }),
    /* 71 */
    /***/
    (function(module, exports, __webpack_require__) {

        var defineProperty = __webpack_require__(192);

        /**
         * The base implementation of `assignValue` and `assignMergeValue` without
         * value checks.
         *
         * @private
         * @param {Object} object The object to modify.
         * @param {string} key The key of the property to assign.
         * @param {*} value The value to assign.
         */
        function baseAssignValue(object, key, value) {
            if (key == '__proto__' && defineProperty) {
                defineProperty(object, key, {
                    'configurable': true,
                    'enumerable': true,
                    'value': value,
                    'writable': true
                });
            } else {
                object[key] = value;
            }
        }

        module.exports = baseAssignValue;


        /***/
    }),
    /* 72 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayLikeKeys = __webpack_require__(47),
            baseKeysIn = __webpack_require__(195),
            isArrayLike = __webpack_require__(15);

        /**
         * Creates an array of the own and inherited enumerable property names of `object`.
         *
         * **Note:** Non-object values are coerced to objects.
         *
         * @static
         * @memberOf _
         * @since 3.0.0
         * @category Object
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         * @example
         *
         * function Foo() {
         *   this.a = 1;
         *   this.b = 2;
         * }
         *
         * Foo.prototype.c = 3;
         *
         * _.keysIn(new Foo);
         * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
         */
        function keysIn(object) {
            return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }

        module.exports = keysIn;


        /***/
    }),
    /* 73 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayPush = __webpack_require__(62),
            getPrototype = __webpack_require__(32),
            getSymbols = __webpack_require__(37),
            stubArray = __webpack_require__(63);

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeGetSymbols = Object.getOwnPropertySymbols;

        /**
         * Creates an array of the own and inherited enumerable symbols of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of symbols.
         */
        var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
            var result = [];
            while (object) {
                arrayPush(result, getSymbols(object));
                object = getPrototype(object);
            }
            return result;
        };

        module.exports = getSymbolsIn;


        /***/
    }),
    /* 74 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Checkboard = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _checkboard = __webpack_require__(220);

        var checkboard = _interopRequireWildcard(_checkboard);

        function _interopRequireWildcard(obj) {
            if (obj && obj.__esModule) {
                return obj;
            } else {
                var newObj = {};
                if (obj != null) {
                    for (var key in obj) {
                        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                    }
                }
                newObj.default = obj;
                return newObj;
            }
        }

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Checkboard = exports.Checkboard = function Checkboard(_ref) {
            var white = _ref.white,
                grey = _ref.grey,
                size = _ref.size,
                renderers = _ref.renderers,
                borderRadius = _ref.borderRadius,
                boxShadow = _ref.boxShadow;

            var styles = (0, _reactcss2.default)({
                'default': {
                    grid: {
                        borderRadius: borderRadius,
                        boxShadow: boxShadow,
                        absolute: '0px 0px 0px 0px',
                        background: 'url(' + checkboard.get(white, grey, size, renderers.canvas) + ') center left'
                    }
                }
            });

            return _react2.default.createElement('div', {
                style: styles.grid
            });
        };

        Checkboard.defaultProps = {
            size: 8,
            white: 'transparent',
            grey: 'rgba(0,0,0,.08)',
            renderers: {}
        };

        exports.default = Checkboard;

        /***/
    }),
    /* 75 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(8),
            now = __webpack_require__(227),
            toNumber = __webpack_require__(228);

        /** Error message constants. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeMax = Math.max,
            nativeMin = Math.min;

        /**
         * Creates a debounced function that delays invoking `func` until after `wait`
         * milliseconds have elapsed since the last time the debounced function was
         * invoked. The debounced function comes with a `cancel` method to cancel
         * delayed `func` invocations and a `flush` method to immediately invoke them.
         * Provide `options` to indicate whether `func` should be invoked on the
         * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
         * with the last arguments provided to the debounced function. Subsequent
         * calls to the debounced function return the result of the last `func`
         * invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the debounced function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.debounce` and `_.throttle`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to debounce.
         * @param {number} [wait=0] The number of milliseconds to delay.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=false]
         *  Specify invoking on the leading edge of the timeout.
         * @param {number} [options.maxWait]
         *  The maximum time `func` is allowed to be delayed before it's invoked.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new debounced function.
         * @example
         *
         * // Avoid costly calculations while the window size is in flux.
         * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
         *
         * // Invoke `sendMail` when clicked, debouncing subsequent calls.
         * jQuery(element).on('click', _.debounce(sendMail, 300, {
         *   'leading': true,
         *   'trailing': false
         * }));
         *
         * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
         * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
         * var source = new EventSource('/stream');
         * jQuery(source).on('message', debounced);
         *
         * // Cancel the trailing debounced invocation.
         * jQuery(window).on('popstate', debounced.cancel);
         */
        function debounce(func, wait, options) {
            var lastArgs,
                lastThis,
                maxWait,
                result,
                timerId,
                lastCallTime,
                lastInvokeTime = 0,
                leading = false,
                maxing = false,
                trailing = true;

            if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT);
            }
            wait = toNumber(wait) || 0;
            if (isObject(options)) {
                leading = !!options.leading;
                maxing = 'maxWait' in options;
                maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                trailing = 'trailing' in options ? !!options.trailing : trailing;
            }

            function invokeFunc(time) {
                var args = lastArgs,
                    thisArg = lastThis;

                lastArgs = lastThis = undefined;
                lastInvokeTime = time;
                result = func.apply(thisArg, args);
                return result;
            }

            function leadingEdge(time) {
                // Reset any `maxWait` timer.
                lastInvokeTime = time;
                // Start the timer for the trailing edge.
                timerId = setTimeout(timerExpired, wait);
                // Invoke the leading edge.
                return leading ? invokeFunc(time) : result;
            }

            function remainingWait(time) {
                var timeSinceLastCall = time - lastCallTime,
                    timeSinceLastInvoke = time - lastInvokeTime,
                    timeWaiting = wait - timeSinceLastCall;

                return maxing ?
                    nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) :
                    timeWaiting;
            }

            function shouldInvoke(time) {
                var timeSinceLastCall = time - lastCallTime,
                    timeSinceLastInvoke = time - lastInvokeTime;

                // Either this is the first call, activity has stopped and we're at the
                // trailing edge, the system time has gone backwards and we're treating
                // it as the trailing edge, or we've hit the `maxWait` limit.
                return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
                    (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
            }

            function timerExpired() {
                var time = now();
                if (shouldInvoke(time)) {
                    return trailingEdge(time);
                }
                // Restart the timer.
                timerId = setTimeout(timerExpired, remainingWait(time));
            }

            function trailingEdge(time) {
                timerId = undefined;

                // Only invoke if we have `lastArgs` which means `func` has been
                // debounced at least once.
                if (trailing && lastArgs) {
                    return invokeFunc(time);
                }
                lastArgs = lastThis = undefined;
                return result;
            }

            function cancel() {
                if (timerId !== undefined) {
                    clearTimeout(timerId);
                }
                lastInvokeTime = 0;
                lastArgs = lastCallTime = lastThis = timerId = undefined;
            }

            function flush() {
                return timerId === undefined ? result : trailingEdge(now());
            }

            function debounced() {
                var time = now(),
                    isInvoking = shouldInvoke(time);

                lastArgs = arguments;
                lastThis = this;
                lastCallTime = time;

                if (isInvoking) {
                    if (timerId === undefined) {
                        return leadingEdge(lastCallTime);
                    }
                    if (maxing) {
                        // Handle invocations in a tight loop.
                        timerId = setTimeout(timerExpired, wait);
                        return invokeFunc(lastCallTime);
                    }
                }
                if (timerId === undefined) {
                    timerId = setTimeout(timerExpired, wait);
                }
                return result;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
        }

        module.exports = debounce;


        /***/
    }),
    /* 76 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.ColorWrap = undefined;

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _debounce = __webpack_require__(75);

        var _debounce2 = _interopRequireDefault(_debounce);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var ColorWrap = exports.ColorWrap = function ColorWrap(Picker) {
            var ColorPicker = function(_ref) {
                _inherits(ColorPicker, _ref);

                function ColorPicker(props) {
                    _classCallCheck(this, ColorPicker);

                    var _this = _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this));

                    _this.handleChange = function(data, event) {
                        var isValidColor = _color2.default.simpleCheckForValidColor(data);
                        if (isValidColor) {
                            var colors = _color2.default.toState(data, data.h || _this.state.oldHue);
                            _this.setState(colors);
                            _this.props.onChangeComplete && _this.debounce(_this.props.onChangeComplete, colors, event);
                            _this.props.onChange && _this.props.onChange(colors, event);
                        }
                    };

                    _this.handleSwatchHover = function(data, event) {
                        var isValidColor = _color2.default.simpleCheckForValidColor(data);
                        if (isValidColor) {
                            var colors = _color2.default.toState(data, data.h || _this.state.oldHue);
                            _this.setState(colors);
                            _this.props.onSwatchHover && _this.props.onSwatchHover(colors, event);
                        }
                    };

                    _this.state = _extends({}, _color2.default.toState(props.color, 0));

                    _this.debounce = (0, _debounce2.default)(function(fn, data, event) {
                        fn(data, event);
                    }, 100);
                    return _this;
                }

                _createClass(ColorPicker, [{
                    key: 'componentWillReceiveProps',
                    value: function componentWillReceiveProps(nextProps) {
                        this.setState(_extends({}, _color2.default.toState(nextProps.color, this.state.oldHue)));
                    }
                }, {
                    key: 'render',
                    value: function render() {
                        var optionalEvents = {};
                        if (this.props.onSwatchHover) {
                            optionalEvents.onSwatchHover = this.handleSwatchHover;
                        }

                        return _react2.default.createElement(Picker, _extends({}, this.props, this.state, {
                            onChange: this.handleChange
                        }, optionalEvents));
                    }
                }]);

                return ColorPicker;
            }(_react.PureComponent || _react.Component);

            ColorPicker.propTypes = _extends({}, Picker.propTypes);

            ColorPicker.defaultProps = _extends({}, Picker.defaultProps, {
                color: {
                    h: 250,
                    s: 0.50,
                    l: 0.20,
                    a: 1
                }
            });

            return ColorPicker;
        };

        exports.default = ColorWrap;

        /***/
    }),
    /* 77 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
            value: true
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "red", function() {
            return red;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "pink", function() {
            return pink;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "purple", function() {
            return purple;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "deepPurple", function() {
            return deepPurple;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "indigo", function() {
            return indigo;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "blue", function() {
            return blue;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "lightBlue", function() {
            return lightBlue;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "cyan", function() {
            return cyan;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "teal", function() {
            return teal;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "green", function() {
            return green;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "lightGreen", function() {
            return lightGreen;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "lime", function() {
            return lime;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "yellow", function() {
            return yellow;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "amber", function() {
            return amber;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "orange", function() {
            return orange;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "deepOrange", function() {
            return deepOrange;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "brown", function() {
            return brown;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "grey", function() {
            return grey;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "blueGrey", function() {
            return blueGrey;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "darkText", function() {
            return darkText;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "lightText", function() {
            return lightText;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "darkIcons", function() {
            return darkIcons;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "lightIcons", function() {
            return lightIcons;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "white", function() {
            return white;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "black", function() {
            return black;
        });
        var red = {
            "50": "#ffebee",
            "100": "#ffcdd2",
            "200": "#ef9a9a",
            "300": "#e57373",
            "400": "#ef5350",
            "500": "#f44336",
            "600": "#e53935",
            "700": "#d32f2f",
            "800": "#c62828",
            "900": "#b71c1c",
            "a100": "#ff8a80",
            "a200": "#ff5252",
            "a400": "#ff1744",
            "a700": "#d50000"
        };
        var pink = {
            "50": "#fce4ec",
            "100": "#f8bbd0",
            "200": "#f48fb1",
            "300": "#f06292",
            "400": "#ec407a",
            "500": "#e91e63",
            "600": "#d81b60",
            "700": "#c2185b",
            "800": "#ad1457",
            "900": "#880e4f",
            "a100": "#ff80ab",
            "a200": "#ff4081",
            "a400": "#f50057",
            "a700": "#c51162"
        };
        var purple = {
            "50": "#f3e5f5",
            "100": "#e1bee7",
            "200": "#ce93d8",
            "300": "#ba68c8",
            "400": "#ab47bc",
            "500": "#9c27b0",
            "600": "#8e24aa",
            "700": "#7b1fa2",
            "800": "#6a1b9a",
            "900": "#4a148c",
            "a100": "#ea80fc",
            "a200": "#e040fb",
            "a400": "#d500f9",
            "a700": "#aa00ff"
        };
        var deepPurple = {
            "50": "#ede7f6",
            "100": "#d1c4e9",
            "200": "#b39ddb",
            "300": "#9575cd",
            "400": "#7e57c2",
            "500": "#673ab7",
            "600": "#5e35b1",
            "700": "#512da8",
            "800": "#4527a0",
            "900": "#311b92",
            "a100": "#b388ff",
            "a200": "#7c4dff",
            "a400": "#651fff",
            "a700": "#6200ea"
        };
        var indigo = {
            "50": "#e8eaf6",
            "100": "#c5cae9",
            "200": "#9fa8da",
            "300": "#7986cb",
            "400": "#5c6bc0",
            "500": "#3f51b5",
            "600": "#3949ab",
            "700": "#303f9f",
            "800": "#283593",
            "900": "#1a237e",
            "a100": "#8c9eff",
            "a200": "#536dfe",
            "a400": "#3d5afe",
            "a700": "#304ffe"
        };
        var blue = {
            "50": "#e3f2fd",
            "100": "#bbdefb",
            "200": "#90caf9",
            "300": "#64b5f6",
            "400": "#42a5f5",
            "500": "#2196f3",
            "600": "#1e88e5",
            "700": "#1976d2",
            "800": "#1565c0",
            "900": "#0d47a1",
            "a100": "#82b1ff",
            "a200": "#448aff",
            "a400": "#2979ff",
            "a700": "#2962ff"
        };
        var lightBlue = {
            "50": "#e1f5fe",
            "100": "#b3e5fc",
            "200": "#81d4fa",
            "300": "#4fc3f7",
            "400": "#29b6f6",
            "500": "#03a9f4",
            "600": "#039be5",
            "700": "#0288d1",
            "800": "#0277bd",
            "900": "#01579b",
            "a100": "#80d8ff",
            "a200": "#40c4ff",
            "a400": "#00b0ff",
            "a700": "#0091ea"
        };
        var cyan = {
            "50": "#e0f7fa",
            "100": "#b2ebf2",
            "200": "#80deea",
            "300": "#4dd0e1",
            "400": "#26c6da",
            "500": "#00bcd4",
            "600": "#00acc1",
            "700": "#0097a7",
            "800": "#00838f",
            "900": "#006064",
            "a100": "#84ffff",
            "a200": "#18ffff",
            "a400": "#00e5ff",
            "a700": "#00b8d4"
        };
        var teal = {
            "50": "#e0f2f1",
            "100": "#b2dfdb",
            "200": "#80cbc4",
            "300": "#4db6ac",
            "400": "#26a69a",
            "500": "#009688",
            "600": "#00897b",
            "700": "#00796b",
            "800": "#00695c",
            "900": "#004d40",
            "a100": "#a7ffeb",
            "a200": "#64ffda",
            "a400": "#1de9b6",
            "a700": "#00bfa5"
        };
        var green = {
            "50": "#e8f5e9",
            "100": "#c8e6c9",
            "200": "#a5d6a7",
            "300": "#81c784",
            "400": "#66bb6a",
            "500": "#4caf50",
            "600": "#43a047",
            "700": "#388e3c",
            "800": "#2e7d32",
            "900": "#1b5e20",
            "a100": "#b9f6ca",
            "a200": "#69f0ae",
            "a400": "#00e676",
            "a700": "#00c853"
        };
        var lightGreen = {
            "50": "#f1f8e9",
            "100": "#dcedc8",
            "200": "#c5e1a5",
            "300": "#aed581",
            "400": "#9ccc65",
            "500": "#8bc34a",
            "600": "#7cb342",
            "700": "#689f38",
            "800": "#558b2f",
            "900": "#33691e",
            "a100": "#ccff90",
            "a200": "#b2ff59",
            "a400": "#76ff03",
            "a700": "#64dd17"
        };
        var lime = {
            "50": "#f9fbe7",
            "100": "#f0f4c3",
            "200": "#e6ee9c",
            "300": "#dce775",
            "400": "#d4e157",
            "500": "#cddc39",
            "600": "#c0ca33",
            "700": "#afb42b",
            "800": "#9e9d24",
            "900": "#827717",
            "a100": "#f4ff81",
            "a200": "#eeff41",
            "a400": "#c6ff00",
            "a700": "#aeea00"
        };
        var yellow = {
            "50": "#fffde7",
            "100": "#fff9c4",
            "200": "#fff59d",
            "300": "#fff176",
            "400": "#ffee58",
            "500": "#ffeb3b",
            "600": "#fdd835",
            "700": "#fbc02d",
            "800": "#f9a825",
            "900": "#f57f17",
            "a100": "#ffff8d",
            "a200": "#ffff00",
            "a400": "#ffea00",
            "a700": "#ffd600"
        };
        var amber = {
            "50": "#fff8e1",
            "100": "#ffecb3",
            "200": "#ffe082",
            "300": "#ffd54f",
            "400": "#ffca28",
            "500": "#ffc107",
            "600": "#ffb300",
            "700": "#ffa000",
            "800": "#ff8f00",
            "900": "#ff6f00",
            "a100": "#ffe57f",
            "a200": "#ffd740",
            "a400": "#ffc400",
            "a700": "#ffab00"
        };
        var orange = {
            "50": "#fff3e0",
            "100": "#ffe0b2",
            "200": "#ffcc80",
            "300": "#ffb74d",
            "400": "#ffa726",
            "500": "#ff9800",
            "600": "#fb8c00",
            "700": "#f57c00",
            "800": "#ef6c00",
            "900": "#e65100",
            "a100": "#ffd180",
            "a200": "#ffab40",
            "a400": "#ff9100",
            "a700": "#ff6d00"
        };
        var deepOrange = {
            "50": "#fbe9e7",
            "100": "#ffccbc",
            "200": "#ffab91",
            "300": "#ff8a65",
            "400": "#ff7043",
            "500": "#ff5722",
            "600": "#f4511e",
            "700": "#e64a19",
            "800": "#d84315",
            "900": "#bf360c",
            "a100": "#ff9e80",
            "a200": "#ff6e40",
            "a400": "#ff3d00",
            "a700": "#dd2c00"
        };
        var brown = {
            "50": "#efebe9",
            "100": "#d7ccc8",
            "200": "#bcaaa4",
            "300": "#a1887f",
            "400": "#8d6e63",
            "500": "#795548",
            "600": "#6d4c41",
            "700": "#5d4037",
            "800": "#4e342e",
            "900": "#3e2723"
        };
        var grey = {
            "50": "#fafafa",
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121"
        };
        var blueGrey = {
            "50": "#eceff1",
            "100": "#cfd8dc",
            "200": "#b0bec5",
            "300": "#90a4ae",
            "400": "#78909c",
            "500": "#607d8b",
            "600": "#546e7a",
            "700": "#455a64",
            "800": "#37474f",
            "900": "#263238"
        };
        var darkText = {
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.38)",
            "dividers": "rgba(0, 0, 0, 0.12)"
        };
        var lightText = {
            "primary": "rgba(255, 255, 255, 1)",
            "secondary": "rgba(255, 255, 255, 0.7)",
            "disabled": "rgba(255, 255, 255, 0.5)",
            "dividers": "rgba(255, 255, 255, 0.12)"
        };
        var darkIcons = {
            "active": "rgba(0, 0, 0, 0.54)",
            "inactive": "rgba(0, 0, 0, 0.38)"
        };
        var lightIcons = {
            "active": "rgba(255, 255, 255, 1)",
            "inactive": "rgba(255, 255, 255, 0.5)"
        };
        var white = "#ffffff";
        var black = "#000000";

        /* harmony default export */
        __webpack_exports__["default"] = ({
            red: red,
            pink: pink,
            purple: purple,
            deepPurple: deepPurple,
            indigo: indigo,
            blue: blue,
            lightBlue: lightBlue,
            cyan: cyan,
            teal: teal,
            green: green,
            lightGreen: lightGreen,
            lime: lime,
            yellow: yellow,
            amber: amber,
            orange: orange,
            deepOrange: deepOrange,
            brown: brown,
            grey: grey,
            blueGrey: blueGrey,
            darkText: darkText,
            lightText: lightText,
            darkIcons: darkIcons,
            lightIcons: lightIcons,
            white: white,
            black: black
        });


        /***/
    }),
    /* 78 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (immutable) */
        __webpack_exports__["b"] = timeTillNextMsg;
        /* harmony export (immutable) */
        __webpack_exports__["a"] = getCurrPeriodId;
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__pData__ = __webpack_require__(269);

        function timeTillNextMsg(isFormal) {
            var cTime = new Date();
            var currDay = cTime.getDay();
            var dayBellData = isFormal ? __WEBPACK_IMPORTED_MODULE_0__pData__["b" /* formalData */ ] : __WEBPACK_IMPORTED_MODULE_0__pData__["a" /* bellData */ ][currDay];
            if (dayBellData) {
                var hour = cTime.getHours(); // Eg 9 at 9am, 13 at 1pm
                var min = cTime.getMinutes(); // Eg 42 at 4:42pm
                for (var pTime in dayBellData) {
                    var currMsg = dayBellData[pTime]; // Eg. "the end of period 1"
                    var pHour = parseInt(pTime[0] + pTime[1], 10); // Finds the hour
                    var pMin = parseInt(pTime[3] + pTime[4], 10); // Finds the min
                    if (hour < pHour || hour === pHour && min < pMin) { // We are not past this period, so its the one we need to display
                        var minsDiff = (pHour - hour) * 60 + pMin - min;
                        return {
                            minsDiff: minsDiff,
                            nextMsg: currMsg
                        };
                    }
                }
                return {
                    isSchoolEnded: true
                };
            } else {
                return {
                    isWeekend: true
                };
            }
        }

        function getCurrPeriodId(isFormal) {
            var cTime = new Date();
            var currDay = cTime.getDay();
            var dayBellData = isFormal ? __WEBPACK_IMPORTED_MODULE_0__pData__["c" /* formalPeriodData */ ] : __WEBPACK_IMPORTED_MODULE_0__pData__["d" /* periodData */ ][currDay];
            if (dayBellData) {
                var hour = cTime.getHours(); // Eg 9 at 9am, 13 at 1pm
                var min = cTime.getMinutes(); // Eg 42 at 4:42pm
                for (var pTime in dayBellData) {
                    var pHour = parseInt(pTime[0] + pTime[1], 10); // Finds the hour
                    var pMin = parseInt(pTime[3] + pTime[4], 10); // Finds the min
                    if (hour < pHour || hour === pHour && min < pMin) { // We are not past this period, so its the one we need to display
                        return dayBellData[pTime]; // Show this period
                    }
                }
            }
            return null;
        }

        /***/
    }),
    /* 79 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (immutable) */
        __webpack_exports__["a"] = dataToTable;
        /* harmony export (immutable) */
        __webpack_exports__["b"] = getToday;
        /* harmony export (immutable) */
        __webpack_exports__["c"] = getWeek;
        /* harmony export (immutable) */
        __webpack_exports__["d"] = timeToMinsString;
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1_styled_components__ = __webpack_require__(12);
        var _templateObject = _taggedTemplateLiteral(['\n    border-collapse: collapse;\n'], ['\n    border-collapse: collapse;\n']),
            _templateObject2 = _taggedTemplateLiteral(['\n    padding: 10px;\n    font-size: 1.2rem;\n\n    border: 2px solid ', ';\n    color: ', ';\n\n    background-color: ', ';\n'], ['\n    padding: 10px;\n    font-size: 1.2rem;\n\n    border: 2px solid ', ';\n    color: ', ';\n\n    background-color: ', ';\n']),
            _templateObject3 = _taggedTemplateLiteral(['\n    width: calc(100%/5);\n'], ['\n    width: calc(100%/5);\n']),
            _templateObject4 = _taggedTemplateLiteral(['\n    width: 100%;\n    @media (min-width: 900px){\n        width: auto;\n        float: right;\n    }\n'], ['\n    width: 100%;\n    @media (min-width: 900px){\n        width: auto;\n        float: right;\n    }\n']),
            _templateObject5 = _taggedTemplateLiteral(['\n    color: ', ';\n\n    background-color: ', ';\n'], ['\n    color: ', ';\n\n    background-color: ', ';\n']);

        function _taggedTemplateLiteral(strings, raw) {
            return Object.freeze(Object.defineProperties(strings, {
                raw: {
                    value: Object.freeze(raw)
                }
            }));
        }
        var classStyles = ['rgba(255, 0, 15, 0.5)', 'rgba(255, 126, 0, 0.5)', 'rgba(255, 183, 0, 0.5)', 'rgba(0, 191, 18, 0.5)', 'rgba(0, 116, 19, 0.5)', 'rgba(0, 185, 255, 0.5)', 'rgba(0, 55, 255, 0.5)', 'rgba(117, 0, 255, 0.5)', 'rgba(197, 0, 255, 0.5)', 'rgba(255, 0, 204, 0.5)', 'rgba(255, 0, 93, 0.5)'];
        var Table = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].table(_templateObject);
        var TD = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].td(_templateObject2, function(props) {
            return props.theme.text;
        }, function(props) {
            return props.theme.text;
        }, function(props) {
            return classStyles[props.classId];
        });
        var TD5 = TD.extend(_templateObject3);

        function dataToTable(pData, showChangeValueScreen, week) {
            var tableData = [];
            var weekData = pData.bodyData[week];
            var classes = pData.classes;
            for (var rawDayId in weekData) {
                var currDay = weekData[rawDayId];
                var _loop = function _loop(pId) {
                    var currPer = currDay[pId];
                    if (currPer) { // If this period isn't null eg. p0 = null
                        var listId = pId === "RC" ? 0 : parseInt(pId, 10) + 1;
                        var dayId = parseInt(rawDayId, 10);
                        if (!tableData[listId]) { // Add this column to the table
                            tableData[listId] = [null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TD5, {
                                key: '1' + pId
                            }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TD5, {
                                key: '2' + pId
                            }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TD5, {
                                key: '3' + pId
                            }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TD5, {
                                key: '4' + pId
                            }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TD5, {
                                key: '5' + pId
                            })];
                        }
                        tableData[listId][dayId] = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TD5, {
                            key: rawDayId + pId,
                            classId: currPer.class,
                            onClick: function onClick() {
                                return showChangeValueScreen(week, dayId, pId);
                            }
                        }, classes[currPer.class], ' in room ', currPer.room);
                    }
                };
                for (var pId in currDay) {
                    _loop(pId);
                }
            }
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Table, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tbody', null, tableData.map(function(val, iteration) {
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr', {
                    key: iteration
                }, val);
            })));
        }
        var TodayTable = Table.extend(_templateObject4);
        var TH = TD.withComponent('th');
        var TDHighlight = TD.extend(_templateObject5, function(props) {
            return props.theme.background;
        }, function(props) {
            return props.theme.text;
        });

        function getToday(timetable, currWeekName, currPeriodId) {
            var currWeek = timetable.bodyData[currWeekName === "Week A" ? 0 : 1];
            var classes = timetable.classes;
            var currDayId = new Date().getDay();
            var currDay = currWeek[currDayId];
            if (currDay) { // Check this is a school day
                var tableElements = [];
                for (var pIndex in currDay) {
                    var currPeriod = currDay[pIndex];
                    if (currPeriod) {
                        var nextRow = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr', {
                            key: pIndex
                        }, parseInt(pIndex, 10) === currPeriodId ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TDHighlight, null, classes[currPeriod.class], ' in room ', currPeriod.room) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TD, null, classes[currPeriod.class], ' in room ', currPeriod.room));
                        if (pIndex === "RC") { // Add this to the start
                            tableElements.unshift(nextRow);
                        } else { // Add to the end
                            tableElements.push(nextRow);
                        }
                    }
                }
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TodayTable, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tbody', null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr', null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TH, null, 'Today\'s Timetable')), tableElements));
            }
            return null;
        }

        function getWeek() {
            var d = new Date();
            d.setHours(0, 0, 0, 0); // Thursday in current week decides the year.
            d.setDate(d.getDate() + 3 - (d.getDay() + 6) % 7); // January 4 is always in week 1.
            var week1 = new Date(d.getFullYear(), 0, 4); // Adjust to Thursday in week 1 and count number of weeks from date to week1.
            return 1 + Math.round(((d.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);
        }

        function timeToMinsString(timeLeft, shortHand) {
            if (timeLeft === 1) {
                return shortHand ? '1 min' : '1 minute';
            } else {
                return shortHand ? timeLeft + ' mins' : timeLeft + ' minutes';
            }
        }

        /***/
    }),
    /* 80 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "d", function() {
            return themes;
        });
        /* harmony export (immutable) */
        __webpack_exports__["c"] = saveTheme;
        /* harmony export (immutable) */
        __webpack_exports__["b"] = getTheme;
        /* harmony export (immutable) */
        __webpack_exports__["a"] = compareTheme;
        var themes = {
            dark: {
                background: '#000000',
                main: '#c5c5c5',
                text: '#ffffff'
            },
            red: {
                background: '#ffffff',
                main: '#ff0000',
                text: '#000000'
            }
        };

        function saveTheme(theme) {
            localStorage.setItem('girracountdownTheme', JSON.stringify(theme));
        }

        function getTheme() {
            var val = localStorage.getItem('girracountdownTheme');
            if (val) {
                return JSON.parse(val);
            }
            return false;
        }

        function compareTheme(theme1, theme2) {
            return theme1.background === theme2.background && theme1.main === theme2.main && theme1.text === theme2.text;
        }

        /***/
    }),
    /* 81 */
    /***/
    (function(module, exports, __webpack_require__) {

        __webpack_require__(82);
        module.exports = __webpack_require__(87);


        /***/
    }),
    /* 82 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        // @remove-on-eject-begin
        /**
         * Copyright (c) 2015-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */
        // @remove-on-eject-end


        if (typeof Promise === 'undefined') {
            // Rejection tracking prevents a common issue where React gets into an
            // inconsistent state due to an error, but it gets swallowed by a Promise,
            // and the user has no idea what causes React's erratic future behavior.
            __webpack_require__(83).enable();
            window.Promise = __webpack_require__(85);
        }

        // fetch() polyfill for making API calls.
        __webpack_require__(86);

        // Object.assign() is commonly used with React.
        // It will use the native implementation if it's present and isn't buggy.
        Object.assign = __webpack_require__(24);

        // In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.
        // We don't polyfill it in the browser--this is user's responsibility.
        if (false) {
            require('raf').polyfill(global);
        }


        /***/
    }),
    /* 83 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        var Promise = __webpack_require__(40);

        var DEFAULT_WHITELIST = [
            ReferenceError,
            TypeError,
            RangeError
        ];

        var enabled = false;
        exports.disable = disable;

        function disable() {
            enabled = false;
            Promise._47 = null;
            Promise._71 = null;
        }

        exports.enable = enable;

        function enable(options) {
            options = options || {};
            if (enabled) disable();
            enabled = true;
            var id = 0;
            var displayId = 0;
            var rejections = {};
            Promise._47 = function(promise) {
                if (
                    promise._83 === 2 && // IS REJECTED
                    rejections[promise._56]
                ) {
                    if (rejections[promise._56].logged) {
                        onHandled(promise._56);
                    } else {
                        clearTimeout(rejections[promise._56].timeout);
                    }
                    delete rejections[promise._56];
                }
            };
            Promise._71 = function(promise, err) {
                if (promise._75 === 0) { // not yet handled
                    promise._56 = id++;
                    rejections[promise._56] = {
                        displayId: null,
                        error: err,
                        timeout: setTimeout(
                            onUnhandled.bind(null, promise._56),
                            // For reference errors and type errors, this almost always
                            // means the programmer made a mistake, so log them after just
                            // 100ms
                            // otherwise, wait 2 seconds to see if they get handled
                            matchWhitelist(err, DEFAULT_WHITELIST) ?
                            100 :
                            2000
                        ),
                        logged: false
                    };
                }
            };

            function onUnhandled(id) {
                if (
                    options.allRejections ||
                    matchWhitelist(
                        rejections[id].error,
                        options.whitelist || DEFAULT_WHITELIST
                    )
                ) {
                    rejections[id].displayId = displayId++;
                    if (options.onUnhandled) {
                        rejections[id].logged = true;
                        options.onUnhandled(
                            rejections[id].displayId,
                            rejections[id].error
                        );
                    } else {
                        rejections[id].logged = true;
                        logError(
                            rejections[id].displayId,
                            rejections[id].error
                        );
                    }
                }
            }

            function onHandled(id) {
                if (rejections[id].logged) {
                    if (options.onHandled) {
                        options.onHandled(rejections[id].displayId, rejections[id].error);
                    } else if (!rejections[id].onUnhandled) {
                        console.warn(
                            'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'
                        );
                        console.warn(
                            '  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' +
                            rejections[id].displayId + '.'
                        );
                    }
                }
            }
        }

        function logError(id, error) {
            console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
            var errStr = (error && (error.stack || error)) + '';
            errStr.split('\n').forEach(function(line) {
                console.warn('  ' + line);
            });
        }

        function matchWhitelist(error, list) {
            return list.some(function(cls) {
                return error instanceof cls;
            });
        }

        /***/
    }),
    /* 84 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(global) {

            // Use the fastest means possible to execute a task in its own turn, with
            // priority over other events including IO, animation, reflow, and redraw
            // events in browsers.
            //
            // An exception thrown by a task will permanently interrupt the processing of
            // subsequent tasks. The higher level `asap` function ensures that if an
            // exception is thrown by a task, that the task queue will continue flushing as
            // soon as possible, but if you use `rawAsap` directly, you are responsible to
            // either ensure that no exceptions are thrown from your task, or to manually
            // call `rawAsap.requestFlush` if an exception is thrown.
            module.exports = rawAsap;

            function rawAsap(task) {
                if (!queue.length) {
                    requestFlush();
                    flushing = true;
                }
                // Equivalent to push, but avoids a function call.
                queue[queue.length] = task;
            }

            var queue = [];
            // Once a flush has been requested, no further calls to `requestFlush` are
            // necessary until the next `flush` completes.
            var flushing = false;
            // `requestFlush` is an implementation-specific method that attempts to kick
            // off a `flush` event as quickly as possible. `flush` will attempt to exhaust
            // the event queue before yielding to the browser's own event loop.
            var requestFlush;
            // The position of the next task to execute in the task queue. This is
            // preserved between calls to `flush` so that it can be resumed if
            // a task throws an exception.
            var index = 0;
            // If a task schedules additional tasks recursively, the task queue can grow
            // unbounded. To prevent memory exhaustion, the task queue will periodically
            // truncate already-completed tasks.
            var capacity = 1024;

            // The flush function processes all tasks that have been scheduled with
            // `rawAsap` unless and until one of those tasks throws an exception.
            // If a task throws an exception, `flush` ensures that its state will remain
            // consistent and will resume where it left off when called again.
            // However, `flush` does not make any arrangements to be called again if an
            // exception is thrown.
            function flush() {
                while (index < queue.length) {
                    var currentIndex = index;
                    // Advance the index before calling the task. This ensures that we will
                    // begin flushing on the next task the task throws an error.
                    index = index + 1;
                    queue[currentIndex].call();
                    // Prevent leaking memory for long chains of recursive calls to `asap`.
                    // If we call `asap` within tasks scheduled by `asap`, the queue will
                    // grow, but to avoid an O(n) walk for every task we execute, we don't
                    // shift tasks off the queue after they have been executed.
                    // Instead, we periodically shift 1024 tasks off the queue.
                    if (index > capacity) {
                        // Manually shift all values starting at the index back to the
                        // beginning of the queue.
                        for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
                            queue[scan] = queue[scan + index];
                        }
                        queue.length -= index;
                        index = 0;
                    }
                }
                queue.length = 0;
                index = 0;
                flushing = false;
            }

            // `requestFlush` is implemented using a strategy based on data collected from
            // every available SauceLabs Selenium web driver worker at time of writing.
            // https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

            // Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
            // have WebKitMutationObserver but not un-prefixed MutationObserver.
            // Must use `global` or `self` instead of `window` to work in both frames and web
            // workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

            /* globals self */
            var scope = typeof global !== "undefined" ? global : self;
            var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;

            // MutationObservers are desirable because they have high priority and work
            // reliably everywhere they are implemented.
            // They are implemented in all modern browsers.
            //
            // - Android 4-4.3
            // - Chrome 26-34
            // - Firefox 14-29
            // - Internet Explorer 11
            // - iPad Safari 6-7.1
            // - iPhone Safari 7-7.1
            // - Safari 6-7
            if (typeof BrowserMutationObserver === "function") {
                requestFlush = makeRequestCallFromMutationObserver(flush);

                // MessageChannels are desirable because they give direct access to the HTML
                // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
                // 11-12, and in web workers in many engines.
                // Although message channels yield to any queued rendering and IO tasks, they
                // would be better than imposing the 4ms delay of timers.
                // However, they do not work reliably in Internet Explorer or Safari.

                // Internet Explorer 10 is the only browser that has setImmediate but does
                // not have MutationObservers.
                // Although setImmediate yields to the browser's renderer, it would be
                // preferrable to falling back to setTimeout since it does not have
                // the minimum 4ms penalty.
                // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
                // Desktop to a lesser extent) that renders both setImmediate and
                // MessageChannel useless for the purposes of ASAP.
                // https://github.com/kriskowal/q/issues/396

                // Timers are implemented universally.
                // We fall back to timers in workers in most engines, and in foreground
                // contexts in the following browsers.
                // However, note that even this simple case requires nuances to operate in a
                // broad spectrum of browsers.
                //
                // - Firefox 3-13
                // - Internet Explorer 6-9
                // - iPad Safari 4.3
                // - Lynx 2.8.7
            } else {
                requestFlush = makeRequestCallFromTimer(flush);
            }

            // `requestFlush` requests that the high priority event queue be flushed as
            // soon as possible.
            // This is useful to prevent an error thrown in a task from stalling the event
            // queue if the exception handled by Node.js’s
            // `process.on("uncaughtException")` or by a domain.
            rawAsap.requestFlush = requestFlush;

            // To request a high priority event, we induce a mutation observer by toggling
            // the text of a text node between "1" and "-1".
            function makeRequestCallFromMutationObserver(callback) {
                var toggle = 1;
                var observer = new BrowserMutationObserver(callback);
                var node = document.createTextNode("");
                observer.observe(node, {
                    characterData: true
                });
                return function requestCall() {
                    toggle = -toggle;
                    node.data = toggle;
                };
            }

            // The message channel technique was discovered by Malte Ubl and was the
            // original foundation for this library.
            // http://www.nonblocking.io/2011/06/windownexttick.html

            // Safari 6.0.5 (at least) intermittently fails to create message ports on a
            // page's first load. Thankfully, this version of Safari supports
            // MutationObservers, so we don't need to fall back in that case.

            // function makeRequestCallFromMessageChannel(callback) {
            //     var channel = new MessageChannel();
            //     channel.port1.onmessage = callback;
            //     return function requestCall() {
            //         channel.port2.postMessage(0);
            //     };
            // }

            // For reasons explained above, we are also unable to use `setImmediate`
            // under any circumstances.
            // Even if we were, there is another bug in Internet Explorer 10.
            // It is not sufficient to assign `setImmediate` to `requestFlush` because
            // `setImmediate` must be called *by name* and therefore must be wrapped in a
            // closure.
            // Never forget.

            // function makeRequestCallFromSetImmediate(callback) {
            //     return function requestCall() {
            //         setImmediate(callback);
            //     };
            // }

            // Safari 6.0 has a problem where timers will get lost while the user is
            // scrolling. This problem does not impact ASAP because Safari 6.0 supports
            // mutation observers, so that implementation is used instead.
            // However, if we ever elect to use timers in Safari, the prevalent work-around
            // is to add a scroll event listener that calls for a flush.

            // `setTimeout` does not call the passed callback if the delay is less than
            // approximately 7 in web workers in Firefox 8 through 18, and sometimes not
            // even then.

            function makeRequestCallFromTimer(callback) {
                return function requestCall() {
                    // We dispatch a timeout with a specified delay of 0 for engines that
                    // can reliably accommodate that request. This will usually be snapped
                    // to a 4 milisecond delay, but once we're flushing, there's no delay
                    // between events.
                    var timeoutHandle = setTimeout(handleTimer, 0);
                    // However, since this timer gets frequently dropped in Firefox
                    // workers, we enlist an interval handle that will try to fire
                    // an event 20 times per second until it succeeds.
                    var intervalHandle = setInterval(handleTimer, 50);

                    function handleTimer() {
                        // Whichever timer succeeds will cancel both timers and
                        // execute the callback.
                        clearTimeout(timeoutHandle);
                        clearInterval(intervalHandle);
                        callback();
                    }
                };
            }

            // This is for `asap.js` only.
            // Its name will be periodically randomized to break any code that depends on
            // its existence.
            rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;

            // ASAP was originally a nextTick shim included in Q. This was factored out
            // into this ASAP package. It was later adapted to RSVP which made further
            // amendments. These decisions, particularly to marginalize MessageChannel and
            // to capture the MutationObserver implementation in a closure, were integrated
            // back into ASAP proper.
            // https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js

            /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(41)))

        /***/
    }),
    /* 85 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        //This file contains the ES6 extensions to the core Promises/A+ API

        var Promise = __webpack_require__(40);

        module.exports = Promise;

        /* Static Functions */

        var TRUE = valuePromise(true);
        var FALSE = valuePromise(false);
        var NULL = valuePromise(null);
        var UNDEFINED = valuePromise(undefined);
        var ZERO = valuePromise(0);
        var EMPTYSTRING = valuePromise('');

        function valuePromise(value) {
            var p = new Promise(Promise._44);
            p._83 = 1;
            p._18 = value;
            return p;
        }
        Promise.resolve = function(value) {
            if (value instanceof Promise) return value;

            if (value === null) return NULL;
            if (value === undefined) return UNDEFINED;
            if (value === true) return TRUE;
            if (value === false) return FALSE;
            if (value === 0) return ZERO;
            if (value === '') return EMPTYSTRING;

            if (typeof value === 'object' || typeof value === 'function') {
                try {
                    var then = value.then;
                    if (typeof then === 'function') {
                        return new Promise(then.bind(value));
                    }
                } catch (ex) {
                    return new Promise(function(resolve, reject) {
                        reject(ex);
                    });
                }
            }
            return valuePromise(value);
        };

        Promise.all = function(arr) {
            var args = Array.prototype.slice.call(arr);

            return new Promise(function(resolve, reject) {
                if (args.length === 0) return resolve([]);
                var remaining = args.length;

                function res(i, val) {
                    if (val && (typeof val === 'object' || typeof val === 'function')) {
                        if (val instanceof Promise && val.then === Promise.prototype.then) {
                            while (val._83 === 3) {
                                val = val._18;
                            }
                            if (val._83 === 1) return res(i, val._18);
                            if (val._83 === 2) reject(val._18);
                            val.then(function(val) {
                                res(i, val);
                            }, reject);
                            return;
                        } else {
                            var then = val.then;
                            if (typeof then === 'function') {
                                var p = new Promise(then.bind(val));
                                p.then(function(val) {
                                    res(i, val);
                                }, reject);
                                return;
                            }
                        }
                    }
                    args[i] = val;
                    if (--remaining === 0) {
                        resolve(args);
                    }
                }
                for (var i = 0; i < args.length; i++) {
                    res(i, args[i]);
                }
            });
        };

        Promise.reject = function(value) {
            return new Promise(function(resolve, reject) {
                reject(value);
            });
        };

        Promise.race = function(values) {
            return new Promise(function(resolve, reject) {
                values.forEach(function(value) {
                    Promise.resolve(value).then(resolve, reject);
                });
            });
        };

        /* Prototype Methods */

        Promise.prototype['catch'] = function(onRejected) {
            return this.then(null, onRejected);
        };


        /***/
    }),
    /* 86 */
    /***/
    (function(module, exports) {

        (function(self) {
            'use strict';

            if (self.fetch) {
                return
            }

            var support = {
                searchParams: 'URLSearchParams' in self,
                iterable: 'Symbol' in self && 'iterator' in Symbol,
                blob: 'FileReader' in self && 'Blob' in self && (function() {
                    try {
                        new Blob()
                        return true
                    } catch (e) {
                        return false
                    }
                })(),
                formData: 'FormData' in self,
                arrayBuffer: 'ArrayBuffer' in self
            }

            if (support.arrayBuffer) {
                var viewClasses = [
                    '[object Int8Array]',
                    '[object Uint8Array]',
                    '[object Uint8ClampedArray]',
                    '[object Int16Array]',
                    '[object Uint16Array]',
                    '[object Int32Array]',
                    '[object Uint32Array]',
                    '[object Float32Array]',
                    '[object Float64Array]'
                ]

                var isDataView = function(obj) {
                    return obj && DataView.prototype.isPrototypeOf(obj)
                }

                var isArrayBufferView = ArrayBuffer.isView || function(obj) {
                    return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
                }
            }

            function normalizeName(name) {
                if (typeof name !== 'string') {
                    name = String(name)
                }
                if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
                    throw new TypeError('Invalid character in header field name')
                }
                return name.toLowerCase()
            }

            function normalizeValue(value) {
                if (typeof value !== 'string') {
                    value = String(value)
                }
                return value
            }

            // Build a destructive iterator for the value list
            function iteratorFor(items) {
                var iterator = {
                    next: function() {
                        var value = items.shift()
                        return {
                            done: value === undefined,
                            value: value
                        }
                    }
                }

                if (support.iterable) {
                    iterator[Symbol.iterator] = function() {
                        return iterator
                    }
                }

                return iterator
            }

            function Headers(headers) {
                this.map = {}

                if (headers instanceof Headers) {
                    headers.forEach(function(value, name) {
                        this.append(name, value)
                    }, this)
                } else if (Array.isArray(headers)) {
                    headers.forEach(function(header) {
                        this.append(header[0], header[1])
                    }, this)
                } else if (headers) {
                    Object.getOwnPropertyNames(headers).forEach(function(name) {
                        this.append(name, headers[name])
                    }, this)
                }
            }

            Headers.prototype.append = function(name, value) {
                name = normalizeName(name)
                value = normalizeValue(value)
                var oldValue = this.map[name]
                this.map[name] = oldValue ? oldValue + ',' + value : value
            }

            Headers.prototype['delete'] = function(name) {
                delete this.map[normalizeName(name)]
            }

            Headers.prototype.get = function(name) {
                name = normalizeName(name)
                return this.has(name) ? this.map[name] : null
            }

            Headers.prototype.has = function(name) {
                return this.map.hasOwnProperty(normalizeName(name))
            }

            Headers.prototype.set = function(name, value) {
                this.map[normalizeName(name)] = normalizeValue(value)
            }

            Headers.prototype.forEach = function(callback, thisArg) {
                for (var name in this.map) {
                    if (this.map.hasOwnProperty(name)) {
                        callback.call(thisArg, this.map[name], name, this)
                    }
                }
            }

            Headers.prototype.keys = function() {
                var items = []
                this.forEach(function(value, name) {
                    items.push(name)
                })
                return iteratorFor(items)
            }

            Headers.prototype.values = function() {
                var items = []
                this.forEach(function(value) {
                    items.push(value)
                })
                return iteratorFor(items)
            }

            Headers.prototype.entries = function() {
                var items = []
                this.forEach(function(value, name) {
                    items.push([name, value])
                })
                return iteratorFor(items)
            }

            if (support.iterable) {
                Headers.prototype[Symbol.iterator] = Headers.prototype.entries
            }

            function consumed(body) {
                if (body.bodyUsed) {
                    return Promise.reject(new TypeError('Already read'))
                }
                body.bodyUsed = true
            }

            function fileReaderReady(reader) {
                return new Promise(function(resolve, reject) {
                    reader.onload = function() {
                        resolve(reader.result)
                    }
                    reader.onerror = function() {
                        reject(reader.error)
                    }
                })
            }

            function readBlobAsArrayBuffer(blob) {
                var reader = new FileReader()
                var promise = fileReaderReady(reader)
                reader.readAsArrayBuffer(blob)
                return promise
            }

            function readBlobAsText(blob) {
                var reader = new FileReader()
                var promise = fileReaderReady(reader)
                reader.readAsText(blob)
                return promise
            }

            function readArrayBufferAsText(buf) {
                var view = new Uint8Array(buf)
                var chars = new Array(view.length)

                for (var i = 0; i < view.length; i++) {
                    chars[i] = String.fromCharCode(view[i])
                }
                return chars.join('')
            }

            function bufferClone(buf) {
                if (buf.slice) {
                    return buf.slice(0)
                } else {
                    var view = new Uint8Array(buf.byteLength)
                    view.set(new Uint8Array(buf))
                    return view.buffer
                }
            }

            function Body() {
                this.bodyUsed = false

                this._initBody = function(body) {
                    this._bodyInit = body
                    if (!body) {
                        this._bodyText = ''
                    } else if (typeof body === 'string') {
                        this._bodyText = body
                    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
                        this._bodyBlob = body
                    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
                        this._bodyFormData = body
                    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                        this._bodyText = body.toString()
                    } else if (support.arrayBuffer && support.blob && isDataView(body)) {
                        this._bodyArrayBuffer = bufferClone(body.buffer)
                        // IE 10-11 can't handle a DataView body.
                        this._bodyInit = new Blob([this._bodyArrayBuffer])
                    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
                        this._bodyArrayBuffer = bufferClone(body)
                    } else {
                        throw new Error('unsupported BodyInit type')
                    }

                    if (!this.headers.get('content-type')) {
                        if (typeof body === 'string') {
                            this.headers.set('content-type', 'text/plain;charset=UTF-8')
                        } else if (this._bodyBlob && this._bodyBlob.type) {
                            this.headers.set('content-type', this._bodyBlob.type)
                        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
                        }
                    }
                }

                if (support.blob) {
                    this.blob = function() {
                        var rejected = consumed(this)
                        if (rejected) {
                            return rejected
                        }

                        if (this._bodyBlob) {
                            return Promise.resolve(this._bodyBlob)
                        } else if (this._bodyArrayBuffer) {
                            return Promise.resolve(new Blob([this._bodyArrayBuffer]))
                        } else if (this._bodyFormData) {
                            throw new Error('could not read FormData body as blob')
                        } else {
                            return Promise.resolve(new Blob([this._bodyText]))
                        }
                    }

                    this.arrayBuffer = function() {
                        if (this._bodyArrayBuffer) {
                            return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
                        } else {
                            return this.blob().then(readBlobAsArrayBuffer)
                        }
                    }
                }

                this.text = function() {
                    var rejected = consumed(this)
                    if (rejected) {
                        return rejected
                    }

                    if (this._bodyBlob) {
                        return readBlobAsText(this._bodyBlob)
                    } else if (this._bodyArrayBuffer) {
                        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
                    } else if (this._bodyFormData) {
                        throw new Error('could not read FormData body as text')
                    } else {
                        return Promise.resolve(this._bodyText)
                    }
                }

                if (support.formData) {
                    this.formData = function() {
                        return this.text().then(decode)
                    }
                }

                this.json = function() {
                    return this.text().then(JSON.parse)
                }

                return this
            }

            // HTTP methods whose capitalization should be normalized
            var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

            function normalizeMethod(method) {
                var upcased = method.toUpperCase()
                return (methods.indexOf(upcased) > -1) ? upcased : method
            }

            function Request(input, options) {
                options = options || {}
                var body = options.body

                if (input instanceof Request) {
                    if (input.bodyUsed) {
                        throw new TypeError('Already read')
                    }
                    this.url = input.url
                    this.credentials = input.credentials
                    if (!options.headers) {
                        this.headers = new Headers(input.headers)
                    }
                    this.method = input.method
                    this.mode = input.mode
                    if (!body && input._bodyInit != null) {
                        body = input._bodyInit
                        input.bodyUsed = true
                    }
                } else {
                    this.url = String(input)
                }

                this.credentials = options.credentials || this.credentials || 'omit'
                if (options.headers || !this.headers) {
                    this.headers = new Headers(options.headers)
                }
                this.method = normalizeMethod(options.method || this.method || 'GET')
                this.mode = options.mode || this.mode || null
                this.referrer = null

                if ((this.method === 'GET' || this.method === 'HEAD') && body) {
                    throw new TypeError('Body not allowed for GET or HEAD requests')
                }
                this._initBody(body)
            }

            Request.prototype.clone = function() {
                return new Request(this, {
                    body: this._bodyInit
                })
            }

            function decode(body) {
                var form = new FormData()
                body.trim().split('&').forEach(function(bytes) {
                    if (bytes) {
                        var split = bytes.split('=')
                        var name = split.shift().replace(/\+/g, ' ')
                        var value = split.join('=').replace(/\+/g, ' ')
                        form.append(decodeURIComponent(name), decodeURIComponent(value))
                    }
                })
                return form
            }

            function parseHeaders(rawHeaders) {
                var headers = new Headers()
                rawHeaders.split(/\r?\n/).forEach(function(line) {
                    var parts = line.split(':')
                    var key = parts.shift().trim()
                    if (key) {
                        var value = parts.join(':').trim()
                        headers.append(key, value)
                    }
                })
                return headers
            }

            Body.call(Request.prototype)

            function Response(bodyInit, options) {
                if (!options) {
                    options = {}
                }

                this.type = 'default'
                this.status = 'status' in options ? options.status : 200
                this.ok = this.status >= 200 && this.status < 300
                this.statusText = 'statusText' in options ? options.statusText : 'OK'
                this.headers = new Headers(options.headers)
                this.url = options.url || ''
                this._initBody(bodyInit)
            }

            Body.call(Response.prototype)

            Response.prototype.clone = function() {
                return new Response(this._bodyInit, {
                    status: this.status,
                    statusText: this.statusText,
                    headers: new Headers(this.headers),
                    url: this.url
                })
            }

            Response.error = function() {
                var response = new Response(null, {
                    status: 0,
                    statusText: ''
                })
                response.type = 'error'
                return response
            }

            var redirectStatuses = [301, 302, 303, 307, 308]

            Response.redirect = function(url, status) {
                if (redirectStatuses.indexOf(status) === -1) {
                    throw new RangeError('Invalid status code')
                }

                return new Response(null, {
                    status: status,
                    headers: {
                        location: url
                    }
                })
            }

            self.Headers = Headers
            self.Request = Request
            self.Response = Response

            self.fetch = function(input, init) {
                return new Promise(function(resolve, reject) {
                    var request = new Request(input, init)
                    var xhr = new XMLHttpRequest()

                    xhr.onload = function() {
                        var options = {
                            status: xhr.status,
                            statusText: xhr.statusText,
                            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
                        }
                        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
                        var body = 'response' in xhr ? xhr.response : xhr.responseText
                        resolve(new Response(body, options))
                    }

                    xhr.onerror = function() {
                        reject(new TypeError('Network request failed'))
                    }

                    xhr.ontimeout = function() {
                        reject(new TypeError('Network request failed'))
                    }

                    xhr.open(request.method, request.url, true)

                    if (request.credentials === 'include') {
                        xhr.withCredentials = true
                    }

                    if ('responseType' in xhr && support.blob) {
                        xhr.responseType = 'blob'
                    }

                    request.headers.forEach(function(value, name) {
                        xhr.setRequestHeader(name, value)
                    })

                    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
                })
            }
            self.fetch.polyfill = true
        })(typeof self !== 'undefined' ? self : this);


        /***/
    }),
    /* 87 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
            value: true
        });
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(89);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2_styled_components__ = __webpack_require__(12);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_3__serviceWorker__ = __webpack_require__(108);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_4__index_css__ = __webpack_require__(109);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_4__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__index_css__);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_5__jsx_components__ = __webpack_require__(110);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_6__jsx_screens__ = __webpack_require__(112);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_7__jsx_calculations__ = __webpack_require__(78);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_8__jsx_themes__ = __webpack_require__(80);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_9__jsx_utils__ = __webpack_require__(79);
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();
        var _templateObject = _taggedTemplateLiteral(['\n    background-color: ', ';\n    min-height: 100vh;\n'], ['\n    background-color: ', ';\n    min-height: 100vh;\n']);

        function _defineProperty(obj, key, value) {
            if (key in obj) {
                Object.defineProperty(obj, key, {
                    value: value,
                    enumerable: true,
                    configurable: true,
                    writable: true
                });
            } else {
                obj[key] = value;
            }
            return obj;
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        function _taggedTemplateLiteral(strings, raw) {
            return Object.freeze(Object.defineProperties(strings, {
                raw: {
                    value: Object.freeze(raw)
                }
            }));
        }
        var BackgroundMain = __WEBPACK_IMPORTED_MODULE_2_styled_components__["c" /* default */ ].div(_templateObject, function(props) {
            return props.theme.background;
        });
        var App = function(_React$Component) {
            _inherits(App, _React$Component);

            function App(props) {
                _classCallCheck(this, App);
                var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));
                _this.firstLoad = true;
                var theme = __WEBPACK_IMPORTED_MODULE_8__jsx_themes__["d" /* themes */ ].dark;
                _this.customTheme = false; // Flag saying that the theme is not defaulted.
                var localTheme = Object(__WEBPACK_IMPORTED_MODULE_8__jsx_themes__["b" /* getTheme */ ])();
                if (localTheme) {
                    _this.customTheme = true;
                    theme = localTheme;
                } // Week
                var aIsOdd = false;
                var isOddData = localStorage.getItem("girracountAIsOdd");
                if (isOddData) { // We have data
                    aIsOdd = JSON.parse(isOddData);
                } else {
                    localStorage.setItem("girracountAIsOdd", JSON.stringify(false));
                } // Timetable
                var pData = null;
                var savedData = localStorage.getItem('girracountTimetableData');
                if (savedData) {
                    pData = JSON.parse(savedData);
                    if (pData && !pData.classes) {
                        alert('Girraween countdown no longer uses the old timetable format. Please reupload your iCal file to use Girraween Countdown timetables.');
                        pData = null;
                        localStorage.removeItem('girracountTimetableData');
                    }
                } // Updating header:
                _this.updateInterval = setInterval(function() {
                    _this.update();
                }, 4000);
                _this.state = {
                    currScreenName: "notloaded",
                    loggedIn: false,
                    aIsOdd: aIsOdd,
                    pData: pData,
                    isFormal: false,
                    timeLeftData: __WEBPACK_IMPORTED_MODULE_7__jsx_calculations__["b" /* timeTillNextMsg */ ](false),
                    theme: theme
                };
                return _this;
            }
            _createClass(App, [{
                key: 'componentDidMount',
                value: function componentDidMount() {
                    this.changeScreen("home");
                }
            }, {
                key: 'update',
                value: function update() {
                    this.setState(Object.assign({}, this.state, {
                        timeLeftData: __WEBPACK_IMPORTED_MODULE_7__jsx_calculations__["b" /* timeTillNextMsg */ ](this.state.isFormal)
                    }));
                    if (this.state.timeLeftData.minsDiff) {
                        document.title = Object(__WEBPACK_IMPORTED_MODULE_9__jsx_utils__["d" /* timeToMinsString */ ])(this.state.timeLeftData.minsDiff, true) + ' left: Girracount';
                    } else {
                        document.title = 'Girraween Countdown';
                    }
                }
            }, {
                key: 'changeScreen',
                value: function changeScreen(nextScreenName) {
                    this.setState(Object.assign({}, this.state, {
                        currScreenName: nextScreenName
                    }));
                }
            }, {
                key: 'handleThemeSwitch',
                value: function handleThemeSwitch(on) {
                    this.setState(Object.assign({}, this.state, {
                        darkTheme: on
                    }));
                }
            }, {
                key: 'changeThemeVal',
                value: function changeThemeVal(key, val) {
                    this.customTheme = true;
                    var newTheme = Object.assign({}, this.state.theme, _defineProperty({}, key, val));
                    Object(__WEBPACK_IMPORTED_MODULE_8__jsx_themes__["c" /* saveTheme */ ])(newTheme);
                    this.setState(Object.assign({}, this.state, {
                        theme: newTheme
                    }));
                }
            }, {
                key: 'changeTheme',
                value: function changeTheme(newTheme) {
                    this.customTheme = true;
                    Object(__WEBPACK_IMPORTED_MODULE_8__jsx_themes__["c" /* saveTheme */ ])(newTheme);
                    this.setState(Object.assign({}, this.state, {
                        theme: newTheme
                    }));
                }
            }, {
                key: 'setAIsOdd',
                value: function setAIsOdd(isOdd) {
                    localStorage.setItem("girracountAIsOdd", JSON.stringify(isOdd));
                    this.setState(Object.assign({}, this.state, {
                        aIsOdd: isOdd
                    }));
                }
            }, {
                key: 'setIsFormal',
                value: function setIsFormal(newVal) {
                    this.setState(Object.assign({}, this.state, {
                        isFormal: newVal
                    }));
                }
            }, {
                key: 'setPData',
                value: function setPData(newPData) {
                    localStorage.setItem('girracountTimetableData', JSON.stringify(newPData));
                    this.setState(Object.assign({}, this.state, {
                        pData: newPData
                    }));
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this2 = this;
                    var nextScreen = null;
                    var timeLeftData = this.state.timeLeftData;
                    switch (this.state.currScreenName) {
                        case "home":
                            nextScreen = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__jsx_screens__["c" /* HomeScreen */ ], {
                                aIsOdd: this.state.aIsOdd,
                                setAIsOdd: function setAIsOdd(isOdd) {
                                    return _this2.setAIsOdd(isOdd);
                                },
                                pData: this.state.pData,
                                isFormal: this.state.isFormal,
                                setIsFormal: function setIsFormal(newVal) {
                                    return _this2.setIsFormal(newVal);
                                },
                                timeLeftData: timeLeftData,
                                nextPMsg: this.state.nextPMsg
                            });
                            break;
                        case "classEdit":
                            nextScreen = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__jsx_screens__["b" /* ClassScreen */ ], {
                                pData: this.state.pData,
                                setPData: function setPData(newPData) {
                                    return _this2.setPData(newPData);
                                }
                            });
                            break;
                        case "about":
                            nextScreen = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__jsx_screens__["a" /* AboutScreen */ ], null);
                            break;
                        case "settings":
                            nextScreen = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__jsx_screens__["d" /* SettingsScreen */ ], {
                                changeThemeVal: function changeThemeVal(key, val) {
                                    return _this2.changeThemeVal(key, val);
                                },
                                changeTheme: function changeTheme(newTheme) {
                                    return _this2.changeTheme(newTheme);
                                },
                                rawTheme: this.state.theme
                            });
                            break;
                        default:
                            if (this.firstLoad) {
                                this.firstLoad = false; // At first, we will try to load a non-existant scene, so ignore this case.
                            } else {
                                console.warn('tried to load screen that was non-existant: ' + this.state.currScreenName);
                            }
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', null);
                    }
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_styled_components__["a" /* ThemeProvider */ ], {
                        theme: this.state.theme
                    }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(BackgroundMain, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__jsx_components__["a" /* MenuBar */ ], {
                        isLoggedIn: this.state.loggedIn,
                        changeScreen: function changeScreen(sName) {
                            _this2.changeScreen(sName);
                        }
                    }), nextScreen));
                }
            }]);
            return App;
        }(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);
        __WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(App, null), document.getElementById('root'));
        __WEBPACK_IMPORTED_MODULE_3__serviceWorker__["a" /* register */ ]();

        /***/
    }),
    /* 88 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /** @license React v16.4.1
         * react.production.min.js
         *
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var k = __webpack_require__(24),
            n = __webpack_require__(42),
            p = __webpack_require__(43),
            q = __webpack_require__(44),
            r = "function" === typeof Symbol && Symbol.for,
            t = r ? Symbol.for("react.element") : 60103,
            u = r ? Symbol.for("react.portal") : 60106,
            v = r ? Symbol.for("react.fragment") : 60107,
            w = r ? Symbol.for("react.strict_mode") : 60108,
            x = r ? Symbol.for("react.profiler") : 60114,
            y = r ? Symbol.for("react.provider") : 60109,
            z = r ? Symbol.for("react.context") : 60110,
            A = r ? Symbol.for("react.async_mode") : 60111,
            B =
            r ? Symbol.for("react.forward_ref") : 60112;
        r && Symbol.for("react.timeout");
        var C = "function" === typeof Symbol && Symbol.iterator;

        function D(a) {
            for (var b = arguments.length - 1, e = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 0; c < b; c++) e += "&args[]=" + encodeURIComponent(arguments[c + 1]);
            n(!1, "Minified React error #" + a + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", e)
        }
        var E = {
            isMounted: function() {
                return !1
            },
            enqueueForceUpdate: function() {},
            enqueueReplaceState: function() {},
            enqueueSetState: function() {}
        };

        function F(a, b, e) {
            this.props = a;
            this.context = b;
            this.refs = p;
            this.updater = e || E
        }
        F.prototype.isReactComponent = {};
        F.prototype.setState = function(a, b) {
            "object" !== typeof a && "function" !== typeof a && null != a ? D("85") : void 0;
            this.updater.enqueueSetState(this, a, b, "setState")
        };
        F.prototype.forceUpdate = function(a) {
            this.updater.enqueueForceUpdate(this, a, "forceUpdate")
        };

        function G() {}
        G.prototype = F.prototype;

        function H(a, b, e) {
            this.props = a;
            this.context = b;
            this.refs = p;
            this.updater = e || E
        }
        var I = H.prototype = new G;
        I.constructor = H;
        k(I, F.prototype);
        I.isPureReactComponent = !0;
        var J = {
                current: null
            },
            K = Object.prototype.hasOwnProperty,
            L = {
                key: !0,
                ref: !0,
                __self: !0,
                __source: !0
            };

        function M(a, b, e) {
            var c = void 0,
                d = {},
                g = null,
                h = null;
            if (null != b)
                for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = "" + b.key), b) K.call(b, c) && !L.hasOwnProperty(c) && (d[c] = b[c]);
            var f = arguments.length - 2;
            if (1 === f) d.children = e;
            else if (1 < f) {
                for (var l = Array(f), m = 0; m < f; m++) l[m] = arguments[m + 2];
                d.children = l
            }
            if (a && a.defaultProps)
                for (c in f = a.defaultProps, f) void 0 === d[c] && (d[c] = f[c]);
            return {
                $$typeof: t,
                type: a,
                key: g,
                ref: h,
                props: d,
                _owner: J.current
            }
        }

        function N(a) {
            return "object" === typeof a && null !== a && a.$$typeof === t
        }

        function escape(a) {
            var b = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + ("" + a).replace(/[=:]/g, function(a) {
                return b[a]
            })
        }
        var O = /\/+/g,
            P = [];

        function Q(a, b, e, c) {
            if (P.length) {
                var d = P.pop();
                d.result = a;
                d.keyPrefix = b;
                d.func = e;
                d.context = c;
                d.count = 0;
                return d
            }
            return {
                result: a,
                keyPrefix: b,
                func: e,
                context: c,
                count: 0
            }
        }

        function R(a) {
            a.result = null;
            a.keyPrefix = null;
            a.func = null;
            a.context = null;
            a.count = 0;
            10 > P.length && P.push(a)
        }

        function S(a, b, e, c) {
            var d = typeof a;
            if ("undefined" === d || "boolean" === d) a = null;
            var g = !1;
            if (null === a) g = !0;
            else switch (d) {
                case "string":
                case "number":
                    g = !0;
                    break;
                case "object":
                    switch (a.$$typeof) {
                        case t:
                        case u:
                            g = !0
                    }
            }
            if (g) return e(c, a, "" === b ? "." + T(a, 0) : b), 1;
            g = 0;
            b = "" === b ? "." : b + ":";
            if (Array.isArray(a))
                for (var h = 0; h < a.length; h++) {
                    d = a[h];
                    var f = b + T(d, h);
                    g += S(d, f, e, c)
                } else if (null === a || "undefined" === typeof a ? f = null : (f = C && a[C] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f)
                    for (a = f.call(a),
                        h = 0; !(d = a.next()).done;) d = d.value, f = b + T(d, h++), g += S(d, f, e, c);
                else "object" === d && (e = "" + a, D("31", "[object Object]" === e ? "object with keys {" + Object.keys(a).join(", ") + "}" : e, ""));
            return g
        }

        function T(a, b) {
            return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36)
        }

        function U(a, b) {
            a.func.call(a.context, b, a.count++)
        }

        function V(a, b, e) {
            var c = a.result,
                d = a.keyPrefix;
            a = a.func.call(a.context, b, a.count++);
            Array.isArray(a) ? W(a, c, e, q.thatReturnsArgument) : null != a && (N(a) && (b = d + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(O, "$&/") + "/") + e, a = {
                $$typeof: t,
                type: a.type,
                key: b,
                ref: a.ref,
                props: a.props,
                _owner: a._owner
            }), c.push(a))
        }

        function W(a, b, e, c, d) {
            var g = "";
            null != e && (g = ("" + e).replace(O, "$&/") + "/");
            b = Q(b, g, c, d);
            null == a || S(a, "", V, b);
            R(b)
        }
        var X = {
                Children: {
                    map: function(a, b, e) {
                        if (null == a) return a;
                        var c = [];
                        W(a, c, null, b, e);
                        return c
                    },
                    forEach: function(a, b, e) {
                        if (null == a) return a;
                        b = Q(null, null, b, e);
                        null == a || S(a, "", U, b);
                        R(b)
                    },
                    count: function(a) {
                        return null == a ? 0 : S(a, "", q.thatReturnsNull, null)
                    },
                    toArray: function(a) {
                        var b = [];
                        W(a, b, null, q.thatReturnsArgument);
                        return b
                    },
                    only: function(a) {
                        N(a) ? void 0 : D("143");
                        return a
                    }
                },
                createRef: function() {
                    return {
                        current: null
                    }
                },
                Component: F,
                PureComponent: H,
                createContext: function(a, b) {
                    void 0 === b && (b = null);
                    a = {
                        $$typeof: z,
                        _calculateChangedBits: b,
                        _defaultValue: a,
                        _currentValue: a,
                        _currentValue2: a,
                        _changedBits: 0,
                        _changedBits2: 0,
                        Provider: null,
                        Consumer: null
                    };
                    a.Provider = {
                        $$typeof: y,
                        _context: a
                    };
                    return a.Consumer = a
                },
                forwardRef: function(a) {
                    return {
                        $$typeof: B,
                        render: a
                    }
                },
                Fragment: v,
                StrictMode: w,
                unstable_AsyncMode: A,
                unstable_Profiler: x,
                createElement: M,
                cloneElement: function(a, b, e) {
                    null === a || void 0 === a ? D("267", a) : void 0;
                    var c = void 0,
                        d = k({}, a.props),
                        g = a.key,
                        h = a.ref,
                        f = a._owner;
                    if (null != b) {
                        void 0 !== b.ref && (h = b.ref, f = J.current);
                        void 0 !==
                            b.key && (g = "" + b.key);
                        var l = void 0;
                        a.type && a.type.defaultProps && (l = a.type.defaultProps);
                        for (c in b) K.call(b, c) && !L.hasOwnProperty(c) && (d[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c])
                    }
                    c = arguments.length - 2;
                    if (1 === c) d.children = e;
                    else if (1 < c) {
                        l = Array(c);
                        for (var m = 0; m < c; m++) l[m] = arguments[m + 2];
                        d.children = l
                    }
                    return {
                        $$typeof: t,
                        type: a.type,
                        key: g,
                        ref: h,
                        props: d,
                        _owner: f
                    }
                },
                createFactory: function(a) {
                    var b = M.bind(null, a);
                    b.type = a;
                    return b
                },
                isValidElement: N,
                version: "16.4.1",
                __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
                    ReactCurrentOwner: J,
                    assign: k
                }
            },
            Y = {
                default: X
            },
            Z = Y && X || Y;
        module.exports = Z.default ? Z.default : Z;


        /***/
    }),
    /* 89 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        function checkDCE() {
            /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
            if (
                typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
                typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
            ) {
                return;
            }
            if (false) {
                // This branch is unreachable because this function is only called
                // in production, but the condition is true only in development.
                // Therefore if the branch is still here, dead code elimination wasn't
                // properly applied.
                // Don't change the message. React DevTools relies on it. Also make sure
                // this message doesn't occur elsewhere in this function, or it will cause
                // a false positive.
                throw new Error('^_^');
            }
            try {
                // Verify that the code above has been dead code eliminated (DCE'd).
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
            } catch (err) {
                // DevTools shouldn't crash React, no matter what.
                // We should still report in case we break this code.
                console.error(err);
            }
        }

        if (true) {
            // DCE check should happen before ReactDOM bundle executes so that
            // DevTools can report bad minification during injection.
            checkDCE();
            module.exports = __webpack_require__(90);
        } else {
            module.exports = require('./cjs/react-dom.development.js');
        }


        /***/
    }),
    /* 90 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /** @license React v16.4.1
         * react-dom.production.min.js
         *
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        /*
         Modernizr 3.0.0pre (Custom Build) | MIT
        */
        var aa = __webpack_require__(42),
            ba = __webpack_require__(0),
            m = __webpack_require__(91),
            p = __webpack_require__(24),
            v = __webpack_require__(44),
            da = __webpack_require__(92),
            ea = __webpack_require__(93),
            fa = __webpack_require__(94),
            ha = __webpack_require__(43);

        function A(a) {
            for (var b = arguments.length - 1, c = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, d = 0; d < b; d++) c += "&args[]=" + encodeURIComponent(arguments[d + 1]);
            aa(!1, "Minified React error #" + a + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", c)
        }
        ba ? void 0 : A("227");

        function ia(a, b, c, d, e, f, g, h, k) {
            this._hasCaughtError = !1;
            this._caughtError = null;
            var n = Array.prototype.slice.call(arguments, 3);
            try {
                b.apply(c, n)
            } catch (r) {
                this._caughtError = r, this._hasCaughtError = !0
            }
        }
        var B = {
            _caughtError: null,
            _hasCaughtError: !1,
            _rethrowError: null,
            _hasRethrowError: !1,
            invokeGuardedCallback: function(a, b, c, d, e, f, g, h, k) {
                ia.apply(B, arguments)
            },
            invokeGuardedCallbackAndCatchFirstError: function(a, b, c, d, e, f, g, h, k) {
                B.invokeGuardedCallback.apply(this, arguments);
                if (B.hasCaughtError()) {
                    var n = B.clearCaughtError();
                    B._hasRethrowError || (B._hasRethrowError = !0, B._rethrowError = n)
                }
            },
            rethrowCaughtError: function() {
                return ka.apply(B, arguments)
            },
            hasCaughtError: function() {
                return B._hasCaughtError
            },
            clearCaughtError: function() {
                if (B._hasCaughtError) {
                    var a =
                        B._caughtError;
                    B._caughtError = null;
                    B._hasCaughtError = !1;
                    return a
                }
                A("198")
            }
        };

        function ka() {
            if (B._hasRethrowError) {
                var a = B._rethrowError;
                B._rethrowError = null;
                B._hasRethrowError = !1;
                throw a;
            }
        }
        var la = null,
            ma = {};

        function na() {
            if (la)
                for (var a in ma) {
                    var b = ma[a],
                        c = la.indexOf(a); - 1 < c ? void 0 : A("96", a);
                    if (!oa[c]) {
                        b.extractEvents ? void 0 : A("97", a);
                        oa[c] = b;
                        c = b.eventTypes;
                        for (var d in c) {
                            var e = void 0;
                            var f = c[d],
                                g = b,
                                h = d;
                            pa.hasOwnProperty(h) ? A("99", h) : void 0;
                            pa[h] = f;
                            var k = f.phasedRegistrationNames;
                            if (k) {
                                for (e in k) k.hasOwnProperty(e) && qa(k[e], g, h);
                                e = !0
                            } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;
                            e ? void 0 : A("98", d, a)
                        }
                    }
                }
        }

        function qa(a, b, c) {
            ra[a] ? A("100", a) : void 0;
            ra[a] = b;
            sa[a] = b.eventTypes[c].dependencies
        }
        var oa = [],
            pa = {},
            ra = {},
            sa = {};

        function ta(a) {
            la ? A("101") : void 0;
            la = Array.prototype.slice.call(a);
            na()
        }

        function ua(a) {
            var b = !1,
                c;
            for (c in a)
                if (a.hasOwnProperty(c)) {
                    var d = a[c];
                    ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? A("102", c) : void 0, ma[c] = d, b = !0)
                }
            b && na()
        }
        var va = {
                plugins: oa,
                eventNameDispatchConfigs: pa,
                registrationNameModules: ra,
                registrationNameDependencies: sa,
                possibleRegistrationNames: null,
                injectEventPluginOrder: ta,
                injectEventPluginsByName: ua
            },
            wa = null,
            xa = null,
            ya = null;

        function za(a, b, c, d) {
            b = a.type || "unknown-event";
            a.currentTarget = ya(d);
            B.invokeGuardedCallbackAndCatchFirstError(b, c, void 0, a);
            a.currentTarget = null
        }

        function Aa(a, b) {
            null == b ? A("30") : void 0;
            if (null == a) return b;
            if (Array.isArray(a)) {
                if (Array.isArray(b)) return a.push.apply(a, b), a;
                a.push(b);
                return a
            }
            return Array.isArray(b) ? [a].concat(b) : [a, b]
        }

        function Ba(a, b, c) {
            Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a)
        }
        var Ca = null;

        function Da(a, b) {
            if (a) {
                var c = a._dispatchListeners,
                    d = a._dispatchInstances;
                if (Array.isArray(c))
                    for (var e = 0; e < c.length && !a.isPropagationStopped(); e++) za(a, b, c[e], d[e]);
                else c && za(a, b, c, d);
                a._dispatchListeners = null;
                a._dispatchInstances = null;
                a.isPersistent() || a.constructor.release(a)
            }
        }

        function Ea(a) {
            return Da(a, !0)
        }

        function Fa(a) {
            return Da(a, !1)
        }
        var Ga = {
            injectEventPluginOrder: ta,
            injectEventPluginsByName: ua
        };

        function Ha(a, b) {
            var c = a.stateNode;
            if (!c) return null;
            var d = wa(c);
            if (!d) return null;
            c = d[b];
            a: switch (b) {
                case "onClick":
                case "onClickCapture":
                case "onDoubleClick":
                case "onDoubleClickCapture":
                case "onMouseDown":
                case "onMouseDownCapture":
                case "onMouseMove":
                case "onMouseMoveCapture":
                case "onMouseUp":
                case "onMouseUpCapture":
                    (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
                    a = !d;
                    break a;
                default:
                    a = !1
            }
            if (a) return null;
            c && "function" !== typeof c ? A("231", b, typeof c) : void 0;
            return c
        }

        function Ia(a, b) {
            null !== a && (Ca = Aa(Ca, a));
            a = Ca;
            Ca = null;
            a && (b ? Ba(a, Ea) : Ba(a, Fa), Ca ? A("95") : void 0, B.rethrowCaughtError())
        }

        function Ja(a, b, c, d) {
            for (var e = null, f = 0; f < oa.length; f++) {
                var g = oa[f];
                g && (g = g.extractEvents(a, b, c, d)) && (e = Aa(e, g))
            }
            Ia(e, !1)
        }
        var Ka = {
                injection: Ga,
                getListener: Ha,
                runEventsInBatch: Ia,
                runExtractedEventsInBatch: Ja
            },
            La = Math.random().toString(36).slice(2),
            C = "__reactInternalInstance$" + La,
            Ma = "__reactEventHandlers$" + La;

        function Na(a) {
            if (a[C]) return a[C];
            for (; !a[C];)
                if (a.parentNode) a = a.parentNode;
                else return null;
            a = a[C];
            return 5 === a.tag || 6 === a.tag ? a : null
        }

        function Oa(a) {
            if (5 === a.tag || 6 === a.tag) return a.stateNode;
            A("33")
        }

        function Pa(a) {
            return a[Ma] || null
        }
        var Qa = {
            precacheFiberNode: function(a, b) {
                b[C] = a
            },
            getClosestInstanceFromNode: Na,
            getInstanceFromNode: function(a) {
                a = a[C];
                return !a || 5 !== a.tag && 6 !== a.tag ? null : a
            },
            getNodeFromInstance: Oa,
            getFiberCurrentPropsFromNode: Pa,
            updateFiberProps: function(a, b) {
                a[Ma] = b
            }
        };

        function F(a) {
            do a = a.return; while (a && 5 !== a.tag);
            return a ? a : null
        }

        function Ra(a, b, c) {
            for (var d = []; a;) d.push(a), a = F(a);
            for (a = d.length; 0 < a--;) b(d[a], "captured", c);
            for (a = 0; a < d.length; a++) b(d[a], "bubbled", c)
        }

        function Sa(a, b, c) {
            if (b = Ha(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = Aa(c._dispatchListeners, b), c._dispatchInstances = Aa(c._dispatchInstances, a)
        }

        function Ta(a) {
            a && a.dispatchConfig.phasedRegistrationNames && Ra(a._targetInst, Sa, a)
        }

        function Ua(a) {
            if (a && a.dispatchConfig.phasedRegistrationNames) {
                var b = a._targetInst;
                b = b ? F(b) : null;
                Ra(b, Sa, a)
            }
        }

        function Va(a, b, c) {
            a && c && c.dispatchConfig.registrationName && (b = Ha(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = Aa(c._dispatchListeners, b), c._dispatchInstances = Aa(c._dispatchInstances, a))
        }

        function Xa(a) {
            a && a.dispatchConfig.registrationName && Va(a._targetInst, null, a)
        }

        function Ya(a) {
            Ba(a, Ta)
        }

        function Za(a, b, c, d) {
            if (c && d) a: {
                var e = c;
                for (var f = d, g = 0, h = e; h; h = F(h)) g++;h = 0;
                for (var k = f; k; k = F(k)) h++;
                for (; 0 < g - h;) e = F(e),
                g--;
                for (; 0 < h - g;) f = F(f),
                h--;
                for (; g--;) {
                    if (e === f || e === f.alternate) break a;
                    e = F(e);
                    f = F(f)
                }
                e = null
            }
            else e = null;
            f = e;
            for (e = []; c && c !== f;) {
                g = c.alternate;
                if (null !== g && g === f) break;
                e.push(c);
                c = F(c)
            }
            for (c = []; d && d !== f;) {
                g = d.alternate;
                if (null !== g && g === f) break;
                c.push(d);
                d = F(d)
            }
            for (d = 0; d < e.length; d++) Va(e[d], "bubbled", a);
            for (a = c.length; 0 < a--;) Va(c[a], "captured", b)
        }
        var $a = {
            accumulateTwoPhaseDispatches: Ya,
            accumulateTwoPhaseDispatchesSkipTarget: function(a) {
                Ba(a, Ua)
            },
            accumulateEnterLeaveDispatches: Za,
            accumulateDirectDispatches: function(a) {
                Ba(a, Xa)
            }
        };

        function ab(a, b) {
            var c = {};
            c[a.toLowerCase()] = b.toLowerCase();
            c["Webkit" + a] = "webkit" + b;
            c["Moz" + a] = "moz" + b;
            c["ms" + a] = "MS" + b;
            c["O" + a] = "o" + b.toLowerCase();
            return c
        }
        var bb = {
                animationend: ab("Animation", "AnimationEnd"),
                animationiteration: ab("Animation", "AnimationIteration"),
                animationstart: ab("Animation", "AnimationStart"),
                transitionend: ab("Transition", "TransitionEnd")
            },
            cb = {},
            db = {};
        m.canUseDOM && (db = document.createElement("div").style, "AnimationEvent" in window || (delete bb.animationend.animation, delete bb.animationiteration.animation, delete bb.animationstart.animation), "TransitionEvent" in window || delete bb.transitionend.transition);

        function eb(a) {
            if (cb[a]) return cb[a];
            if (!bb[a]) return a;
            var b = bb[a],
                c;
            for (c in b)
                if (b.hasOwnProperty(c) && c in db) return cb[a] = b[c];
            return a
        }
        var fb = eb("animationend"),
            gb = eb("animationiteration"),
            hb = eb("animationstart"),
            ib = eb("transitionend"),
            jb = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
            kb = null;

        function lb() {
            !kb && m.canUseDOM && (kb = "textContent" in document.documentElement ? "textContent" : "innerText");
            return kb
        }
        var G = {
            _root: null,
            _startText: null,
            _fallbackText: null
        };

        function mb() {
            if (G._fallbackText) return G._fallbackText;
            var a, b = G._startText,
                c = b.length,
                d, e = nb(),
                f = e.length;
            for (a = 0; a < c && b[a] === e[a]; a++);
            var g = c - a;
            for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
            G._fallbackText = e.slice(a, 1 < d ? 1 - d : void 0);
            return G._fallbackText
        }

        function nb() {
            return "value" in G._root ? G._root.value : G._root[lb()]
        }
        var ob = "dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),
            pb = {
                type: null,
                target: null,
                currentTarget: v.thatReturnsNull,
                eventPhase: null,
                bubbles: null,
                cancelable: null,
                timeStamp: function(a) {
                    return a.timeStamp || Date.now()
                },
                defaultPrevented: null,
                isTrusted: null
            };

        function H(a, b, c, d) {
            this.dispatchConfig = a;
            this._targetInst = b;
            this.nativeEvent = c;
            a = this.constructor.Interface;
            for (var e in a) a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : "target" === e ? this.target = d : this[e] = c[e]);
            this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? v.thatReturnsTrue : v.thatReturnsFalse;
            this.isPropagationStopped = v.thatReturnsFalse;
            return this
        }
        p(H.prototype, {
            preventDefault: function() {
                this.defaultPrevented = !0;
                var a = this.nativeEvent;
                a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = v.thatReturnsTrue)
            },
            stopPropagation: function() {
                var a = this.nativeEvent;
                a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = v.thatReturnsTrue)
            },
            persist: function() {
                this.isPersistent = v.thatReturnsTrue
            },
            isPersistent: v.thatReturnsFalse,
            destructor: function() {
                var a = this.constructor.Interface,
                    b;
                for (b in a) this[b] = null;
                for (a = 0; a < ob.length; a++) this[ob[a]] = null
            }
        });
        H.Interface = pb;
        H.extend = function(a) {
            function b() {}

            function c() {
                return d.apply(this, arguments)
            }
            var d = this;
            b.prototype = d.prototype;
            var e = new b;
            p(e, c.prototype);
            c.prototype = e;
            c.prototype.constructor = c;
            c.Interface = p({}, d.Interface, a);
            c.extend = d.extend;
            qb(c);
            return c
        };
        qb(H);

        function rb(a, b, c, d) {
            if (this.eventPool.length) {
                var e = this.eventPool.pop();
                this.call(e, a, b, c, d);
                return e
            }
            return new this(a, b, c, d)
        }

        function sb(a) {
            a instanceof this ? void 0 : A("223");
            a.destructor();
            10 > this.eventPool.length && this.eventPool.push(a)
        }

        function qb(a) {
            a.eventPool = [];
            a.getPooled = rb;
            a.release = sb
        }
        var tb = H.extend({
                data: null
            }),
            ub = H.extend({
                data: null
            }),
            vb = [9, 13, 27, 32],
            wb = m.canUseDOM && "CompositionEvent" in window,
            xb = null;
        m.canUseDOM && "documentMode" in document && (xb = document.documentMode);
        var yb = m.canUseDOM && "TextEvent" in window && !xb,
            zb = m.canUseDOM && (!wb || xb && 8 < xb && 11 >= xb),
            Ab = String.fromCharCode(32),
            Bb = {
                beforeInput: {
                    phasedRegistrationNames: {
                        bubbled: "onBeforeInput",
                        captured: "onBeforeInputCapture"
                    },
                    dependencies: ["compositionend", "keypress", "textInput", "paste"]
                },
                compositionEnd: {
                    phasedRegistrationNames: {
                        bubbled: "onCompositionEnd",
                        captured: "onCompositionEndCapture"
                    },
                    dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ")
                },
                compositionStart: {
                    phasedRegistrationNames: {
                        bubbled: "onCompositionStart",
                        captured: "onCompositionStartCapture"
                    },
                    dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ")
                },
                compositionUpdate: {
                    phasedRegistrationNames: {
                        bubbled: "onCompositionUpdate",
                        captured: "onCompositionUpdateCapture"
                    },
                    dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ")
                }
            },
            Cb = !1;

        function Db(a, b) {
            switch (a) {
                case "keyup":
                    return -1 !== vb.indexOf(b.keyCode);
                case "keydown":
                    return 229 !== b.keyCode;
                case "keypress":
                case "mousedown":
                case "blur":
                    return !0;
                default:
                    return !1
            }
        }

        function Eb(a) {
            a = a.detail;
            return "object" === typeof a && "data" in a ? a.data : null
        }
        var Fb = !1;

        function Gb(a, b) {
            switch (a) {
                case "compositionend":
                    return Eb(b);
                case "keypress":
                    if (32 !== b.which) return null;
                    Cb = !0;
                    return Ab;
                case "textInput":
                    return a = b.data, a === Ab && Cb ? null : a;
                default:
                    return null
            }
        }

        function Hb(a, b) {
            if (Fb) return "compositionend" === a || !wb && Db(a, b) ? (a = mb(), G._root = null, G._startText = null, G._fallbackText = null, Fb = !1, a) : null;
            switch (a) {
                case "paste":
                    return null;
                case "keypress":
                    if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
                        if (b.char && 1 < b.char.length) return b.char;
                        if (b.which) return String.fromCharCode(b.which)
                    }
                    return null;
                case "compositionend":
                    return zb ? null : b.data;
                default:
                    return null
            }
        }
        var Ib = {
                eventTypes: Bb,
                extractEvents: function(a, b, c, d) {
                    var e = void 0;
                    var f = void 0;
                    if (wb) b: {
                        switch (a) {
                            case "compositionstart":
                                e = Bb.compositionStart;
                                break b;
                            case "compositionend":
                                e = Bb.compositionEnd;
                                break b;
                            case "compositionupdate":
                                e = Bb.compositionUpdate;
                                break b
                        }
                        e = void 0
                    }
                    else Fb ? Db(a, c) && (e = Bb.compositionEnd) : "keydown" === a && 229 === c.keyCode && (e = Bb.compositionStart);
                    e ? (zb && (Fb || e !== Bb.compositionStart ? e === Bb.compositionEnd && Fb && (f = mb()) : (G._root = d, G._startText = nb(), Fb = !0)), e = tb.getPooled(e, b, c, d), f ? e.data =
                        f : (f = Eb(c), null !== f && (e.data = f)), Ya(e), f = e) : f = null;
                    (a = yb ? Gb(a, c) : Hb(a, c)) ? (b = ub.getPooled(Bb.beforeInput, b, c, d), b.data = a, Ya(b)) : b = null;
                    return null === f ? b : null === b ? f : [f, b]
                }
            },
            Jb = null,
            Kb = {
                injectFiberControlledHostComponent: function(a) {
                    Jb = a
                }
            },
            Lb = null,
            Mb = null;

        function Nb(a) {
            if (a = xa(a)) {
                Jb && "function" === typeof Jb.restoreControlledState ? void 0 : A("194");
                var b = wa(a.stateNode);
                Jb.restoreControlledState(a.stateNode, a.type, b)
            }
        }

        function Ob(a) {
            Lb ? Mb ? Mb.push(a) : Mb = [a] : Lb = a
        }

        function Pb() {
            return null !== Lb || null !== Mb
        }

        function Qb() {
            if (Lb) {
                var a = Lb,
                    b = Mb;
                Mb = Lb = null;
                Nb(a);
                if (b)
                    for (a = 0; a < b.length; a++) Nb(b[a])
            }
        }
        var Rb = {
            injection: Kb,
            enqueueStateRestore: Ob,
            needsStateRestore: Pb,
            restoreStateIfNeeded: Qb
        };

        function Sb(a, b) {
            return a(b)
        }

        function Tb(a, b, c) {
            return a(b, c)
        }

        function Ub() {}
        var Vb = !1;

        function Wb(a, b) {
            if (Vb) return a(b);
            Vb = !0;
            try {
                return Sb(a, b)
            } finally {
                Vb = !1, Pb() && (Ub(), Qb())
            }
        }
        var Xb = {
            color: !0,
            date: !0,
            datetime: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0
        };

        function Yb(a) {
            var b = a && a.nodeName && a.nodeName.toLowerCase();
            return "input" === b ? !!Xb[a.type] : "textarea" === b ? !0 : !1
        }

        function Zb(a) {
            a = a.target || a.srcElement || window;
            a.correspondingUseElement && (a = a.correspondingUseElement);
            return 3 === a.nodeType ? a.parentNode : a
        }

        function $b(a, b) {
            if (!m.canUseDOM || b && !("addEventListener" in document)) return !1;
            a = "on" + a;
            b = a in document;
            b || (b = document.createElement("div"), b.setAttribute(a, "return;"), b = "function" === typeof b[a]);
            return b
        }

        function ac(a) {
            var b = a.type;
            return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b)
        }

        function bc(a) {
            var b = ac(a) ? "checked" : "value",
                c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
                d = "" + a[b];
            if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
                var e = c.get,
                    f = c.set;
                Object.defineProperty(a, b, {
                    configurable: !0,
                    get: function() {
                        return e.call(this)
                    },
                    set: function(a) {
                        d = "" + a;
                        f.call(this, a)
                    }
                });
                Object.defineProperty(a, b, {
                    enumerable: c.enumerable
                });
                return {
                    getValue: function() {
                        return d
                    },
                    setValue: function(a) {
                        d = "" + a
                    },
                    stopTracking: function() {
                        a._valueTracker =
                            null;
                        delete a[b]
                    }
                }
            }
        }

        function cc(a) {
            a._valueTracker || (a._valueTracker = bc(a))
        }

        function dc(a) {
            if (!a) return !1;
            var b = a._valueTracker;
            if (!b) return !0;
            var c = b.getValue();
            var d = "";
            a && (d = ac(a) ? a.checked ? "true" : "false" : a.value);
            a = d;
            return a !== c ? (b.setValue(a), !0) : !1
        }
        var ec = ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
            fc = "function" === typeof Symbol && Symbol.for,
            gc = fc ? Symbol.for("react.element") : 60103,
            hc = fc ? Symbol.for("react.portal") : 60106,
            ic = fc ? Symbol.for("react.fragment") : 60107,
            jc = fc ? Symbol.for("react.strict_mode") : 60108,
            kc = fc ? Symbol.for("react.profiler") : 60114,
            lc = fc ? Symbol.for("react.provider") : 60109,
            mc = fc ? Symbol.for("react.context") : 60110,
            pc = fc ? Symbol.for("react.async_mode") : 60111,
            qc = fc ? Symbol.for("react.forward_ref") : 60112,
            rc = fc ? Symbol.for("react.timeout") :
            60113,
            sc = "function" === typeof Symbol && Symbol.iterator;

        function tc(a) {
            if (null === a || "undefined" === typeof a) return null;
            a = sc && a[sc] || a["@@iterator"];
            return "function" === typeof a ? a : null
        }

        function uc(a) {
            var b = a.type;
            if ("function" === typeof b) return b.displayName || b.name;
            if ("string" === typeof b) return b;
            switch (b) {
                case pc:
                    return "AsyncMode";
                case mc:
                    return "Context.Consumer";
                case ic:
                    return "ReactFragment";
                case hc:
                    return "ReactPortal";
                case kc:
                    return "Profiler(" + a.pendingProps.id + ")";
                case lc:
                    return "Context.Provider";
                case jc:
                    return "StrictMode";
                case rc:
                    return "Timeout"
            }
            if ("object" === typeof b && null !== b) switch (b.$$typeof) {
                case qc:
                    return a = b.render.displayName || b.render.name || "", "" !== a ? "ForwardRef(" +
                        a + ")" : "ForwardRef"
            }
            return null
        }

        function vc(a) {
            var b = "";
            do {
                a: switch (a.tag) {
                    case 0:
                    case 1:
                    case 2:
                    case 5:
                        var c = a._debugOwner,
                            d = a._debugSource;
                        var e = uc(a);
                        var f = null;
                        c && (f = uc(c));
                        c = d;
                        e = "\n    in " + (e || "Unknown") + (c ? " (at " + c.fileName.replace(/^.*[\\\/]/, "") + ":" + c.lineNumber + ")" : f ? " (created by " + f + ")" : "");
                        break a;
                    default:
                        e = ""
                }
                b += e;a = a.return
            } while (a);
            return b
        }
        var wc = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
            xc = {},
            zc = {};

        function Ac(a) {
            if (zc.hasOwnProperty(a)) return !0;
            if (xc.hasOwnProperty(a)) return !1;
            if (wc.test(a)) return zc[a] = !0;
            xc[a] = !0;
            return !1
        }

        function Bc(a, b, c, d) {
            if (null !== c && 0 === c.type) return !1;
            switch (typeof b) {
                case "function":
                case "symbol":
                    return !0;
                case "boolean":
                    if (d) return !1;
                    if (null !== c) return !c.acceptsBooleans;
                    a = a.toLowerCase().slice(0, 5);
                    return "data-" !== a && "aria-" !== a;
                default:
                    return !1
            }
        }

        function Cc(a, b, c, d) {
            if (null === b || "undefined" === typeof b || Bc(a, b, c, d)) return !0;
            if (d) return !1;
            if (null !== c) switch (c.type) {
                case 3:
                    return !b;
                case 4:
                    return !1 === b;
                case 5:
                    return isNaN(b);
                case 6:
                    return isNaN(b) || 1 > b
            }
            return !1
        }

        function I(a, b, c, d, e) {
            this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
            this.attributeName = d;
            this.attributeNamespace = e;
            this.mustUseProperty = c;
            this.propertyName = a;
            this.type = b
        }
        var J = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
            J[a] = new I(a, 0, !1, a, null)
        });
        [
            ["acceptCharset", "accept-charset"],
            ["className", "class"],
            ["htmlFor", "for"],
            ["httpEquiv", "http-equiv"]
        ].forEach(function(a) {
            var b = a[0];
            J[b] = new I(b, 1, !1, a[1], null)
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
            J[a] = new I(a, 2, !1, a.toLowerCase(), null)
        });
        ["autoReverse", "externalResourcesRequired", "preserveAlpha"].forEach(function(a) {
            J[a] = new I(a, 2, !1, a, null)
        });
        "allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
            J[a] = new I(a, 3, !1, a.toLowerCase(), null)
        });
        ["checked", "multiple", "muted", "selected"].forEach(function(a) {
            J[a] = new I(a, 3, !0, a.toLowerCase(), null)
        });
        ["capture", "download"].forEach(function(a) {
            J[a] = new I(a, 4, !1, a.toLowerCase(), null)
        });
        ["cols", "rows", "size", "span"].forEach(function(a) {
            J[a] = new I(a, 6, !1, a.toLowerCase(), null)
        });
        ["rowSpan", "start"].forEach(function(a) {
            J[a] = new I(a, 5, !1, a.toLowerCase(), null)
        });
        var Dc = /[\-:]([a-z])/g;

        function Ec(a) {
            return a[1].toUpperCase()
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
            var b = a.replace(Dc,
                Ec);
            J[b] = new I(b, 1, !1, a, null)
        });
        "xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
            var b = a.replace(Dc, Ec);
            J[b] = new I(b, 1, !1, a, "http://www.w3.org/1999/xlink")
        });
        ["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
            var b = a.replace(Dc, Ec);
            J[b] = new I(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace")
        });
        J.tabIndex = new I("tabIndex", 1, !1, "tabindex", null);

        function Fc(a, b, c, d) {
            var e = J.hasOwnProperty(b) ? J[b] : null;
            var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1] ? !1 : !0;
            f || (Cc(b, c, e, d) && (c = null), d || null === e ? Ac(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))))
        }

        function Gc(a, b) {
            var c = b.checked;
            return p({}, b, {
                defaultChecked: void 0,
                defaultValue: void 0,
                value: void 0,
                checked: null != c ? c : a._wrapperState.initialChecked
            })
        }

        function Hc(a, b) {
            var c = null == b.defaultValue ? "" : b.defaultValue,
                d = null != b.checked ? b.checked : b.defaultChecked;
            c = Ic(null != b.value ? b.value : c);
            a._wrapperState = {
                initialChecked: d,
                initialValue: c,
                controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
            }
        }

        function Jc(a, b) {
            b = b.checked;
            null != b && Fc(a, "checked", b, !1)
        }

        function Kc(a, b) {
            Jc(a, b);
            var c = Ic(b.value);
            if (null != c)
                if ("number" === b.type) {
                    if (0 === c && "" === a.value || a.value != c) a.value = "" + c
                } else a.value !== "" + c && (a.value = "" + c);
            b.hasOwnProperty("value") ? Lc(a, b.type, c) : b.hasOwnProperty("defaultValue") && Lc(a, b.type, Ic(b.defaultValue));
            null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked)
        }

        function Mc(a, b, c) {
            if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
                b = "" + a._wrapperState.initialValue;
                var d = a.value;
                c || b === d || (a.value = b);
                a.defaultValue = b
            }
            c = a.name;
            "" !== c && (a.name = "");
            a.defaultChecked = !a.defaultChecked;
            a.defaultChecked = !a.defaultChecked;
            "" !== c && (a.name = c)
        }

        function Lc(a, b, c) {
            if ("number" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c)
        }

        function Ic(a) {
            switch (typeof a) {
                case "boolean":
                case "number":
                case "object":
                case "string":
                case "undefined":
                    return a;
                default:
                    return ""
            }
        }
        var Nc = {
            change: {
                phasedRegistrationNames: {
                    bubbled: "onChange",
                    captured: "onChangeCapture"
                },
                dependencies: "blur change click focus input keydown keyup selectionchange".split(" ")
            }
        };

        function Oc(a, b, c) {
            a = H.getPooled(Nc.change, a, b, c);
            a.type = "change";
            Ob(c);
            Ya(a);
            return a
        }
        var Pc = null,
            Qc = null;

        function Rc(a) {
            Ia(a, !1)
        }

        function Sc(a) {
            var b = Oa(a);
            if (dc(b)) return a
        }

        function Tc(a, b) {
            if ("change" === a) return b
        }
        var Uc = !1;
        m.canUseDOM && (Uc = $b("input") && (!document.documentMode || 9 < document.documentMode));

        function Vc() {
            Pc && (Pc.detachEvent("onpropertychange", Wc), Qc = Pc = null)
        }

        function Wc(a) {
            "value" === a.propertyName && Sc(Qc) && (a = Oc(Qc, a, Zb(a)), Wb(Rc, a))
        }

        function Xc(a, b, c) {
            "focus" === a ? (Vc(), Pc = b, Qc = c, Pc.attachEvent("onpropertychange", Wc)) : "blur" === a && Vc()
        }

        function Yc(a) {
            if ("selectionchange" === a || "keyup" === a || "keydown" === a) return Sc(Qc)
        }

        function Zc(a, b) {
            if ("click" === a) return Sc(b)
        }

        function $c(a, b) {
            if ("input" === a || "change" === a) return Sc(b)
        }
        var ad = {
                eventTypes: Nc,
                _isInputEventSupported: Uc,
                extractEvents: function(a, b, c, d) {
                    var e = b ? Oa(b) : window,
                        f = void 0,
                        g = void 0,
                        h = e.nodeName && e.nodeName.toLowerCase();
                    "select" === h || "input" === h && "file" === e.type ? f = Tc : Yb(e) ? Uc ? f = $c : (f = Yc, g = Xc) : (h = e.nodeName) && "input" === h.toLowerCase() && ("checkbox" === e.type || "radio" === e.type) && (f = Zc);
                    if (f && (f = f(a, b))) return Oc(f, c, d);
                    g && g(a, e, b);
                    "blur" === a && (a = e._wrapperState) && a.controlled && "number" === e.type && Lc(e, "number", e.value)
                }
            },
            bd = H.extend({
                view: null,
                detail: null
            }),
            cd = {
                Alt: "altKey",
                Control: "ctrlKey",
                Meta: "metaKey",
                Shift: "shiftKey"
            };

        function dd(a) {
            var b = this.nativeEvent;
            return b.getModifierState ? b.getModifierState(a) : (a = cd[a]) ? !!b[a] : !1
        }

        function ed() {
            return dd
        }
        var fd = bd.extend({
                screenX: null,
                screenY: null,
                clientX: null,
                clientY: null,
                pageX: null,
                pageY: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                getModifierState: ed,
                button: null,
                buttons: null,
                relatedTarget: function(a) {
                    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement)
                }
            }),
            gd = fd.extend({
                pointerId: null,
                width: null,
                height: null,
                pressure: null,
                tiltX: null,
                tiltY: null,
                pointerType: null,
                isPrimary: null
            }),
            hd = {
                mouseEnter: {
                    registrationName: "onMouseEnter",
                    dependencies: ["mouseout", "mouseover"]
                },
                mouseLeave: {
                    registrationName: "onMouseLeave",
                    dependencies: ["mouseout", "mouseover"]
                },
                pointerEnter: {
                    registrationName: "onPointerEnter",
                    dependencies: ["pointerout", "pointerover"]
                },
                pointerLeave: {
                    registrationName: "onPointerLeave",
                    dependencies: ["pointerout", "pointerover"]
                }
            },
            id = {
                eventTypes: hd,
                extractEvents: function(a, b, c, d) {
                    var e = "mouseover" === a || "pointerover" === a,
                        f = "mouseout" === a || "pointerout" === a;
                    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;
                    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView ||
                        e.parentWindow : window;
                    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Na(b) : null) : f = null;
                    if (f === b) return null;
                    var g = void 0,
                        h = void 0,
                        k = void 0,
                        n = void 0;
                    if ("mouseout" === a || "mouseover" === a) g = fd, h = hd.mouseLeave, k = hd.mouseEnter, n = "mouse";
                    else if ("pointerout" === a || "pointerover" === a) g = gd, h = hd.pointerLeave, k = hd.pointerEnter, n = "pointer";
                    a = null == f ? e : Oa(f);
                    e = null == b ? e : Oa(b);
                    h = g.getPooled(h, f, c, d);
                    h.type = n + "leave";
                    h.target = a;
                    h.relatedTarget = e;
                    c = g.getPooled(k, b, c, d);
                    c.type = n + "enter";
                    c.target = e;
                    c.relatedTarget = a;
                    Za(h,
                        c, f, b);
                    return [h, c]
                }
            };

        function jd(a) {
            var b = a;
            if (a.alternate)
                for (; b.return;) b = b.return;
            else {
                if (0 !== (b.effectTag & 2)) return 1;
                for (; b.return;)
                    if (b = b.return, 0 !== (b.effectTag & 2)) return 1
            }
            return 3 === b.tag ? 2 : 3
        }

        function kd(a) {
            2 !== jd(a) ? A("188") : void 0
        }

        function ld(a) {
            var b = a.alternate;
            if (!b) return b = jd(a), 3 === b ? A("188") : void 0, 1 === b ? null : a;
            for (var c = a, d = b;;) {
                var e = c.return,
                    f = e ? e.alternate : null;
                if (!e || !f) break;
                if (e.child === f.child) {
                    for (var g = e.child; g;) {
                        if (g === c) return kd(e), a;
                        if (g === d) return kd(e), b;
                        g = g.sibling
                    }
                    A("188")
                }
                if (c.return !== d.return) c = e, d = f;
                else {
                    g = !1;
                    for (var h = e.child; h;) {
                        if (h === c) {
                            g = !0;
                            c = e;
                            d = f;
                            break
                        }
                        if (h === d) {
                            g = !0;
                            d = e;
                            c = f;
                            break
                        }
                        h = h.sibling
                    }
                    if (!g) {
                        for (h = f.child; h;) {
                            if (h === c) {
                                g = !0;
                                c = f;
                                d = e;
                                break
                            }
                            if (h === d) {
                                g = !0;
                                d = f;
                                c = e;
                                break
                            }
                            h = h.sibling
                        }
                        g ?
                            void 0 : A("189")
                    }
                }
                c.alternate !== d ? A("190") : void 0
            }
            3 !== c.tag ? A("188") : void 0;
            return c.stateNode.current === c ? a : b
        }

        function md(a) {
            a = ld(a);
            if (!a) return null;
            for (var b = a;;) {
                if (5 === b.tag || 6 === b.tag) return b;
                if (b.child) b.child.return = b, b = b.child;
                else {
                    if (b === a) break;
                    for (; !b.sibling;) {
                        if (!b.return || b.return === a) return null;
                        b = b.return
                    }
                    b.sibling.return = b.return;
                    b = b.sibling
                }
            }
            return null
        }

        function nd(a) {
            a = ld(a);
            if (!a) return null;
            for (var b = a;;) {
                if (5 === b.tag || 6 === b.tag) return b;
                if (b.child && 4 !== b.tag) b.child.return = b, b = b.child;
                else {
                    if (b === a) break;
                    for (; !b.sibling;) {
                        if (!b.return || b.return === a) return null;
                        b = b.return
                    }
                    b.sibling.return = b.return;
                    b = b.sibling
                }
            }
            return null
        }
        var od = H.extend({
                animationName: null,
                elapsedTime: null,
                pseudoElement: null
            }),
            pd = H.extend({
                clipboardData: function(a) {
                    return "clipboardData" in a ? a.clipboardData : window.clipboardData
                }
            }),
            qd = bd.extend({
                relatedTarget: null
            });

        function rd(a) {
            var b = a.keyCode;
            "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
            10 === a && (a = 13);
            return 32 <= a || 13 === a ? a : 0
        }
        var sd = {
                Esc: "Escape",
                Spacebar: " ",
                Left: "ArrowLeft",
                Up: "ArrowUp",
                Right: "ArrowRight",
                Down: "ArrowDown",
                Del: "Delete",
                Win: "OS",
                Menu: "ContextMenu",
                Apps: "ContextMenu",
                Scroll: "ScrollLock",
                MozPrintableKey: "Unidentified"
            },
            td = {
                8: "Backspace",
                9: "Tab",
                12: "Clear",
                13: "Enter",
                16: "Shift",
                17: "Control",
                18: "Alt",
                19: "Pause",
                20: "CapsLock",
                27: "Escape",
                32: " ",
                33: "PageUp",
                34: "PageDown",
                35: "End",
                36: "Home",
                37: "ArrowLeft",
                38: "ArrowUp",
                39: "ArrowRight",
                40: "ArrowDown",
                45: "Insert",
                46: "Delete",
                112: "F1",
                113: "F2",
                114: "F3",
                115: "F4",
                116: "F5",
                117: "F6",
                118: "F7",
                119: "F8",
                120: "F9",
                121: "F10",
                122: "F11",
                123: "F12",
                144: "NumLock",
                145: "ScrollLock",
                224: "Meta"
            },
            ud = bd.extend({
                key: function(a) {
                    if (a.key) {
                        var b = sd[a.key] || a.key;
                        if ("Unidentified" !== b) return b
                    }
                    return "keypress" === a.type ? (a = rd(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? td[a.keyCode] || "Unidentified" : ""
                },
                location: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                repeat: null,
                locale: null,
                getModifierState: ed,
                charCode: function(a) {
                    return "keypress" ===
                        a.type ? rd(a) : 0
                },
                keyCode: function(a) {
                    return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0
                },
                which: function(a) {
                    return "keypress" === a.type ? rd(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0
                }
            }),
            vd = fd.extend({
                dataTransfer: null
            }),
            wd = bd.extend({
                touches: null,
                targetTouches: null,
                changedTouches: null,
                altKey: null,
                metaKey: null,
                ctrlKey: null,
                shiftKey: null,
                getModifierState: ed
            }),
            xd = H.extend({
                propertyName: null,
                elapsedTime: null,
                pseudoElement: null
            }),
            yd = fd.extend({
                deltaX: function(a) {
                    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in
                        a ? -a.wheelDeltaX : 0
                },
                deltaY: function(a) {
                    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0
                },
                deltaZ: null,
                deltaMode: null
            }),
            zd = [
                ["abort", "abort"],
                [fb, "animationEnd"],
                [gb, "animationIteration"],
                [hb, "animationStart"],
                ["canplay", "canPlay"],
                ["canplaythrough", "canPlayThrough"],
                ["drag", "drag"],
                ["dragenter", "dragEnter"],
                ["dragexit", "dragExit"],
                ["dragleave", "dragLeave"],
                ["dragover", "dragOver"],
                ["durationchange", "durationChange"],
                ["emptied", "emptied"],
                ["encrypted", "encrypted"],
                ["ended", "ended"],
                ["error", "error"],
                ["gotpointercapture", "gotPointerCapture"],
                ["load", "load"],
                ["loadeddata", "loadedData"],
                ["loadedmetadata", "loadedMetadata"],
                ["loadstart", "loadStart"],
                ["lostpointercapture", "lostPointerCapture"],
                ["mousemove", "mouseMove"],
                ["mouseout", "mouseOut"],
                ["mouseover", "mouseOver"],
                ["playing", "playing"],
                ["pointermove", "pointerMove"],
                ["pointerout", "pointerOut"],
                ["pointerover", "pointerOver"],
                ["progress", "progress"],
                ["scroll", "scroll"],
                ["seeking", "seeking"],
                ["stalled", "stalled"],
                ["suspend", "suspend"],
                ["timeupdate", "timeUpdate"],
                ["toggle", "toggle"],
                ["touchmove", "touchMove"],
                [ib, "transitionEnd"],
                ["waiting", "waiting"],
                ["wheel", "wheel"]
            ],
            Ad = {},
            Bd = {};

        function Cd(a, b) {
            var c = a[0];
            a = a[1];
            var d = "on" + (a[0].toUpperCase() + a.slice(1));
            b = {
                phasedRegistrationNames: {
                    bubbled: d,
                    captured: d + "Capture"
                },
                dependencies: [c],
                isInteractive: b
            };
            Ad[a] = b;
            Bd[c] = b
        }
        [
            ["blur", "blur"],
            ["cancel", "cancel"],
            ["click", "click"],
            ["close", "close"],
            ["contextmenu", "contextMenu"],
            ["copy", "copy"],
            ["cut", "cut"],
            ["dblclick", "doubleClick"],
            ["dragend", "dragEnd"],
            ["dragstart", "dragStart"],
            ["drop", "drop"],
            ["focus", "focus"],
            ["input", "input"],
            ["invalid", "invalid"],
            ["keydown", "keyDown"],
            ["keypress", "keyPress"],
            ["keyup", "keyUp"],
            ["mousedown", "mouseDown"],
            ["mouseup", "mouseUp"],
            ["paste", "paste"],
            ["pause", "pause"],
            ["play", "play"],
            ["pointercancel", "pointerCancel"],
            ["pointerdown", "pointerDown"],
            ["pointerup", "pointerUp"],
            ["ratechange", "rateChange"],
            ["reset", "reset"],
            ["seeked", "seeked"],
            ["submit", "submit"],
            ["touchcancel", "touchCancel"],
            ["touchend", "touchEnd"],
            ["touchstart", "touchStart"],
            ["volumechange", "volumeChange"]
        ].forEach(function(a) {
            Cd(a, !0)
        });
        zd.forEach(function(a) {
            Cd(a, !1)
        });
        var Dd = {
                eventTypes: Ad,
                isInteractiveTopLevelEventType: function(a) {
                    a = Bd[a];
                    return void 0 !== a && !0 === a.isInteractive
                },
                extractEvents: function(a, b, c, d) {
                    var e = Bd[a];
                    if (!e) return null;
                    switch (a) {
                        case "keypress":
                            if (0 === rd(c)) return null;
                        case "keydown":
                        case "keyup":
                            a = ud;
                            break;
                        case "blur":
                        case "focus":
                            a = qd;
                            break;
                        case "click":
                            if (2 === c.button) return null;
                        case "dblclick":
                        case "mousedown":
                        case "mousemove":
                        case "mouseup":
                        case "mouseout":
                        case "mouseover":
                        case "contextmenu":
                            a = fd;
                            break;
                        case "drag":
                        case "dragend":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "dragstart":
                        case "drop":
                            a =
                                vd;
                            break;
                        case "touchcancel":
                        case "touchend":
                        case "touchmove":
                        case "touchstart":
                            a = wd;
                            break;
                        case fb:
                        case gb:
                        case hb:
                            a = od;
                            break;
                        case ib:
                            a = xd;
                            break;
                        case "scroll":
                            a = bd;
                            break;
                        case "wheel":
                            a = yd;
                            break;
                        case "copy":
                        case "cut":
                        case "paste":
                            a = pd;
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "pointerup":
                            a = gd;
                            break;
                        default:
                            a = H
                    }
                    b = a.getPooled(e, b, c, d);
                    Ya(b);
                    return b
                }
            },
            Ed = Dd.isInteractiveTopLevelEventType,
            Fd = [];

        function Gd(a) {
            var b = a.targetInst;
            do {
                if (!b) {
                    a.ancestors.push(b);
                    break
                }
                var c;
                for (c = b; c.return;) c = c.return;
                c = 3 !== c.tag ? null : c.stateNode.containerInfo;
                if (!c) break;
                a.ancestors.push(b);
                b = Na(c)
            } while (b);
            for (c = 0; c < a.ancestors.length; c++) b = a.ancestors[c], Ja(a.topLevelType, b, a.nativeEvent, Zb(a.nativeEvent))
        }
        var Hd = !0;

        function Id(a) {
            Hd = !!a
        }

        function K(a, b) {
            if (!b) return null;
            var c = (Ed(a) ? Kd : Ld).bind(null, a);
            b.addEventListener(a, c, !1)
        }

        function Md(a, b) {
            if (!b) return null;
            var c = (Ed(a) ? Kd : Ld).bind(null, a);
            b.addEventListener(a, c, !0)
        }

        function Kd(a, b) {
            Tb(Ld, a, b)
        }

        function Ld(a, b) {
            if (Hd) {
                var c = Zb(b);
                c = Na(c);
                null === c || "number" !== typeof c.tag || 2 === jd(c) || (c = null);
                if (Fd.length) {
                    var d = Fd.pop();
                    d.topLevelType = a;
                    d.nativeEvent = b;
                    d.targetInst = c;
                    a = d
                } else a = {
                    topLevelType: a,
                    nativeEvent: b,
                    targetInst: c,
                    ancestors: []
                };
                try {
                    Wb(Gd, a)
                } finally {
                    a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > Fd.length && Fd.push(a)
                }
            }
        }
        var Nd = {
                get _enabled() {
                    return Hd
                },
                setEnabled: Id,
                isEnabled: function() {
                    return Hd
                },
                trapBubbledEvent: K,
                trapCapturedEvent: Md,
                dispatchEvent: Ld
            },
            Od = {},
            Pd = 0,
            Qd = "_reactListenersID" + ("" + Math.random()).slice(2);

        function Rd(a) {
            Object.prototype.hasOwnProperty.call(a, Qd) || (a[Qd] = Pd++, Od[a[Qd]] = {});
            return Od[a[Qd]]
        }

        function Sd(a) {
            for (; a && a.firstChild;) a = a.firstChild;
            return a
        }

        function Td(a, b) {
            var c = Sd(a);
            a = 0;
            for (var d; c;) {
                if (3 === c.nodeType) {
                    d = a + c.textContent.length;
                    if (a <= b && d >= b) return {
                        node: c,
                        offset: b - a
                    };
                    a = d
                }
                a: {
                    for (; c;) {
                        if (c.nextSibling) {
                            c = c.nextSibling;
                            break a
                        }
                        c = c.parentNode
                    }
                    c = void 0
                }
                c = Sd(c)
            }
        }

        function Ud(a) {
            var b = a && a.nodeName && a.nodeName.toLowerCase();
            return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable)
        }
        var Vd = m.canUseDOM && "documentMode" in document && 11 >= document.documentMode,
            Wd = {
                select: {
                    phasedRegistrationNames: {
                        bubbled: "onSelect",
                        captured: "onSelectCapture"
                    },
                    dependencies: "blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")
                }
            },
            Xd = null,
            Yd = null,
            Zd = null,
            $d = !1;

        function ae(a, b) {
            if ($d || null == Xd || Xd !== da()) return null;
            var c = Xd;
            "selectionStart" in c && Ud(c) ? c = {
                start: c.selectionStart,
                end: c.selectionEnd
            } : window.getSelection ? (c = window.getSelection(), c = {
                anchorNode: c.anchorNode,
                anchorOffset: c.anchorOffset,
                focusNode: c.focusNode,
                focusOffset: c.focusOffset
            }) : c = void 0;
            return Zd && ea(Zd, c) ? null : (Zd = c, a = H.getPooled(Wd.select, Yd, a, b), a.type = "select", a.target = Xd, Ya(a), a)
        }
        var be = {
            eventTypes: Wd,
            extractEvents: function(a, b, c, d) {
                var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,
                    f;
                if (!(f = !e)) {
                    a: {
                        e = Rd(e);f = sa.onSelect;
                        for (var g = 0; g < f.length; g++) {
                            var h = f[g];
                            if (!e.hasOwnProperty(h) || !e[h]) {
                                e = !1;
                                break a
                            }
                        }
                        e = !0
                    }
                    f = !e
                }
                if (f) return null;
                e = b ? Oa(b) : window;
                switch (a) {
                    case "focus":
                        if (Yb(e) || "true" === e.contentEditable) Xd = e, Yd = b, Zd = null;
                        break;
                    case "blur":
                        Zd = Yd = Xd = null;
                        break;
                    case "mousedown":
                        $d = !0;
                        break;
                    case "contextmenu":
                    case "mouseup":
                        return $d = !1, ae(c, d);
                    case "selectionchange":
                        if (Vd) break;
                    case "keydown":
                    case "keyup":
                        return ae(c, d)
                }
                return null
            }
        };
        Ga.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));
        wa = Qa.getFiberCurrentPropsFromNode;
        xa = Qa.getInstanceFromNode;
        ya = Qa.getNodeFromInstance;
        Ga.injectEventPluginsByName({
            SimpleEventPlugin: Dd,
            EnterLeaveEventPlugin: id,
            ChangeEventPlugin: ad,
            SelectEventPlugin: be,
            BeforeInputEventPlugin: Ib
        });
        var ce = "function" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,
            de = Date,
            ee = setTimeout,
            fe = clearTimeout,
            ge = void 0;
        if ("object" === typeof performance && "function" === typeof performance.now) {
            var he = performance;
            ge = function() {
                return he.now()
            }
        } else ge = function() {
            return de.now()
        };
        var ie = void 0,
            je = void 0;
        if (m.canUseDOM) {
            var ke = "function" === typeof ce ? ce : function() {
                    A("276")
                },
                L = null,
                le = null,
                me = -1,
                ne = !1,
                oe = !1,
                pe = 0,
                qe = 33,
                re = 33,
                se = {
                    didTimeout: !1,
                    timeRemaining: function() {
                        var a = pe - ge();
                        return 0 < a ? a : 0
                    }
                },
                ue = function(a, b) {
                    var c = a.scheduledCallback,
                        d = !1;
                    try {
                        c(b), d = !0
                    } finally {
                        je(a), d || (ne = !0, window.postMessage(te, "*"))
                    }
                },
                te = "__reactIdleCallback$" + Math.random().toString(36).slice(2);
            window.addEventListener("message", function(a) {
                if (a.source === window && a.data === te && (ne = !1, null !== L)) {
                    if (null !== L) {
                        var b = ge();
                        if (!(-1 ===
                                me || me > b)) {
                            a = -1;
                            for (var c = [], d = L; null !== d;) {
                                var e = d.timeoutTime; - 1 !== e && e <= b ? c.push(d) : -1 !== e && (-1 === a || e < a) && (a = e);
                                d = d.next
                            }
                            if (0 < c.length)
                                for (se.didTimeout = !0, b = 0, d = c.length; b < d; b++) ue(c[b], se);
                            me = a
                        }
                    }
                    for (a = ge(); 0 < pe - a && null !== L;) a = L, se.didTimeout = !1, ue(a, se), a = ge();
                    null === L || oe || (oe = !0, ke(ve))
                }
            }, !1);
            var ve = function(a) {
                oe = !1;
                var b = a - pe + re;
                b < re && qe < re ? (8 > b && (b = 8), re = b < qe ? qe : b) : qe = b;
                pe = a + re;
                ne || (ne = !0, window.postMessage(te, "*"))
            };
            ie = function(a, b) {
                var c = -1;
                null != b && "number" === typeof b.timeout && (c = ge() +
                    b.timeout);
                if (-1 === me || -1 !== c && c < me) me = c;
                a = {
                    scheduledCallback: a,
                    timeoutTime: c,
                    prev: null,
                    next: null
                };
                null === L ? L = a : (b = a.prev = le, null !== b && (b.next = a));
                le = a;
                oe || (oe = !0, ke(ve));
                return a
            };
            je = function(a) {
                if (null !== a.prev || L === a) {
                    var b = a.next,
                        c = a.prev;
                    a.next = null;
                    a.prev = null;
                    null !== b ? null !== c ? (c.next = b, b.prev = c) : (b.prev = null, L = b) : null !== c ? (c.next = null, le = c) : le = L = null
                }
            }
        } else {
            var we = new Map;
            ie = function(a) {
                var b = {
                        scheduledCallback: a,
                        timeoutTime: 0,
                        next: null,
                        prev: null
                    },
                    c = ee(function() {
                        a({
                            timeRemaining: function() {
                                return Infinity
                            },
                            didTimeout: !1
                        })
                    });
                we.set(a, c);
                return b
            };
            je = function(a) {
                var b = we.get(a.scheduledCallback);
                we.delete(a);
                fe(b)
            }
        }

        function xe(a) {
            var b = "";
            ba.Children.forEach(a, function(a) {
                null == a || "string" !== typeof a && "number" !== typeof a || (b += a)
            });
            return b
        }

        function ye(a, b) {
            a = p({
                children: void 0
            }, b);
            if (b = xe(b.children)) a.children = b;
            return a
        }

        function ze(a, b, c, d) {
            a = a.options;
            if (b) {
                b = {};
                for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;
                for (c = 0; c < a.length; c++) e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0)
            } else {
                c = "" + c;
                b = null;
                for (e = 0; e < a.length; e++) {
                    if (a[e].value === c) {
                        a[e].selected = !0;
                        d && (a[e].defaultSelected = !0);
                        return
                    }
                    null !== b || a[e].disabled || (b = a[e])
                }
                null !== b && (b.selected = !0)
            }
        }

        function Ae(a, b) {
            var c = b.value;
            a._wrapperState = {
                initialValue: null != c ? c : b.defaultValue,
                wasMultiple: !!b.multiple
            }
        }

        function Be(a, b) {
            null != b.dangerouslySetInnerHTML ? A("91") : void 0;
            return p({}, b, {
                value: void 0,
                defaultValue: void 0,
                children: "" + a._wrapperState.initialValue
            })
        }

        function Ce(a, b) {
            var c = b.value;
            null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? A("92") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : A("93"), b = b[0]), c = "" + b), null == c && (c = ""));
            a._wrapperState = {
                initialValue: "" + c
            }
        }

        function De(a, b) {
            var c = b.value;
            null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && (a.defaultValue = c));
            null != b.defaultValue && (a.defaultValue = b.defaultValue)
        }

        function Ee(a) {
            var b = a.textContent;
            b === a._wrapperState.initialValue && (a.value = b)
        }
        var Fe = {
            html: "http://www.w3.org/1999/xhtml",
            mathml: "http://www.w3.org/1998/Math/MathML",
            svg: "http://www.w3.org/2000/svg"
        };

        function Ge(a) {
            switch (a) {
                case "svg":
                    return "http://www.w3.org/2000/svg";
                case "math":
                    return "http://www.w3.org/1998/Math/MathML";
                default:
                    return "http://www.w3.org/1999/xhtml"
            }
        }

        function He(a, b) {
            return null == a || "http://www.w3.org/1999/xhtml" === a ? Ge(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a
        }
        var Ie = void 0,
            Je = function(a) {
                return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
                    MSApp.execUnsafeLocalFunction(function() {
                        return a(b, c, d, e)
                    })
                } : a
            }(function(a, b) {
                if (a.namespaceURI !== Fe.svg || "innerHTML" in a) a.innerHTML = b;
                else {
                    Ie = Ie || document.createElement("div");
                    Ie.innerHTML = "<svg>" + b + "</svg>";
                    for (b = Ie.firstChild; a.firstChild;) a.removeChild(a.firstChild);
                    for (; b.firstChild;) a.appendChild(b.firstChild)
                }
            });

        function Ke(a, b) {
            if (b) {
                var c = a.firstChild;
                if (c && c === a.lastChild && 3 === c.nodeType) {
                    c.nodeValue = b;
                    return
                }
            }
            a.textContent = b
        }
        var Le = {
                animationIterationCount: !0,
                borderImageOutset: !0,
                borderImageSlice: !0,
                borderImageWidth: !0,
                boxFlex: !0,
                boxFlexGroup: !0,
                boxOrdinalGroup: !0,
                columnCount: !0,
                columns: !0,
                flex: !0,
                flexGrow: !0,
                flexPositive: !0,
                flexShrink: !0,
                flexNegative: !0,
                flexOrder: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowSpan: !0,
                gridRowStart: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnSpan: !0,
                gridColumnStart: !0,
                fontWeight: !0,
                lineClamp: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                tabSize: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0,
                fillOpacity: !0,
                floodOpacity: !0,
                stopOpacity: !0,
                strokeDasharray: !0,
                strokeDashoffset: !0,
                strokeMiterlimit: !0,
                strokeOpacity: !0,
                strokeWidth: !0
            },
            Me = ["Webkit", "ms", "Moz", "O"];
        Object.keys(Le).forEach(function(a) {
            Me.forEach(function(b) {
                b = b + a.charAt(0).toUpperCase() + a.substring(1);
                Le[b] = Le[a]
            })
        });

        function Ne(a, b) {
            a = a.style;
            for (var c in b)
                if (b.hasOwnProperty(c)) {
                    var d = 0 === c.indexOf("--");
                    var e = c;
                    var f = b[c];
                    e = null == f || "boolean" === typeof f || "" === f ? "" : d || "number" !== typeof f || 0 === f || Le.hasOwnProperty(e) && Le[e] ? ("" + f).trim() : f + "px";
                    "float" === c && (c = "cssFloat");
                    d ? a.setProperty(c, e) : a[c] = e
                }
        }
        var Oe = p({
            menuitem: !0
        }, {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0
        });

        function Pe(a, b, c) {
            b && (Oe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? A("137", a, c()) : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? A("60") : void 0, "object" === typeof b.dangerouslySetInnerHTML && "__html" in b.dangerouslySetInnerHTML ? void 0 : A("61")), null != b.style && "object" !== typeof b.style ? A("62", c()) : void 0)
        }

        function Qe(a, b) {
            if (-1 === a.indexOf("-")) return "string" === typeof b.is;
            switch (a) {
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                    return !1;
                default:
                    return !0
            }
        }
        var Re = v.thatReturns("");

        function Se(a, b) {
            a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;
            var c = Rd(a);
            b = sa[b];
            for (var d = 0; d < b.length; d++) {
                var e = b[d];
                if (!c.hasOwnProperty(e) || !c[e]) {
                    switch (e) {
                        case "scroll":
                            Md("scroll", a);
                            break;
                        case "focus":
                        case "blur":
                            Md("focus", a);
                            Md("blur", a);
                            c.blur = !0;
                            c.focus = !0;
                            break;
                        case "cancel":
                        case "close":
                            $b(e, !0) && Md(e, a);
                            break;
                        case "invalid":
                        case "submit":
                        case "reset":
                            break;
                        default:
                            -1 === jb.indexOf(e) && K(e, a)
                    }
                    c[e] = !0
                }
            }
        }

        function Te(a, b, c, d) {
            c = 9 === c.nodeType ? c : c.ownerDocument;
            d === Fe.html && (d = Ge(a));
            d === Fe.html ? "script" === a ? (a = c.createElement("div"), a.innerHTML = "<script>\x3c/script>", a = a.removeChild(a.firstChild)) : a = "string" === typeof b.is ? c.createElement(a, {
                is: b.is
            }) : c.createElement(a) : a = c.createElementNS(d, a);
            return a
        }

        function Ue(a, b) {
            return (9 === b.nodeType ? b : b.ownerDocument).createTextNode(a)
        }

        function Ve(a, b, c, d) {
            var e = Qe(b, c);
            switch (b) {
                case "iframe":
                case "object":
                    K("load", a);
                    var f = c;
                    break;
                case "video":
                case "audio":
                    for (f = 0; f < jb.length; f++) K(jb[f], a);
                    f = c;
                    break;
                case "source":
                    K("error", a);
                    f = c;
                    break;
                case "img":
                case "image":
                case "link":
                    K("error", a);
                    K("load", a);
                    f = c;
                    break;
                case "form":
                    K("reset", a);
                    K("submit", a);
                    f = c;
                    break;
                case "details":
                    K("toggle", a);
                    f = c;
                    break;
                case "input":
                    Hc(a, c);
                    f = Gc(a, c);
                    K("invalid", a);
                    Se(d, "onChange");
                    break;
                case "option":
                    f = ye(a, c);
                    break;
                case "select":
                    Ae(a, c);
                    f = p({}, c, {
                        value: void 0
                    });
                    K("invalid", a);
                    Se(d, "onChange");
                    break;
                case "textarea":
                    Ce(a, c);
                    f = Be(a, c);
                    K("invalid", a);
                    Se(d, "onChange");
                    break;
                default:
                    f = c
            }
            Pe(b, f, Re);
            var g = f,
                h;
            for (h in g)
                if (g.hasOwnProperty(h)) {
                    var k = g[h];
                    "style" === h ? Ne(a, k, Re) : "dangerouslySetInnerHTML" === h ? (k = k ? k.__html : void 0, null != k && Je(a, k)) : "children" === h ? "string" === typeof k ? ("textarea" !== b || "" !== k) && Ke(a, k) : "number" === typeof k && Ke(a, "" + k) : "suppressContentEditableWarning" !== h && "suppressHydrationWarning" !== h && "autoFocus" !== h && (ra.hasOwnProperty(h) ? null != k && Se(d,
                        h) : null != k && Fc(a, h, k, e))
                }
            switch (b) {
                case "input":
                    cc(a);
                    Mc(a, c, !1);
                    break;
                case "textarea":
                    cc(a);
                    Ee(a, c);
                    break;
                case "option":
                    null != c.value && a.setAttribute("value", c.value);
                    break;
                case "select":
                    a.multiple = !!c.multiple;
                    b = c.value;
                    null != b ? ze(a, !!c.multiple, b, !1) : null != c.defaultValue && ze(a, !!c.multiple, c.defaultValue, !0);
                    break;
                default:
                    "function" === typeof f.onClick && (a.onclick = v)
            }
        }

        function We(a, b, c, d, e) {
            var f = null;
            switch (b) {
                case "input":
                    c = Gc(a, c);
                    d = Gc(a, d);
                    f = [];
                    break;
                case "option":
                    c = ye(a, c);
                    d = ye(a, d);
                    f = [];
                    break;
                case "select":
                    c = p({}, c, {
                        value: void 0
                    });
                    d = p({}, d, {
                        value: void 0
                    });
                    f = [];
                    break;
                case "textarea":
                    c = Be(a, c);
                    d = Be(a, d);
                    f = [];
                    break;
                default:
                    "function" !== typeof c.onClick && "function" === typeof d.onClick && (a.onclick = v)
            }
            Pe(b, d, Re);
            b = a = void 0;
            var g = null;
            for (a in c)
                if (!d.hasOwnProperty(a) && c.hasOwnProperty(a) && null != c[a])
                    if ("style" === a) {
                        var h = c[a];
                        for (b in h) h.hasOwnProperty(b) && (g ||
                            (g = {}), g[b] = "")
                    } else "dangerouslySetInnerHTML" !== a && "children" !== a && "suppressContentEditableWarning" !== a && "suppressHydrationWarning" !== a && "autoFocus" !== a && (ra.hasOwnProperty(a) ? f || (f = []) : (f = f || []).push(a, null));
            for (a in d) {
                var k = d[a];
                h = null != c ? c[a] : void 0;
                if (d.hasOwnProperty(a) && k !== h && (null != k || null != h))
                    if ("style" === a)
                        if (h) {
                            for (b in h) !h.hasOwnProperty(b) || k && k.hasOwnProperty(b) || (g || (g = {}), g[b] = "");
                            for (b in k) k.hasOwnProperty(b) && h[b] !== k[b] && (g || (g = {}), g[b] = k[b])
                        } else g || (f || (f = []), f.push(a, g)),
                            g = k;
                else "dangerouslySetInnerHTML" === a ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(a, "" + k)) : "children" === a ? h === k || "string" !== typeof k && "number" !== typeof k || (f = f || []).push(a, "" + k) : "suppressContentEditableWarning" !== a && "suppressHydrationWarning" !== a && (ra.hasOwnProperty(a) ? (null != k && Se(e, a), f || h === k || (f = [])) : (f = f || []).push(a, k))
            }
            g && (f = f || []).push("style", g);
            return f
        }

        function Xe(a, b, c, d, e) {
            "input" === c && "radio" === e.type && null != e.name && Jc(a, e);
            Qe(c, d);
            d = Qe(c, e);
            for (var f = 0; f < b.length; f += 2) {
                var g = b[f],
                    h = b[f + 1];
                "style" === g ? Ne(a, h, Re) : "dangerouslySetInnerHTML" === g ? Je(a, h) : "children" === g ? Ke(a, h) : Fc(a, g, h, d)
            }
            switch (c) {
                case "input":
                    Kc(a, e);
                    break;
                case "textarea":
                    De(a, e);
                    break;
                case "select":
                    a._wrapperState.initialValue = void 0, b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ze(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ?
                        ze(a, !!e.multiple, e.defaultValue, !0) : ze(a, !!e.multiple, e.multiple ? [] : "", !1))
            }
        }

        function Ye(a, b, c, d, e) {
            switch (b) {
                case "iframe":
                case "object":
                    K("load", a);
                    break;
                case "video":
                case "audio":
                    for (d = 0; d < jb.length; d++) K(jb[d], a);
                    break;
                case "source":
                    K("error", a);
                    break;
                case "img":
                case "image":
                case "link":
                    K("error", a);
                    K("load", a);
                    break;
                case "form":
                    K("reset", a);
                    K("submit", a);
                    break;
                case "details":
                    K("toggle", a);
                    break;
                case "input":
                    Hc(a, c);
                    K("invalid", a);
                    Se(e, "onChange");
                    break;
                case "select":
                    Ae(a, c);
                    K("invalid", a);
                    Se(e, "onChange");
                    break;
                case "textarea":
                    Ce(a, c), K("invalid", a), Se(e, "onChange")
            }
            Pe(b,
                c, Re);
            d = null;
            for (var f in c)
                if (c.hasOwnProperty(f)) {
                    var g = c[f];
                    "children" === f ? "string" === typeof g ? a.textContent !== g && (d = ["children", g]) : "number" === typeof g && a.textContent !== "" + g && (d = ["children", "" + g]) : ra.hasOwnProperty(f) && null != g && Se(e, f)
                }
            switch (b) {
                case "input":
                    cc(a);
                    Mc(a, c, !0);
                    break;
                case "textarea":
                    cc(a);
                    Ee(a, c);
                    break;
                case "select":
                case "option":
                    break;
                default:
                    "function" === typeof c.onClick && (a.onclick = v)
            }
            return d
        }

        function Ze(a, b) {
            return a.nodeValue !== b
        }
        var $e = {
                createElement: Te,
                createTextNode: Ue,
                setInitialProperties: Ve,
                diffProperties: We,
                updateProperties: Xe,
                diffHydratedProperties: Ye,
                diffHydratedText: Ze,
                warnForUnmatchedText: function() {},
                warnForDeletedHydratableElement: function() {},
                warnForDeletedHydratableText: function() {},
                warnForInsertedHydratedElement: function() {},
                warnForInsertedHydratedText: function() {},
                restoreControlledState: function(a, b, c) {
                    switch (b) {
                        case "input":
                            Kc(a, c);
                            b = c.name;
                            if ("radio" === c.type && null != b) {
                                for (c = a; c.parentNode;) c = c.parentNode;
                                c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
                                for (b = 0; b < c.length; b++) {
                                    var d = c[b];
                                    if (d !== a && d.form === a.form) {
                                        var e = Pa(d);
                                        e ? void 0 : A("90");
                                        dc(d);
                                        Kc(d, e)
                                    }
                                }
                            }
                            break;
                        case "textarea":
                            De(a, c);
                            break;
                        case "select":
                            b = c.value, null != b && ze(a, !!c.multiple, b, !1)
                    }
                }
            },
            af = null,
            bf = null;

        function cf(a, b) {
            switch (a) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                    return !!b.autoFocus
            }
            return !1
        }

        function df(a, b) {
            return "textarea" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && "string" === typeof b.dangerouslySetInnerHTML.__html
        }
        var ef = ge,
            ff = ie,
            gf = je;

        function hf(a) {
            for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) a = a.nextSibling;
            return a
        }

        function jf(a) {
            for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) a = a.nextSibling;
            return a
        }
        new Set;
        var kf = [],
            lf = -1;

        function mf(a) {
            return {
                current: a
            }
        }

        function M(a) {
            0 > lf || (a.current = kf[lf], kf[lf] = null, lf--)
        }

        function N(a, b) {
            lf++;
            kf[lf] = a.current;
            a.current = b
        }
        var nf = mf(ha),
            O = mf(!1),
            of = ha;

        function pf(a) {
            return qf(a) ? of : nf.current
        }

        function rf(a, b) {
            var c = a.type.contextTypes;
            if (!c) return ha;
            var d = a.stateNode;
            if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
            var e = {},
                f;
            for (f in c) e[f] = b[f];
            d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
            return e
        }

        function qf(a) {
            return 2 === a.tag && null != a.type.childContextTypes
        }

        function sf(a) {
            qf(a) && (M(O, a), M(nf, a))
        }

        function tf(a) {
            M(O, a);
            M(nf, a)
        }

        function uf(a, b, c) {
            nf.current !== ha ? A("168") : void 0;
            N(nf, b, a);
            N(O, c, a)
        }

        function vf(a, b) {
            var c = a.stateNode,
                d = a.type.childContextTypes;
            if ("function" !== typeof c.getChildContext) return b;
            c = c.getChildContext();
            for (var e in c) e in d ? void 0 : A("108", uc(a) || "Unknown", e);
            return p({}, b, c)
        }

        function wf(a) {
            if (!qf(a)) return !1;
            var b = a.stateNode;
            b = b && b.__reactInternalMemoizedMergedChildContext || ha; of = nf.current;
            N(nf, b, a);
            N(O, O.current, a);
            return !0
        }

        function xf(a, b) {
            var c = a.stateNode;
            c ? void 0 : A("169");
            if (b) {
                var d = vf(a, of );
                c.__reactInternalMemoizedMergedChildContext = d;
                M(O, a);
                M(nf, a);
                N(nf, d, a)
            } else M(O, a);
            N(O, b, a)
        }

        function yf(a, b, c, d) {
            this.tag = a;
            this.key = c;
            this.sibling = this.child = this.return = this.stateNode = this.type = null;
            this.index = 0;
            this.ref = null;
            this.pendingProps = b;
            this.memoizedState = this.updateQueue = this.memoizedProps = null;
            this.mode = d;
            this.effectTag = 0;
            this.lastEffect = this.firstEffect = this.nextEffect = null;
            this.expirationTime = 0;
            this.alternate = null
        }

        function zf(a, b, c) {
            var d = a.alternate;
            null === d ? (d = new yf(a.tag, b, a.key, a.mode), d.type = a.type, d.stateNode = a.stateNode, d.alternate = a, a.alternate = d) : (d.pendingProps = b, d.effectTag = 0, d.nextEffect = null, d.firstEffect = null, d.lastEffect = null);
            d.expirationTime = c;
            d.child = a.child;
            d.memoizedProps = a.memoizedProps;
            d.memoizedState = a.memoizedState;
            d.updateQueue = a.updateQueue;
            d.sibling = a.sibling;
            d.index = a.index;
            d.ref = a.ref;
            return d
        }

        function Af(a, b, c) {
            var d = a.type,
                e = a.key;
            a = a.props;
            if ("function" === typeof d) var f = d.prototype && d.prototype.isReactComponent ? 2 : 0;
            else if ("string" === typeof d) f = 5;
            else switch (d) {
                case ic:
                    return Bf(a.children, b, c, e);
                case pc:
                    f = 11;
                    b |= 3;
                    break;
                case jc:
                    f = 11;
                    b |= 2;
                    break;
                case kc:
                    return d = new yf(15, a, e, b | 4), d.type = kc, d.expirationTime = c, d;
                case rc:
                    f = 16;
                    b |= 2;
                    break;
                default:
                    a: {
                        switch ("object" === typeof d && null !== d ? d.$$typeof : null) {
                            case lc:
                                f = 13;
                                break a;
                            case mc:
                                f = 12;
                                break a;
                            case qc:
                                f = 14;
                                break a;
                            default:
                                A("130", null == d ?
                                    d : typeof d, "")
                        }
                        f = void 0
                    }
            }
            b = new yf(f, a, e, b);
            b.type = d;
            b.expirationTime = c;
            return b
        }

        function Bf(a, b, c, d) {
            a = new yf(10, a, d, b);
            a.expirationTime = c;
            return a
        }

        function Cf(a, b, c) {
            a = new yf(6, a, null, b);
            a.expirationTime = c;
            return a
        }

        function Df(a, b, c) {
            b = new yf(4, null !== a.children ? a.children : [], a.key, b);
            b.expirationTime = c;
            b.stateNode = {
                containerInfo: a.containerInfo,
                pendingChildren: null,
                implementation: a.implementation
            };
            return b
        }

        function Ef(a, b, c) {
            b = new yf(3, null, null, b ? 3 : 0);
            a = {
                current: b,
                containerInfo: a,
                pendingChildren: null,
                earliestPendingTime: 0,
                latestPendingTime: 0,
                earliestSuspendedTime: 0,
                latestSuspendedTime: 0,
                latestPingedTime: 0,
                pendingCommitExpirationTime: 0,
                finishedWork: null,
                context: null,
                pendingContext: null,
                hydrate: c,
                remainingExpirationTime: 0,
                firstBatch: null,
                nextScheduledRoot: null
            };
            return b.stateNode = a
        }
        var Ff = null,
            Gf = null;

        function Hf(a) {
            return function(b) {
                try {
                    return a(b)
                } catch (c) {}
            }
        }

        function If(a) {
            if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
            var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (b.isDisabled || !b.supportsFiber) return !0;
            try {
                var c = b.inject(a);
                Ff = Hf(function(a) {
                    return b.onCommitFiberRoot(c, a)
                });
                Gf = Hf(function(a) {
                    return b.onCommitFiberUnmount(c, a)
                })
            } catch (d) {}
            return !0
        }

        function Jf(a) {
            "function" === typeof Ff && Ff(a)
        }

        function Kf(a) {
            "function" === typeof Gf && Gf(a)
        }
        var Lf = !1;

        function Mf(a) {
            return {
                expirationTime: 0,
                baseState: a,
                firstUpdate: null,
                lastUpdate: null,
                firstCapturedUpdate: null,
                lastCapturedUpdate: null,
                firstEffect: null,
                lastEffect: null,
                firstCapturedEffect: null,
                lastCapturedEffect: null
            }
        }

        function Nf(a) {
            return {
                expirationTime: a.expirationTime,
                baseState: a.baseState,
                firstUpdate: a.firstUpdate,
                lastUpdate: a.lastUpdate,
                firstCapturedUpdate: null,
                lastCapturedUpdate: null,
                firstEffect: null,
                lastEffect: null,
                firstCapturedEffect: null,
                lastCapturedEffect: null
            }
        }

        function Of(a) {
            return {
                expirationTime: a,
                tag: 0,
                payload: null,
                callback: null,
                next: null,
                nextEffect: null
            }
        }

        function Pf(a, b, c) {
            null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);
            if (0 === a.expirationTime || a.expirationTime > c) a.expirationTime = c
        }

        function Qf(a, b, c) {
            var d = a.alternate;
            if (null === d) {
                var e = a.updateQueue;
                var f = null;
                null === e && (e = a.updateQueue = Mf(a.memoizedState))
            } else e = a.updateQueue, f = d.updateQueue, null === e ? null === f ? (e = a.updateQueue = Mf(a.memoizedState), f = d.updateQueue = Mf(d.memoizedState)) : e = a.updateQueue = Nf(f) : null === f && (f = d.updateQueue = Nf(e));
            null === f || e === f ? Pf(e, b, c) : null === e.lastUpdate || null === f.lastUpdate ? (Pf(e, b, c), Pf(f, b, c)) : (Pf(e, b, c), f.lastUpdate = b)
        }

        function Rf(a, b, c) {
            var d = a.updateQueue;
            d = null === d ? a.updateQueue = Mf(a.memoizedState) : Sf(a, d);
            null === d.lastCapturedUpdate ? d.firstCapturedUpdate = d.lastCapturedUpdate = b : (d.lastCapturedUpdate.next = b, d.lastCapturedUpdate = b);
            if (0 === d.expirationTime || d.expirationTime > c) d.expirationTime = c
        }

        function Sf(a, b) {
            var c = a.alternate;
            null !== c && b === c.updateQueue && (b = a.updateQueue = Nf(b));
            return b
        }

        function Tf(a, b, c, d, e, f) {
            switch (c.tag) {
                case 1:
                    return a = c.payload, "function" === typeof a ? a.call(f, d, e) : a;
                case 3:
                    a.effectTag = a.effectTag & -1025 | 64;
                case 0:
                    a = c.payload;
                    e = "function" === typeof a ? a.call(f, d, e) : a;
                    if (null === e || void 0 === e) break;
                    return p({}, d, e);
                case 2:
                    Lf = !0
            }
            return d
        }

        function Uf(a, b, c, d, e) {
            Lf = !1;
            if (!(0 === b.expirationTime || b.expirationTime > e)) {
                b = Sf(a, b);
                for (var f = b.baseState, g = null, h = 0, k = b.firstUpdate, n = f; null !== k;) {
                    var r = k.expirationTime;
                    if (r > e) {
                        if (null === g && (g = k, f = n), 0 === h || h > r) h = r
                    } else n = Tf(a, b, k, n, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = k : (b.lastEffect.nextEffect = k, b.lastEffect = k));
                    k = k.next
                }
                r = null;
                for (k = b.firstCapturedUpdate; null !== k;) {
                    var w = k.expirationTime;
                    if (w > e) {
                        if (null === r && (r = k, null ===
                                g && (f = n)), 0 === h || h > w) h = w
                    } else n = Tf(a, b, k, n, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = k : (b.lastCapturedEffect.nextEffect = k, b.lastCapturedEffect = k));
                    k = k.next
                }
                null === g && (b.lastUpdate = null);
                null === r ? b.lastCapturedUpdate = null : a.effectTag |= 32;
                null === g && null === r && (f = n);
                b.baseState = f;
                b.firstUpdate = g;
                b.firstCapturedUpdate = r;
                b.expirationTime = h;
                a.memoizedState = n
            }
        }

        function Vf(a, b) {
            "function" !== typeof a ? A("191", a) : void 0;
            a.call(b)
        }

        function Wf(a, b, c) {
            null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);
            a = b.firstEffect;
            for (b.firstEffect = b.lastEffect = null; null !== a;) {
                var d = a.callback;
                null !== d && (a.callback = null, Vf(d, c));
                a = a.nextEffect
            }
            a = b.firstCapturedEffect;
            for (b.firstCapturedEffect = b.lastCapturedEffect = null; null !== a;) b = a.callback, null !== b && (a.callback = null, Vf(b, c)), a = a.nextEffect
        }

        function Xf(a, b) {
            return {
                value: a,
                source: b,
                stack: vc(b)
            }
        }
        var Yf = mf(null),
            Zf = mf(null),
            $f = mf(0);

        function ag(a) {
            var b = a.type._context;
            N($f, b._changedBits, a);
            N(Zf, b._currentValue, a);
            N(Yf, a, a);
            b._currentValue = a.pendingProps.value;
            b._changedBits = a.stateNode
        }

        function bg(a) {
            var b = $f.current,
                c = Zf.current;
            M(Yf, a);
            M(Zf, a);
            M($f, a);
            a = a.type._context;
            a._currentValue = c;
            a._changedBits = b
        }
        var cg = {},
            dg = mf(cg),
            eg = mf(cg),
            fg = mf(cg);

        function gg(a) {
            a === cg ? A("174") : void 0;
            return a
        }

        function ig(a, b) {
            N(fg, b, a);
            N(eg, a, a);
            N(dg, cg, a);
            var c = b.nodeType;
            switch (c) {
                case 9:
                case 11:
                    b = (b = b.documentElement) ? b.namespaceURI : He(null, "");
                    break;
                default:
                    c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = He(b, c)
            }
            M(dg, a);
            N(dg, b, a)
        }

        function jg(a) {
            M(dg, a);
            M(eg, a);
            M(fg, a)
        }

        function kg(a) {
            eg.current === a && (M(dg, a), M(eg, a))
        }

        function lg(a, b, c) {
            var d = a.memoizedState;
            b = b(c, d);
            d = null === b || void 0 === b ? d : p({}, d, b);
            a.memoizedState = d;
            a = a.updateQueue;
            null !== a && 0 === a.expirationTime && (a.baseState = d)
        }
        var pg = {
            isMounted: function(a) {
                return (a = a._reactInternalFiber) ? 2 === jd(a) : !1
            },
            enqueueSetState: function(a, b, c) {
                a = a._reactInternalFiber;
                var d = mg();
                d = ng(d, a);
                var e = Of(d);
                e.payload = b;
                void 0 !== c && null !== c && (e.callback = c);
                Qf(a, e, d);
                og(a, d)
            },
            enqueueReplaceState: function(a, b, c) {
                a = a._reactInternalFiber;
                var d = mg();
                d = ng(d, a);
                var e = Of(d);
                e.tag = 1;
                e.payload = b;
                void 0 !== c && null !== c && (e.callback = c);
                Qf(a, e, d);
                og(a, d)
            },
            enqueueForceUpdate: function(a, b) {
                a = a._reactInternalFiber;
                var c = mg();
                c = ng(c, a);
                var d = Of(c);
                d.tag = 2;
                void 0 !==
                    b && null !== b && (d.callback = b);
                Qf(a, d, c);
                og(a, c)
            }
        };

        function qg(a, b, c, d, e, f) {
            var g = a.stateNode;
            a = a.type;
            return "function" === typeof g.shouldComponentUpdate ? g.shouldComponentUpdate(c, e, f) : a.prototype && a.prototype.isPureReactComponent ? !ea(b, c) || !ea(d, e) : !0
        }

        function rg(a, b, c, d) {
            a = b.state;
            "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
            "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
            b.state !== a && pg.enqueueReplaceState(b, b.state, null)
        }

        function sg(a, b) {
            var c = a.type,
                d = a.stateNode,
                e = a.pendingProps,
                f = pf(a);
            d.props = e;
            d.state = a.memoizedState;
            d.refs = ha;
            d.context = rf(a, f);
            f = a.updateQueue;
            null !== f && (Uf(a, f, e, d, b), d.state = a.memoizedState);
            f = a.type.getDerivedStateFromProps;
            "function" === typeof f && (lg(a, f, e), d.state = a.memoizedState);
            "function" === typeof c.getDerivedStateFromProps || "function" === typeof d.getSnapshotBeforeUpdate || "function" !== typeof d.UNSAFE_componentWillMount && "function" !== typeof d.componentWillMount || (c = d.state, "function" === typeof d.componentWillMount &&
                d.componentWillMount(), "function" === typeof d.UNSAFE_componentWillMount && d.UNSAFE_componentWillMount(), c !== d.state && pg.enqueueReplaceState(d, d.state, null), f = a.updateQueue, null !== f && (Uf(a, f, e, d, b), d.state = a.memoizedState));
            "function" === typeof d.componentDidMount && (a.effectTag |= 4)
        }
        var tg = Array.isArray;

        function ug(a, b, c) {
            a = c.ref;
            if (null !== a && "function" !== typeof a && "object" !== typeof a) {
                if (c._owner) {
                    c = c._owner;
                    var d = void 0;
                    c && (2 !== c.tag ? A("110") : void 0, d = c.stateNode);
                    d ? void 0 : A("147", a);
                    var e = "" + a;
                    if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e) return b.ref;
                    b = function(a) {
                        var b = d.refs === ha ? d.refs = {} : d.refs;
                        null === a ? delete b[e] : b[e] = a
                    };
                    b._stringRef = e;
                    return b
                }
                "string" !== typeof a ? A("148") : void 0;
                c._owner ? void 0 : A("254", a)
            }
            return a
        }

        function vg(a, b) {
            "textarea" !== a.type && A("31", "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b, "")
        }

        function wg(a) {
            function b(b, c) {
                if (a) {
                    var d = b.lastEffect;
                    null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;
                    c.nextEffect = null;
                    c.effectTag = 8
                }
            }

            function c(c, d) {
                if (!a) return null;
                for (; null !== d;) b(c, d), d = d.sibling;
                return null
            }

            function d(a, b) {
                for (a = new Map; null !== b;) null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
                return a
            }

            function e(a, b, c) {
                a = zf(a, b, c);
                a.index = 0;
                a.sibling = null;
                return a
            }

            function f(b, c, d) {
                b.index = d;
                if (!a) return c;
                d = b.alternate;
                if (null !== d) return d = d.index, d < c ? (b.effectTag =
                    2, c) : d;
                b.effectTag = 2;
                return c
            }

            function g(b) {
                a && null === b.alternate && (b.effectTag = 2);
                return b
            }

            function h(a, b, c, d) {
                if (null === b || 6 !== b.tag) return b = Cf(c, a.mode, d), b.return = a, b;
                b = e(b, c, d);
                b.return = a;
                return b
            }

            function k(a, b, c, d) {
                if (null !== b && b.type === c.type) return d = e(b, c.props, d), d.ref = ug(a, b, c), d.return = a, d;
                d = Af(c, a.mode, d);
                d.ref = ug(a, b, c);
                d.return = a;
                return d
            }

            function n(a, b, c, d) {
                if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b =
                    Df(c, a.mode, d), b.return = a, b;
                b = e(b, c.children || [], d);
                b.return = a;
                return b
            }

            function r(a, b, c, d, f) {
                if (null === b || 10 !== b.tag) return b = Bf(c, a.mode, d, f), b.return = a, b;
                b = e(b, c, d);
                b.return = a;
                return b
            }

            function w(a, b, c) {
                if ("string" === typeof b || "number" === typeof b) return b = Cf("" + b, a.mode, c), b.return = a, b;
                if ("object" === typeof b && null !== b) {
                    switch (b.$$typeof) {
                        case gc:
                            return c = Af(b, a.mode, c), c.ref = ug(a, null, b), c.return = a, c;
                        case hc:
                            return b = Df(b, a.mode, c), b.return = a, b
                    }
                    if (tg(b) || tc(b)) return b = Bf(b, a.mode, c, null), b.return =
                        a, b;
                    vg(a, b)
                }
                return null
            }

            function P(a, b, c, d) {
                var e = null !== b ? b.key : null;
                if ("string" === typeof c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);
                if ("object" === typeof c && null !== c) {
                    switch (c.$$typeof) {
                        case gc:
                            return c.key === e ? c.type === ic ? r(a, b, c.props.children, d, e) : k(a, b, c, d) : null;
                        case hc:
                            return c.key === e ? n(a, b, c, d) : null
                    }
                    if (tg(c) || tc(c)) return null !== e ? null : r(a, b, c, d, null);
                    vg(a, c)
                }
                return null
            }

            function nc(a, b, c, d, e) {
                if ("string" === typeof d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);
                if ("object" === typeof d && null !== d) {
                    switch (d.$$typeof) {
                        case gc:
                            return a = a.get(null === d.key ? c : d.key) || null, d.type === ic ? r(b, a, d.props.children, e, d.key) : k(b, a, d, e);
                        case hc:
                            return a = a.get(null === d.key ? c : d.key) || null, n(b, a, d, e)
                    }
                    if (tg(d) || tc(d)) return a = a.get(c) || null, r(b, a, d, e, null);
                    vg(b, d)
                }
                return null
            }

            function Jd(e, g, h, k) {
                for (var u = null, x = null, t = g, q = g = 0, n = null; null !== t && q < h.length; q++) {
                    t.index > q ? (n = t, t = null) : n = t.sibling;
                    var l = P(e, t, h[q], k);
                    if (null === l) {
                        null === t && (t = n);
                        break
                    }
                    a && t && null === l.alternate && b(e,
                        t);
                    g = f(l, g, q);
                    null === x ? u = l : x.sibling = l;
                    x = l;
                    t = n
                }
                if (q === h.length) return c(e, t), u;
                if (null === t) {
                    for (; q < h.length; q++)
                        if (t = w(e, h[q], k)) g = f(t, g, q), null === x ? u = t : x.sibling = t, x = t;
                    return u
                }
                for (t = d(e, t); q < h.length; q++)
                    if (n = nc(t, e, q, h[q], k)) a && null !== n.alternate && t.delete(null === n.key ? q : n.key), g = f(n, g, q), null === x ? u = n : x.sibling = n, x = n;
                a && t.forEach(function(a) {
                    return b(e, a)
                });
                return u
            }

            function E(e, g, h, k) {
                var u = tc(h);
                "function" !== typeof u ? A("150") : void 0;
                h = u.call(h);
                null == h ? A("151") : void 0;
                for (var t = u = null, n = g, x =
                        g = 0, y = null, l = h.next(); null !== n && !l.done; x++, l = h.next()) {
                    n.index > x ? (y = n, n = null) : y = n.sibling;
                    var r = P(e, n, l.value, k);
                    if (null === r) {
                        n || (n = y);
                        break
                    }
                    a && n && null === r.alternate && b(e, n);
                    g = f(r, g, x);
                    null === t ? u = r : t.sibling = r;
                    t = r;
                    n = y
                }
                if (l.done) return c(e, n), u;
                if (null === n) {
                    for (; !l.done; x++, l = h.next()) l = w(e, l.value, k), null !== l && (g = f(l, g, x), null === t ? u = l : t.sibling = l, t = l);
                    return u
                }
                for (n = d(e, n); !l.done; x++, l = h.next()) l = nc(n, e, x, l.value, k), null !== l && (a && null !== l.alternate && n.delete(null === l.key ? x : l.key), g = f(l, g, x), null ===
                    t ? u = l : t.sibling = l, t = l);
                a && n.forEach(function(a) {
                    return b(e, a)
                });
                return u
            }
            return function(a, d, f, h) {
                var k = "object" === typeof f && null !== f && f.type === ic && null === f.key;
                k && (f = f.props.children);
                var n = "object" === typeof f && null !== f;
                if (n) switch (f.$$typeof) {
                    case gc:
                        a: {
                            n = f.key;
                            for (k = d; null !== k;) {
                                if (k.key === n)
                                    if (10 === k.tag ? f.type === ic : k.type === f.type) {
                                        c(a, k.sibling);
                                        d = e(k, f.type === ic ? f.props.children : f.props, h);
                                        d.ref = ug(a, k, f);
                                        d.return = a;
                                        a = d;
                                        break a
                                    } else {
                                        c(a, k);
                                        break
                                    }
                                else b(a, k);
                                k = k.sibling
                            }
                            f.type === ic ? (d = Bf(f.props.children,
                                a.mode, h, f.key), d.return = a, a = d) : (h = Af(f, a.mode, h), h.ref = ug(a, d, f), h.return = a, a = h)
                        }
                        return g(a);
                    case hc:
                        a: {
                            for (k = f.key; null !== d;) {
                                if (d.key === k)
                                    if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                                        c(a, d.sibling);
                                        d = e(d, f.children || [], h);
                                        d.return = a;
                                        a = d;
                                        break a
                                    } else {
                                        c(a, d);
                                        break
                                    }
                                else b(a, d);
                                d = d.sibling
                            }
                            d = Df(f, a.mode, h);d.return = a;a = d
                        }
                        return g(a)
                }
                if ("string" === typeof f || "number" === typeof f) return f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return =
                    a, a = d) : (c(a, d), d = Cf(f, a.mode, h), d.return = a, a = d), g(a);
                if (tg(f)) return Jd(a, d, f, h);
                if (tc(f)) return E(a, d, f, h);
                n && vg(a, f);
                if ("undefined" === typeof f && !k) switch (a.tag) {
                    case 2:
                    case 1:
                        h = a.type, A("152", h.displayName || h.name || "Component")
                }
                return c(a, d)
            }
        }
        var xg = wg(!0),
            yg = wg(!1),
            zg = null,
            Ag = null,
            Bg = !1;

        function Cg(a, b) {
            var c = new yf(5, null, null, 0);
            c.type = "DELETED";
            c.stateNode = b;
            c.return = a;
            c.effectTag = 8;
            null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c
        }

        function Dg(a, b) {
            switch (a.tag) {
                case 5:
                    var c = a.type;
                    b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
                    return null !== b ? (a.stateNode = b, !0) : !1;
                case 6:
                    return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;
                default:
                    return !1
            }
        }

        function Eg(a) {
            if (Bg) {
                var b = Ag;
                if (b) {
                    var c = b;
                    if (!Dg(a, b)) {
                        b = hf(c);
                        if (!b || !Dg(a, b)) {
                            a.effectTag |= 2;
                            Bg = !1;
                            zg = a;
                            return
                        }
                        Cg(zg, c)
                    }
                    zg = a;
                    Ag = jf(b)
                } else a.effectTag |= 2, Bg = !1, zg = a
            }
        }

        function Fg(a) {
            for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag;) a = a.return;
            zg = a
        }

        function Gg(a) {
            if (a !== zg) return !1;
            if (!Bg) return Fg(a), Bg = !0, !1;
            var b = a.type;
            if (5 !== a.tag || "head" !== b && "body" !== b && !df(b, a.memoizedProps))
                for (b = Ag; b;) Cg(a, b), b = hf(b);
            Fg(a);
            Ag = zg ? hf(a.stateNode) : null;
            return !0
        }

        function Hg() {
            Ag = zg = null;
            Bg = !1
        }

        function Q(a, b, c) {
            Ig(a, b, c, b.expirationTime)
        }

        function Ig(a, b, c, d) {
            b.child = null === a ? yg(b, null, c, d) : xg(b, a.child, c, d)
        }

        function Jg(a, b) {
            var c = b.ref;
            if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128
        }

        function Kg(a, b, c, d, e) {
            Jg(a, b);
            var f = 0 !== (b.effectTag & 64);
            if (!c && !f) return d && xf(b, !1), R(a, b);
            c = b.stateNode;
            ec.current = b;
            var g = f ? null : c.render();
            b.effectTag |= 1;
            f && (Ig(a, b, null, e), b.child = null);
            Ig(a, b, g, e);
            b.memoizedState = c.state;
            b.memoizedProps = c.props;
            d && xf(b, !0);
            return b.child
        }

        function Lg(a) {
            var b = a.stateNode;
            b.pendingContext ? uf(a, b.pendingContext, b.pendingContext !== b.context) : b.context && uf(a, b.context, !1);
            ig(a, b.containerInfo)
        }

        function Mg(a, b, c, d) {
            var e = a.child;
            null !== e && (e.return = a);
            for (; null !== e;) {
                switch (e.tag) {
                    case 12:
                        var f = e.stateNode | 0;
                        if (e.type === b && 0 !== (f & c)) {
                            for (f = e; null !== f;) {
                                var g = f.alternate;
                                if (0 === f.expirationTime || f.expirationTime > d) f.expirationTime = d, null !== g && (0 === g.expirationTime || g.expirationTime > d) && (g.expirationTime = d);
                                else if (null !== g && (0 === g.expirationTime || g.expirationTime > d)) g.expirationTime = d;
                                else break;
                                f = f.return
                            }
                            f = null
                        } else f = e.child;
                        break;
                    case 13:
                        f = e.type === a.type ? null : e.child;
                        break;
                    default:
                        f =
                            e.child
                }
                if (null !== f) f.return = e;
                else
                    for (f = e; null !== f;) {
                        if (f === a) {
                            f = null;
                            break
                        }
                        e = f.sibling;
                        if (null !== e) {
                            e.return = f.return;
                            f = e;
                            break
                        }
                        f = f.return
                    }
                e = f
            }
        }

        function Qg(a, b, c) {
            var d = b.type._context,
                e = b.pendingProps,
                f = b.memoizedProps,
                g = !0;
            if (O.current) g = !1;
            else if (f === e) return b.stateNode = 0, ag(b), R(a, b);
            var h = e.value;
            b.memoizedProps = e;
            if (null === f) h = 1073741823;
            else if (f.value === e.value) {
                if (f.children === e.children && g) return b.stateNode = 0, ag(b), R(a, b);
                h = 0
            } else {
                var k = f.value;
                if (k === h && (0 !== k || 1 / k === 1 / h) || k !== k && h !== h) {
                    if (f.children === e.children && g) return b.stateNode = 0, ag(b), R(a, b);
                    h = 0
                } else if (h = "function" === typeof d._calculateChangedBits ? d._calculateChangedBits(k,
                        h) : 1073741823, h |= 0, 0 === h) {
                    if (f.children === e.children && g) return b.stateNode = 0, ag(b), R(a, b)
                } else Mg(b, d, h, c)
            }
            b.stateNode = h;
            ag(b);
            Q(a, b, e.children);
            return b.child
        }

        function R(a, b) {
            null !== a && b.child !== a.child ? A("153") : void 0;
            if (null !== b.child) {
                a = b.child;
                var c = zf(a, a.pendingProps, a.expirationTime);
                b.child = c;
                for (c.return = b; null !== a.sibling;) a = a.sibling, c = c.sibling = zf(a, a.pendingProps, a.expirationTime), c.return = b;
                c.sibling = null
            }
            return b.child
        }

        function Rg(a, b, c) {
            if (0 === b.expirationTime || b.expirationTime > c) {
                switch (b.tag) {
                    case 3:
                        Lg(b);
                        break;
                    case 2:
                        wf(b);
                        break;
                    case 4:
                        ig(b, b.stateNode.containerInfo);
                        break;
                    case 13:
                        ag(b)
                }
                return null
            }
            switch (b.tag) {
                case 0:
                    null !== a ? A("155") : void 0;
                    var d = b.type,
                        e = b.pendingProps,
                        f = pf(b);
                    f = rf(b, f);
                    d = d(e, f);
                    b.effectTag |= 1;
                    "object" === typeof d && null !== d && "function" === typeof d.render && void 0 === d.$$typeof ? (f = b.type, b.tag = 2, b.memoizedState = null !== d.state && void 0 !== d.state ? d.state : null, f = f.getDerivedStateFromProps, "function" ===
                        typeof f && lg(b, f, e), e = wf(b), d.updater = pg, b.stateNode = d, d._reactInternalFiber = b, sg(b, c), a = Kg(a, b, !0, e, c)) : (b.tag = 1, Q(a, b, d), b.memoizedProps = e, a = b.child);
                    return a;
                case 1:
                    return e = b.type, c = b.pendingProps, O.current || b.memoizedProps !== c ? (d = pf(b), d = rf(b, d), e = e(c, d), b.effectTag |= 1, Q(a, b, e), b.memoizedProps = c, a = b.child) : a = R(a, b), a;
                case 2:
                    e = wf(b);
                    if (null === a)
                        if (null === b.stateNode) {
                            var g = b.pendingProps,
                                h = b.type;
                            d = pf(b);
                            var k = 2 === b.tag && null != b.type.contextTypes;
                            f = k ? rf(b, d) : ha;
                            g = new h(g, f);
                            b.memoizedState = null !==
                                g.state && void 0 !== g.state ? g.state : null;
                            g.updater = pg;
                            b.stateNode = g;
                            g._reactInternalFiber = b;
                            k && (k = b.stateNode, k.__reactInternalMemoizedUnmaskedChildContext = d, k.__reactInternalMemoizedMaskedChildContext = f);
                            sg(b, c);
                            d = !0
                        } else {
                            h = b.type;
                            d = b.stateNode;
                            k = b.memoizedProps;
                            f = b.pendingProps;
                            d.props = k;
                            var n = d.context;
                            g = pf(b);
                            g = rf(b, g);
                            var r = h.getDerivedStateFromProps;
                            (h = "function" === typeof r || "function" === typeof d.getSnapshotBeforeUpdate) || "function" !== typeof d.UNSAFE_componentWillReceiveProps && "function" !== typeof d.componentWillReceiveProps ||
                                (k !== f || n !== g) && rg(b, d, f, g);
                            Lf = !1;
                            var w = b.memoizedState;
                            n = d.state = w;
                            var P = b.updateQueue;
                            null !== P && (Uf(b, P, f, d, c), n = b.memoizedState);
                            k !== f || w !== n || O.current || Lf ? ("function" === typeof r && (lg(b, r, f), n = b.memoizedState), (k = Lf || qg(b, k, f, w, n, g)) ? (h || "function" !== typeof d.UNSAFE_componentWillMount && "function" !== typeof d.componentWillMount || ("function" === typeof d.componentWillMount && d.componentWillMount(), "function" === typeof d.UNSAFE_componentWillMount && d.UNSAFE_componentWillMount()), "function" === typeof d.componentDidMount &&
                                (b.effectTag |= 4)) : ("function" === typeof d.componentDidMount && (b.effectTag |= 4), b.memoizedProps = f, b.memoizedState = n), d.props = f, d.state = n, d.context = g, d = k) : ("function" === typeof d.componentDidMount && (b.effectTag |= 4), d = !1)
                        }
                    else h = b.type, d = b.stateNode, f = b.memoizedProps, k = b.pendingProps, d.props = f, n = d.context, g = pf(b), g = rf(b, g), r = h.getDerivedStateFromProps, (h = "function" === typeof r || "function" === typeof d.getSnapshotBeforeUpdate) || "function" !== typeof d.UNSAFE_componentWillReceiveProps && "function" !== typeof d.componentWillReceiveProps ||
                        (f !== k || n !== g) && rg(b, d, k, g), Lf = !1, n = b.memoizedState, w = d.state = n, P = b.updateQueue, null !== P && (Uf(b, P, k, d, c), w = b.memoizedState), f !== k || n !== w || O.current || Lf ? ("function" === typeof r && (lg(b, r, k), w = b.memoizedState), (r = Lf || qg(b, f, k, n, w, g)) ? (h || "function" !== typeof d.UNSAFE_componentWillUpdate && "function" !== typeof d.componentWillUpdate || ("function" === typeof d.componentWillUpdate && d.componentWillUpdate(k, w, g), "function" === typeof d.UNSAFE_componentWillUpdate && d.UNSAFE_componentWillUpdate(k, w, g)), "function" === typeof d.componentDidUpdate &&
                            (b.effectTag |= 4), "function" === typeof d.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : ("function" !== typeof d.componentDidUpdate || f === a.memoizedProps && n === a.memoizedState || (b.effectTag |= 4), "function" !== typeof d.getSnapshotBeforeUpdate || f === a.memoizedProps && n === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = k, b.memoizedState = w), d.props = k, d.state = w, d.context = g, d = r) : ("function" !== typeof d.componentDidUpdate || f === a.memoizedProps && n === a.memoizedState || (b.effectTag |= 4), "function" !== typeof d.getSnapshotBeforeUpdate ||
                            f === a.memoizedProps && n === a.memoizedState || (b.effectTag |= 256), d = !1);
                    return Kg(a, b, d, e, c);
                case 3:
                    Lg(b);
                    e = b.updateQueue;
                    if (null !== e)
                        if (d = b.memoizedState, d = null !== d ? d.element : null, Uf(b, e, b.pendingProps, null, c), e = b.memoizedState.element, e === d) Hg(), a = R(a, b);
                        else {
                            d = b.stateNode;
                            if (d = (null === a || null === a.child) && d.hydrate) Ag = jf(b.stateNode.containerInfo), zg = b, d = Bg = !0;
                            d ? (b.effectTag |= 2, b.child = yg(b, null, e, c)) : (Hg(), Q(a, b, e));
                            a = b.child
                        }
                    else Hg(), a = R(a, b);
                    return a;
                case 5:
                    a: {
                        gg(fg.current);e = gg(dg.current);d = He(e,
                            b.type);e !== d && (N(eg, b, b), N(dg, d, b));null === a && Eg(b);e = b.type;k = b.memoizedProps;d = b.pendingProps;f = null !== a ? a.memoizedProps : null;
                        if (!O.current && k === d) {
                            if (k = b.mode & 1 && !!d.hidden) b.expirationTime = 1073741823;
                            if (!k || 1073741823 !== c) {
                                a = R(a, b);
                                break a
                            }
                        }
                        k = d.children;df(e, d) ? k = null : f && df(e, f) && (b.effectTag |= 16);Jg(a, b);1073741823 !== c && b.mode & 1 && d.hidden ? (b.expirationTime = 1073741823, b.memoizedProps = d, a = null) : (Q(a, b, k), b.memoizedProps = d, a = b.child)
                    }
                    return a;
                case 6:
                    return null === a && Eg(b), b.memoizedProps = b.pendingProps,
                        null;
                case 16:
                    return null;
                case 4:
                    return ig(b, b.stateNode.containerInfo), e = b.pendingProps, O.current || b.memoizedProps !== e ? (null === a ? b.child = xg(b, null, e, c) : Q(a, b, e), b.memoizedProps = e, a = b.child) : a = R(a, b), a;
                case 14:
                    return e = b.type.render, c = b.pendingProps, d = b.ref, O.current || b.memoizedProps !== c || d !== (null !== a ? a.ref : null) ? (e = e(c, d), Q(a, b, e), b.memoizedProps = c, a = b.child) : a = R(a, b), a;
                case 10:
                    return c = b.pendingProps, O.current || b.memoizedProps !== c ? (Q(a, b, c), b.memoizedProps = c, a = b.child) : a = R(a, b), a;
                case 11:
                    return c =
                        b.pendingProps.children, O.current || null !== c && b.memoizedProps !== c ? (Q(a, b, c), b.memoizedProps = c, a = b.child) : a = R(a, b), a;
                case 15:
                    return c = b.pendingProps, b.memoizedProps === c ? a = R(a, b) : (Q(a, b, c.children), b.memoizedProps = c, a = b.child), a;
                case 13:
                    return Qg(a, b, c);
                case 12:
                    a: if (d = b.type, f = b.pendingProps, k = b.memoizedProps, e = d._currentValue, g = d._changedBits, O.current || 0 !== g || k !== f) {
                        b.memoizedProps = f;
                        h = f.unstable_observedBits;
                        if (void 0 === h || null === h) h = 1073741823;
                        b.stateNode = h;
                        if (0 !== (g & h)) Mg(b, d, g, c);
                        else if (k === f) {
                            a =
                                R(a, b);
                            break a
                        }
                        c = f.children;
                        c = c(e);
                        b.effectTag |= 1;
                        Q(a, b, c);
                        a = b.child
                    } else a = R(a, b);
                    return a;
                default:
                    A("156")
            }
        }

        function Sg(a) {
            a.effectTag |= 4
        }
        var Tg = void 0,
            Ug = void 0,
            Vg = void 0;
        Tg = function() {};
        Ug = function(a, b, c) {
            (b.updateQueue = c) && Sg(b)
        };
        Vg = function(a, b, c, d) {
            c !== d && Sg(b)
        };

        function Wg(a, b) {
            var c = b.pendingProps;
            switch (b.tag) {
                case 1:
                    return null;
                case 2:
                    return sf(b), null;
                case 3:
                    jg(b);
                    tf(b);
                    var d = b.stateNode;
                    d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
                    if (null === a || null === a.child) Gg(b), b.effectTag &= -3;
                    Tg(b);
                    return null;
                case 5:
                    kg(b);
                    d = gg(fg.current);
                    var e = b.type;
                    if (null !== a && null != b.stateNode) {
                        var f = a.memoizedProps,
                            g = b.stateNode,
                            h = gg(dg.current);
                        g = We(g, e, f, c, d);
                        Ug(a, b, g, e, f, c, d, h);
                        a.ref !== b.ref && (b.effectTag |= 128)
                    } else {
                        if (!c) return null === b.stateNode ?
                            A("166") : void 0, null;
                        a = gg(dg.current);
                        if (Gg(b)) c = b.stateNode, e = b.type, f = b.memoizedProps, c[C] = b, c[Ma] = f, d = Ye(c, e, f, a, d), b.updateQueue = d, null !== d && Sg(b);
                        else {
                            a = Te(e, c, d, a);
                            a[C] = b;
                            a[Ma] = c;
                            a: for (f = b.child; null !== f;) {
                                if (5 === f.tag || 6 === f.tag) a.appendChild(f.stateNode);
                                else if (4 !== f.tag && null !== f.child) {
                                    f.child.return = f;
                                    f = f.child;
                                    continue
                                }
                                if (f === b) break;
                                for (; null === f.sibling;) {
                                    if (null === f.return || f.return === b) break a;
                                    f = f.return
                                }
                                f.sibling.return = f.return;
                                f = f.sibling
                            }
                            Ve(a, e, c, d);
                            cf(e, c) && Sg(b);
                            b.stateNode =
                                a
                        }
                        null !== b.ref && (b.effectTag |= 128)
                    }
                    return null;
                case 6:
                    if (a && null != b.stateNode) Vg(a, b, a.memoizedProps, c);
                    else {
                        if ("string" !== typeof c) return null === b.stateNode ? A("166") : void 0, null;
                        d = gg(fg.current);
                        gg(dg.current);
                        Gg(b) ? (d = b.stateNode, c = b.memoizedProps, d[C] = b, Ze(d, c) && Sg(b)) : (d = Ue(c, d), d[C] = b, b.stateNode = d)
                    }
                    return null;
                case 14:
                    return null;
                case 16:
                    return null;
                case 10:
                    return null;
                case 11:
                    return null;
                case 15:
                    return null;
                case 4:
                    return jg(b), Tg(b), null;
                case 13:
                    return bg(b), null;
                case 12:
                    return null;
                case 0:
                    A("167");
                default:
                    A("156")
            }
        }

        function Xg(a, b) {
            var c = b.source;
            null === b.stack && null !== c && vc(c);
            null !== c && uc(c);
            b = b.value;
            null !== a && 2 === a.tag && uc(a);
            try {
                b && b.suppressReactErrorLogging || console.error(b)
            } catch (d) {
                d && d.suppressReactErrorLogging || console.error(d)
            }
        }

        function Yg(a) {
            var b = a.ref;
            if (null !== b)
                if ("function" === typeof b) try {
                    b(null)
                } catch (c) {
                    Zg(a, c)
                } else b.current = null
        }

        function $g(a) {
            "function" === typeof Kf && Kf(a);
            switch (a.tag) {
                case 2:
                    Yg(a);
                    var b = a.stateNode;
                    if ("function" === typeof b.componentWillUnmount) try {
                        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount()
                    } catch (c) {
                        Zg(a, c)
                    }
                    break;
                case 5:
                    Yg(a);
                    break;
                case 4:
                    ah(a)
            }
        }

        function bh(a) {
            return 5 === a.tag || 3 === a.tag || 4 === a.tag
        }

        function ch(a) {
            a: {
                for (var b = a.return; null !== b;) {
                    if (bh(b)) {
                        var c = b;
                        break a
                    }
                    b = b.return
                }
                A("160");c = void 0
            }
            var d = b = void 0;
            switch (c.tag) {
                case 5:
                    b = c.stateNode;
                    d = !1;
                    break;
                case 3:
                    b = c.stateNode.containerInfo;
                    d = !0;
                    break;
                case 4:
                    b = c.stateNode.containerInfo;
                    d = !0;
                    break;
                default:
                    A("161")
            }
            c.effectTag & 16 && (Ke(b, ""), c.effectTag &= -17);a: b: for (c = a;;) {
                for (; null === c.sibling;) {
                    if (null === c.return || bh(c.return)) {
                        c = null;
                        break a
                    }
                    c = c.return
                }
                c.sibling.return = c.return;
                for (c = c.sibling; 5 !== c.tag && 6 !== c.tag;) {
                    if (c.effectTag & 2) continue b;
                    if (null === c.child || 4 === c.tag) continue b;
                    else c.child.return = c, c = c.child
                }
                if (!(c.effectTag & 2)) {
                    c = c.stateNode;
                    break a
                }
            }
            for (var e = a;;) {
                if (5 === e.tag || 6 === e.tag)
                    if (c)
                        if (d) {
                            var f = b,
                                g = e.stateNode,
                                h = c;
                            8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h)
                        } else b.insertBefore(e.stateNode, c);
                else d ? (f = b, g = e.stateNode, 8 === f.nodeType ? f.parentNode.insertBefore(g, f) : f.appendChild(g)) : b.appendChild(e.stateNode);
                else if (4 !== e.tag && null !== e.child) {
                    e.child.return = e;
                    e = e.child;
                    continue
                }
                if (e === a) break;
                for (; null ===
                    e.sibling;) {
                    if (null === e.return || e.return === a) return;
                    e = e.return
                }
                e.sibling.return = e.return;
                e = e.sibling
            }
        }

        function ah(a) {
            for (var b = a, c = !1, d = void 0, e = void 0;;) {
                if (!c) {
                    c = b.return;
                    a: for (;;) {
                        null === c ? A("160") : void 0;
                        switch (c.tag) {
                            case 5:
                                d = c.stateNode;
                                e = !1;
                                break a;
                            case 3:
                                d = c.stateNode.containerInfo;
                                e = !0;
                                break a;
                            case 4:
                                d = c.stateNode.containerInfo;
                                e = !0;
                                break a
                        }
                        c = c.return
                    }
                    c = !0
                }
                if (5 === b.tag || 6 === b.tag) {
                    a: for (var f = b, g = f;;)
                        if ($g(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;
                        else {
                            if (g === f) break;
                            for (; null === g.sibling;) {
                                if (null === g.return || g.return === f) break a;
                                g = g.return
                            }
                            g.sibling.return = g.return;
                            g = g.sibling
                        }e ?
                    (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode)
                }
                else if (4 === b.tag ? d = b.stateNode.containerInfo : $g(b), null !== b.child) {
                    b.child.return = b;
                    b = b.child;
                    continue
                }
                if (b === a) break;
                for (; null === b.sibling;) {
                    if (null === b.return || b.return === a) return;
                    b = b.return;
                    4 === b.tag && (c = !1)
                }
                b.sibling.return = b.return;
                b = b.sibling
            }
        }

        function dh(a, b) {
            switch (b.tag) {
                case 2:
                    break;
                case 5:
                    var c = b.stateNode;
                    if (null != c) {
                        var d = b.memoizedProps;
                        a = null !== a ? a.memoizedProps : d;
                        var e = b.type,
                            f = b.updateQueue;
                        b.updateQueue = null;
                        null !== f && (c[Ma] = d, Xe(c, f, e, a, d))
                    }
                    break;
                case 6:
                    null === b.stateNode ? A("162") : void 0;
                    b.stateNode.nodeValue = b.memoizedProps;
                    break;
                case 3:
                    break;
                case 15:
                    break;
                case 16:
                    break;
                default:
                    A("163")
            }
        }

        function eh(a, b, c) {
            c = Of(c);
            c.tag = 3;
            c.payload = {
                element: null
            };
            var d = b.value;
            c.callback = function() {
                fh(d);
                Xg(a, b)
            };
            return c
        }

        function gh(a, b, c) {
            c = Of(c);
            c.tag = 3;
            var d = a.stateNode;
            null !== d && "function" === typeof d.componentDidCatch && (c.callback = function() {
                null === hh ? hh = new Set([this]) : hh.add(this);
                var c = b.value,
                    d = b.stack;
                Xg(a, b);
                this.componentDidCatch(c, {
                    componentStack: null !== d ? d : ""
                })
            });
            return c
        }

        function ih(a, b, c, d, e, f) {
            c.effectTag |= 512;
            c.firstEffect = c.lastEffect = null;
            d = Xf(d, c);
            a = b;
            do {
                switch (a.tag) {
                    case 3:
                        a.effectTag |= 1024;
                        d = eh(a, d, f);
                        Rf(a, d, f);
                        return;
                    case 2:
                        if (b = d, c = a.stateNode, 0 === (a.effectTag & 64) && null !== c && "function" === typeof c.componentDidCatch && (null === hh || !hh.has(c))) {
                            a.effectTag |= 1024;
                            d = gh(a, b, f);
                            Rf(a, d, f);
                            return
                        }
                }
                a = a.return
            } while (null !== a)
        }

        function jh(a) {
            switch (a.tag) {
                case 2:
                    sf(a);
                    var b = a.effectTag;
                    return b & 1024 ? (a.effectTag = b & -1025 | 64, a) : null;
                case 3:
                    return jg(a), tf(a), b = a.effectTag, b & 1024 ? (a.effectTag = b & -1025 | 64, a) : null;
                case 5:
                    return kg(a), null;
                case 16:
                    return b = a.effectTag, b & 1024 ? (a.effectTag = b & -1025 | 64, a) : null;
                case 4:
                    return jg(a), null;
                case 13:
                    return bg(a), null;
                default:
                    return null
            }
        }
        var kh = ef(),
            lh = 2,
            mh = kh,
            nh = 0,
            oh = 0,
            ph = !1,
            S = null,
            qh = null,
            T = 0,
            rh = -1,
            sh = !1,
            U = null,
            th = !1,
            uh = !1,
            hh = null;

        function vh() {
            if (null !== S)
                for (var a = S.return; null !== a;) {
                    var b = a;
                    switch (b.tag) {
                        case 2:
                            sf(b);
                            break;
                        case 3:
                            jg(b);
                            tf(b);
                            break;
                        case 5:
                            kg(b);
                            break;
                        case 4:
                            jg(b);
                            break;
                        case 13:
                            bg(b)
                    }
                    a = a.return
                }
            qh = null;
            T = 0;
            rh = -1;
            sh = !1;
            S = null;
            uh = !1
        }

        function wh(a) {
            for (;;) {
                var b = a.alternate,
                    c = a.return,
                    d = a.sibling;
                if (0 === (a.effectTag & 512)) {
                    b = Wg(b, a, T);
                    var e = a;
                    if (1073741823 === T || 1073741823 !== e.expirationTime) {
                        var f = 0;
                        switch (e.tag) {
                            case 3:
                            case 2:
                                var g = e.updateQueue;
                                null !== g && (f = g.expirationTime)
                        }
                        for (g = e.child; null !== g;) 0 !== g.expirationTime && (0 === f || f > g.expirationTime) && (f = g.expirationTime), g = g.sibling;
                        e.expirationTime = f
                    }
                    if (null !== b) return b;
                    null !== c && 0 === (c.effectTag & 512) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect &&
                        (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));
                    if (null !== d) return d;
                    if (null !== c) a = c;
                    else {
                        uh = !0;
                        break
                    }
                } else {
                    a = jh(a, sh, T);
                    if (null !== a) return a.effectTag &= 511, a;
                    null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 512);
                    if (null !== d) return d;
                    if (null !== c) a = c;
                    else break
                }
            }
            return null
        }

        function xh(a) {
            var b = Rg(a.alternate, a, T);
            null === b && (b = wh(a));
            ec.current = null;
            return b
        }

        function yh(a, b, c) {
            ph ? A("243") : void 0;
            ph = !0;
            if (b !== T || a !== qh || null === S) vh(), qh = a, T = b, rh = -1, S = zf(qh.current, null, T), a.pendingCommitExpirationTime = 0;
            var d = !1;
            sh = !c || T <= lh;
            do {
                try {
                    if (c)
                        for (; null !== S && !zh();) S = xh(S);
                    else
                        for (; null !== S;) S = xh(S)
                } catch (f) {
                    if (null === S) d = !0, fh(f);
                    else {
                        null === S ? A("271") : void 0;
                        c = S;
                        var e = c.return;
                        if (null === e) {
                            d = !0;
                            fh(f);
                            break
                        }
                        ih(a, e, c, f, sh, T, mh);
                        S = wh(c)
                    }
                }
                break
            } while (1);
            ph = !1;
            if (d) return null;
            if (null === S) {
                if (uh) return a.pendingCommitExpirationTime = b, a.current.alternate;
                sh ? A("262") :
                    void 0;
                0 <= rh && setTimeout(function() {
                    var b = a.current.expirationTime;
                    0 !== b && (0 === a.remainingExpirationTime || a.remainingExpirationTime < b) && Ah(a, b)
                }, rh);
                Bh(a.current.expirationTime)
            }
            return null
        }

        function Zg(a, b) {
            var c;
            a: {
                ph && !th ? A("263") : void 0;
                for (c = a.return; null !== c;) {
                    switch (c.tag) {
                        case 2:
                            var d = c.stateNode;
                            if ("function" === typeof c.type.getDerivedStateFromCatch || "function" === typeof d.componentDidCatch && (null === hh || !hh.has(d))) {
                                a = Xf(b, a);
                                a = gh(c, a, 1);
                                Qf(c, a, 1);
                                og(c, 1);
                                c = void 0;
                                break a
                            }
                            break;
                        case 3:
                            a = Xf(b, a);
                            a = eh(c, a, 1);
                            Qf(c, a, 1);
                            og(c, 1);
                            c = void 0;
                            break a
                    }
                    c = c.return
                }
                3 === a.tag && (c = Xf(b, a), c = eh(a, c, 1), Qf(a, c, 1), og(a, 1));c = void 0
            }
            return c
        }

        function Ch() {
            var a = 2 + 25 * (((mg() - 2 + 500) / 25 | 0) + 1);
            a <= nh && (a = nh + 1);
            return nh = a
        }

        function ng(a, b) {
            a = 0 !== oh ? oh : ph ? th ? 1 : T : b.mode & 1 ? Dh ? 2 + 10 * (((a - 2 + 15) / 10 | 0) + 1) : 2 + 25 * (((a - 2 + 500) / 25 | 0) + 1) : 1;
            Dh && (0 === Eh || a > Eh) && (Eh = a);
            return a
        }

        function og(a, b) {
            for (; null !== a;) {
                if (0 === a.expirationTime || a.expirationTime > b) a.expirationTime = b;
                null !== a.alternate && (0 === a.alternate.expirationTime || a.alternate.expirationTime > b) && (a.alternate.expirationTime = b);
                if (null === a.return)
                    if (3 === a.tag) {
                        var c = a.stateNode;
                        !ph && 0 !== T && b < T && vh();
                        var d = c.current.expirationTime;
                        ph && !th && qh === c || Ah(c, d);
                        Fh > Gh && A("185")
                    } else break;
                a = a.return
            }
        }

        function mg() {
            mh = ef() - kh;
            return lh = (mh / 10 | 0) + 2
        }

        function Hh(a) {
            var b = oh;
            oh = 2 + 25 * (((mg() - 2 + 500) / 25 | 0) + 1);
            try {
                return a()
            } finally {
                oh = b
            }
        }

        function Ih(a, b, c, d, e) {
            var f = oh;
            oh = 1;
            try {
                return a(b, c, d, e)
            } finally {
                oh = f
            }
        }
        var Jh = null,
            V = null,
            Kh = 0,
            Lh = void 0,
            W = !1,
            X = null,
            Y = 0,
            Eh = 0,
            Mh = !1,
            Nh = !1,
            Oh = null,
            Ph = null,
            Z = !1,
            Qh = !1,
            Dh = !1,
            Rh = null,
            Gh = 1E3,
            Fh = 0,
            Sh = 1;

        function Th(a) {
            if (0 !== Kh) {
                if (a > Kh) return;
                null !== Lh && gf(Lh)
            }
            var b = ef() - kh;
            Kh = a;
            Lh = ff(Uh, {
                timeout: 10 * (a - 2) - b
            })
        }

        function Ah(a, b) {
            if (null === a.nextScheduledRoot) a.remainingExpirationTime = b, null === V ? (Jh = V = a, a.nextScheduledRoot = a) : (V = V.nextScheduledRoot = a, V.nextScheduledRoot = Jh);
            else {
                var c = a.remainingExpirationTime;
                if (0 === c || b < c) a.remainingExpirationTime = b
            }
            W || (Z ? Qh && (X = a, Y = 1, Vh(a, 1, !1)) : 1 === b ? Wh() : Th(b))
        }

        function Xh() {
            var a = 0,
                b = null;
            if (null !== V)
                for (var c = V, d = Jh; null !== d;) {
                    var e = d.remainingExpirationTime;
                    if (0 === e) {
                        null === c || null === V ? A("244") : void 0;
                        if (d === d.nextScheduledRoot) {
                            Jh = V = d.nextScheduledRoot = null;
                            break
                        } else if (d === Jh) Jh = e = d.nextScheduledRoot, V.nextScheduledRoot = e, d.nextScheduledRoot = null;
                        else if (d === V) {
                            V = c;
                            V.nextScheduledRoot = Jh;
                            d.nextScheduledRoot = null;
                            break
                        } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;
                        d = c.nextScheduledRoot
                    } else {
                        if (0 === a || e < a) a = e, b = d;
                        if (d === V) break;
                        c = d;
                        d = d.nextScheduledRoot
                    }
                }
            c = X;
            null !== c && c === b && 1 === a ? Fh++ : Fh = 0;
            X = b;
            Y = a
        }

        function Uh(a) {
            Yh(0, !0, a)
        }

        function Wh() {
            Yh(1, !1, null)
        }

        function Yh(a, b, c) {
            Ph = c;
            Xh();
            if (b)
                for (; null !== X && 0 !== Y && (0 === a || a >= Y) && (!Mh || mg() >= Y);) mg(), Vh(X, Y, !Mh), Xh();
            else
                for (; null !== X && 0 !== Y && (0 === a || a >= Y);) Vh(X, Y, !1), Xh();
            null !== Ph && (Kh = 0, Lh = null);
            0 !== Y && Th(Y);
            Ph = null;
            Mh = !1;
            Zh()
        }

        function $h(a, b) {
            W ? A("253") : void 0;
            X = a;
            Y = b;
            Vh(a, b, !1);
            Wh();
            Zh()
        }

        function Zh() {
            Fh = 0;
            if (null !== Rh) {
                var a = Rh;
                Rh = null;
                for (var b = 0; b < a.length; b++) {
                    var c = a[b];
                    try {
                        c._onComplete()
                    } catch (d) {
                        Nh || (Nh = !0, Oh = d)
                    }
                }
            }
            if (Nh) throw a = Oh, Oh = null, Nh = !1, a;
        }

        function Vh(a, b, c) {
            W ? A("245") : void 0;
            W = !0;
            c ? (c = a.finishedWork, null !== c ? ai(a, c, b) : (c = yh(a, b, !0), null !== c && (zh() ? a.finishedWork = c : ai(a, c, b)))) : (c = a.finishedWork, null !== c ? ai(a, c, b) : (c = yh(a, b, !1), null !== c && ai(a, c, b)));
            W = !1
        }

        function ai(a, b, c) {
            var d = a.firstBatch;
            if (null !== d && d._expirationTime <= c && (null === Rh ? Rh = [d] : Rh.push(d), d._defer)) {
                a.finishedWork = b;
                a.remainingExpirationTime = 0;
                return
            }
            a.finishedWork = null;
            th = ph = !0;
            c = b.stateNode;
            c.current === b ? A("177") : void 0;
            d = c.pendingCommitExpirationTime;
            0 === d ? A("261") : void 0;
            c.pendingCommitExpirationTime = 0;
            mg();
            ec.current = null;
            if (1 < b.effectTag)
                if (null !== b.lastEffect) {
                    b.lastEffect.nextEffect = b;
                    var e = b.firstEffect
                } else e = b;
            else e = b.firstEffect;
            af = Hd;
            var f = da();
            if (Ud(f)) {
                if ("selectionStart" in
                    f) var g = {
                    start: f.selectionStart,
                    end: f.selectionEnd
                };
                else a: {
                    var h = window.getSelection && window.getSelection();
                    if (h && 0 !== h.rangeCount) {
                        g = h.anchorNode;
                        var k = h.anchorOffset,
                            n = h.focusNode;
                        h = h.focusOffset;
                        try {
                            g.nodeType, n.nodeType
                        } catch (Wa) {
                            g = null;
                            break a
                        }
                        var r = 0,
                            w = -1,
                            P = -1,
                            nc = 0,
                            Jd = 0,
                            E = f,
                            t = null;
                        b: for (;;) {
                            for (var x;;) {
                                E !== g || 0 !== k && 3 !== E.nodeType || (w = r + k);
                                E !== n || 0 !== h && 3 !== E.nodeType || (P = r + h);
                                3 === E.nodeType && (r += E.nodeValue.length);
                                if (null === (x = E.firstChild)) break;
                                t = E;
                                E = x
                            }
                            for (;;) {
                                if (E === f) break b;
                                t === g &&
                                    ++nc === k && (w = r);
                                t === n && ++Jd === h && (P = r);
                                if (null !== (x = E.nextSibling)) break;
                                E = t;
                                t = E.parentNode
                            }
                            E = x
                        }
                        g = -1 === w || -1 === P ? null : {
                            start: w,
                            end: P
                        }
                    } else g = null
                }
                g = g || {
                    start: 0,
                    end: 0
                }
            } else g = null;
            bf = {
                focusedElem: f,
                selectionRange: g
            };
            Id(!1);
            for (U = e; null !== U;) {
                f = !1;
                g = void 0;
                try {
                    for (; null !== U;) {
                        if (U.effectTag & 256) {
                            var u = U.alternate;
                            k = U;
                            switch (k.tag) {
                                case 2:
                                    if (k.effectTag & 256 && null !== u) {
                                        var y = u.memoizedProps,
                                            D = u.memoizedState,
                                            ja = k.stateNode;
                                        ja.props = k.memoizedProps;
                                        ja.state = k.memoizedState;
                                        var mi = ja.getSnapshotBeforeUpdate(y,
                                            D);
                                        ja.__reactInternalSnapshotBeforeUpdate = mi
                                    }
                                    break;
                                case 3:
                                case 5:
                                case 6:
                                case 4:
                                    break;
                                default:
                                    A("163")
                            }
                        }
                        U = U.nextEffect
                    }
                } catch (Wa) {
                    f = !0, g = Wa
                }
                f && (null === U ? A("178") : void 0, Zg(U, g), null !== U && (U = U.nextEffect))
            }
            for (U = e; null !== U;) {
                u = !1;
                y = void 0;
                try {
                    for (; null !== U;) {
                        var q = U.effectTag;
                        q & 16 && Ke(U.stateNode, "");
                        if (q & 128) {
                            var z = U.alternate;
                            if (null !== z) {
                                var l = z.ref;
                                null !== l && ("function" === typeof l ? l(null) : l.current = null)
                            }
                        }
                        switch (q & 14) {
                            case 2:
                                ch(U);
                                U.effectTag &= -3;
                                break;
                            case 6:
                                ch(U);
                                U.effectTag &= -3;
                                dh(U.alternate,
                                    U);
                                break;
                            case 4:
                                dh(U.alternate, U);
                                break;
                            case 8:
                                D = U, ah(D), D.return = null, D.child = null, D.alternate && (D.alternate.child = null, D.alternate.return = null)
                        }
                        U = U.nextEffect
                    }
                } catch (Wa) {
                    u = !0, y = Wa
                }
                u && (null === U ? A("178") : void 0, Zg(U, y), null !== U && (U = U.nextEffect))
            }
            l = bf;
            z = da();
            q = l.focusedElem;
            u = l.selectionRange;
            if (z !== q && fa(document.documentElement, q)) {
                null !== u && Ud(q) && (z = u.start, l = u.end, void 0 === l && (l = z), "selectionStart" in q ? (q.selectionStart = z, q.selectionEnd = Math.min(l, q.value.length)) : window.getSelection && (z = window.getSelection(),
                    y = q[lb()].length, l = Math.min(u.start, y), u = void 0 === u.end ? l : Math.min(u.end, y), !z.extend && l > u && (y = u, u = l, l = y), y = Td(q, l), D = Td(q, u), y && D && (1 !== z.rangeCount || z.anchorNode !== y.node || z.anchorOffset !== y.offset || z.focusNode !== D.node || z.focusOffset !== D.offset) && (ja = document.createRange(), ja.setStart(y.node, y.offset), z.removeAllRanges(), l > u ? (z.addRange(ja), z.extend(D.node, D.offset)) : (ja.setEnd(D.node, D.offset), z.addRange(ja)))));
                z = [];
                for (l = q; l = l.parentNode;) 1 === l.nodeType && z.push({
                    element: l,
                    left: l.scrollLeft,
                    top: l.scrollTop
                });
                "function" === typeof q.focus && q.focus();
                for (q = 0; q < z.length; q++) l = z[q], l.element.scrollLeft = l.left, l.element.scrollTop = l.top
            }
            bf = null;
            Id(af);
            af = null;
            c.current = b;
            for (U = e; null !== U;) {
                e = !1;
                q = void 0;
                try {
                    for (z = d; null !== U;) {
                        var hg = U.effectTag;
                        if (hg & 36) {
                            var oc = U.alternate;
                            l = U;
                            u = z;
                            switch (l.tag) {
                                case 2:
                                    var ca = l.stateNode;
                                    if (l.effectTag & 4)
                                        if (null === oc) ca.props = l.memoizedProps, ca.state = l.memoizedState, ca.componentDidMount();
                                        else {
                                            var wi = oc.memoizedProps,
                                                xi = oc.memoizedState;
                                            ca.props = l.memoizedProps;
                                            ca.state = l.memoizedState;
                                            ca.componentDidUpdate(wi, xi, ca.__reactInternalSnapshotBeforeUpdate)
                                        }
                                    var Ng = l.updateQueue;
                                    null !== Ng && (ca.props = l.memoizedProps, ca.state = l.memoizedState, Wf(l, Ng, ca, u));
                                    break;
                                case 3:
                                    var Og = l.updateQueue;
                                    if (null !== Og) {
                                        y = null;
                                        if (null !== l.child) switch (l.child.tag) {
                                            case 5:
                                                y = l.child.stateNode;
                                                break;
                                            case 2:
                                                y = l.child.stateNode
                                        }
                                        Wf(l, Og, y, u)
                                    }
                                    break;
                                case 5:
                                    var yi = l.stateNode;
                                    null === oc && l.effectTag & 4 && cf(l.type, l.memoizedProps) && yi.focus();
                                    break;
                                case 6:
                                    break;
                                case 4:
                                    break;
                                case 15:
                                    break;
                                case 16:
                                    break;
                                default:
                                    A("163")
                            }
                        }
                        if (hg & 128) {
                            l = void 0;
                            var yc = U.ref;
                            if (null !== yc) {
                                var Pg = U.stateNode;
                                switch (U.tag) {
                                    case 5:
                                        l = Pg;
                                        break;
                                    default:
                                        l = Pg
                                }
                                "function" === typeof yc ? yc(l) : yc.current = l
                            }
                        }
                        var zi = U.nextEffect;
                        U.nextEffect = null;
                        U = zi
                    }
                } catch (Wa) {
                    e = !0, q = Wa
                }
                e && (null === U ? A("178") : void 0, Zg(U, q), null !== U && (U = U.nextEffect))
            }
            ph = th = !1;
            "function" === typeof Jf && Jf(b.stateNode);
            b = c.current.expirationTime;
            0 === b && (hh = null);
            a.remainingExpirationTime = b
        }

        function zh() {
            return null === Ph || Ph.timeRemaining() > Sh ? !1 : Mh = !0
        }

        function fh(a) {
            null === X ? A("246") : void 0;
            X.remainingExpirationTime = 0;
            Nh || (Nh = !0, Oh = a)
        }

        function Bh(a) {
            null === X ? A("246") : void 0;
            X.remainingExpirationTime = a
        }

        function bi(a, b) {
            var c = Z;
            Z = !0;
            try {
                return a(b)
            } finally {
                (Z = c) || W || Wh()
            }
        }

        function ci(a, b) {
            if (Z && !Qh) {
                Qh = !0;
                try {
                    return a(b)
                } finally {
                    Qh = !1
                }
            }
            return a(b)
        }

        function di(a, b) {
            W ? A("187") : void 0;
            var c = Z;
            Z = !0;
            try {
                return Ih(a, b)
            } finally {
                Z = c, Wh()
            }
        }

        function ei(a, b, c) {
            if (Dh) return a(b, c);
            Z || W || 0 === Eh || (Yh(Eh, !1, null), Eh = 0);
            var d = Dh,
                e = Z;
            Z = Dh = !0;
            try {
                return a(b, c)
            } finally {
                Dh = d, (Z = e) || W || Wh()
            }
        }

        function fi(a) {
            var b = Z;
            Z = !0;
            try {
                Ih(a)
            } finally {
                (Z = b) || W || Yh(1, !1, null)
            }
        }

        function gi(a, b, c, d, e) {
            var f = b.current;
            if (c) {
                c = c._reactInternalFiber;
                var g;
                b: {
                    2 === jd(c) && 2 === c.tag ? void 0 : A("170");
                    for (g = c; 3 !== g.tag;) {
                        if (qf(g)) {
                            g = g.stateNode.__reactInternalMemoizedMergedChildContext;
                            break b
                        }(g = g.return) ? void 0: A("171")
                    }
                    g = g.stateNode.context
                }
                c = qf(c) ? vf(c, g) : g
            } else c = ha;
            null === b.context ? b.context = c : b.pendingContext = c;
            b = e;
            e = Of(d);
            e.payload = {
                element: a
            };
            b = void 0 === b ? null : b;
            null !== b && (e.callback = b);
            Qf(f, e, d);
            og(f, d);
            return d
        }

        function hi(a) {
            var b = a._reactInternalFiber;
            void 0 === b && ("function" === typeof a.render ? A("188") : A("268", Object.keys(a)));
            a = md(b);
            return null === a ? null : a.stateNode
        }

        function ii(a, b, c, d) {
            var e = b.current,
                f = mg();
            e = ng(f, e);
            return gi(a, b, c, e, d)
        }

        function ji(a) {
            a = a.current;
            if (!a.child) return null;
            switch (a.child.tag) {
                case 5:
                    return a.child.stateNode;
                default:
                    return a.child.stateNode
            }
        }

        function ki(a) {
            var b = a.findFiberByHostInstance;
            return If(p({}, a, {
                findHostInstanceByFiber: function(a) {
                    a = md(a);
                    return null === a ? null : a.stateNode
                },
                findFiberByHostInstance: function(a) {
                    return b ? b(a) : null
                }
            }))
        }
        var li = {
            updateContainerAtExpirationTime: gi,
            createContainer: function(a, b, c) {
                return Ef(a, b, c)
            },
            updateContainer: ii,
            flushRoot: $h,
            requestWork: Ah,
            computeUniqueAsyncExpiration: Ch,
            batchedUpdates: bi,
            unbatchedUpdates: ci,
            deferredUpdates: Hh,
            syncUpdates: Ih,
            interactiveUpdates: ei,
            flushInteractiveUpdates: function() {
                W || 0 === Eh || (Yh(Eh, !1, null), Eh = 0)
            },
            flushControlled: fi,
            flushSync: di,
            getPublicRootInstance: ji,
            findHostInstance: hi,
            findHostInstanceWithNoPortals: function(a) {
                a = nd(a);
                return null === a ? null : a.stateNode
            },
            injectIntoDevTools: ki
        };

        function ni(a, b, c) {
            var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
            return {
                $$typeof: hc,
                key: null == d ? null : "" + d,
                children: a,
                containerInfo: b,
                implementation: c
            }
        }
        Kb.injectFiberControlledHostComponent($e);

        function oi(a) {
            this._expirationTime = Ch();
            this._root = a;
            this._callbacks = this._next = null;
            this._hasChildren = this._didComplete = !1;
            this._children = null;
            this._defer = !0
        }
        oi.prototype.render = function(a) {
            this._defer ? void 0 : A("250");
            this._hasChildren = !0;
            this._children = a;
            var b = this._root._internalRoot,
                c = this._expirationTime,
                d = new pi;
            gi(a, b, null, c, d._onCommit);
            return d
        };
        oi.prototype.then = function(a) {
            if (this._didComplete) a();
            else {
                var b = this._callbacks;
                null === b && (b = this._callbacks = []);
                b.push(a)
            }
        };
        oi.prototype.commit = function() {
            var a = this._root._internalRoot,
                b = a.firstBatch;
            this._defer && null !== b ? void 0 : A("251");
            if (this._hasChildren) {
                var c = this._expirationTime;
                if (b !== this) {
                    this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));
                    for (var d = null, e = b; e !== this;) d = e, e = e._next;
                    null === d ? A("251") : void 0;
                    d._next = e._next;
                    this._next = b;
                    a.firstBatch = this
                }
                this._defer = !1;
                $h(a, c);
                b = this._next;
                this._next = null;
                b = a.firstBatch = b;
                null !== b && b._hasChildren && b.render(b._children)
            } else this._next =
                null, this._defer = !1
        };
        oi.prototype._onComplete = function() {
            if (!this._didComplete) {
                this._didComplete = !0;
                var a = this._callbacks;
                if (null !== a)
                    for (var b = 0; b < a.length; b++)(0, a[b])()
            }
        };

        function pi() {
            this._callbacks = null;
            this._didCommit = !1;
            this._onCommit = this._onCommit.bind(this)
        }
        pi.prototype.then = function(a) {
            if (this._didCommit) a();
            else {
                var b = this._callbacks;
                null === b && (b = this._callbacks = []);
                b.push(a)
            }
        };
        pi.prototype._onCommit = function() {
            if (!this._didCommit) {
                this._didCommit = !0;
                var a = this._callbacks;
                if (null !== a)
                    for (var b = 0; b < a.length; b++) {
                        var c = a[b];
                        "function" !== typeof c ? A("191", c) : void 0;
                        c()
                    }
            }
        };

        function qi(a, b, c) {
            this._internalRoot = Ef(a, b, c)
        }
        qi.prototype.render = function(a, b) {
            var c = this._internalRoot,
                d = new pi;
            b = void 0 === b ? null : b;
            null !== b && d.then(b);
            ii(a, c, null, d._onCommit);
            return d
        };
        qi.prototype.unmount = function(a) {
            var b = this._internalRoot,
                c = new pi;
            a = void 0 === a ? null : a;
            null !== a && c.then(a);
            ii(null, b, null, c._onCommit);
            return c
        };
        qi.prototype.legacy_renderSubtreeIntoContainer = function(a, b, c) {
            var d = this._internalRoot,
                e = new pi;
            c = void 0 === c ? null : c;
            null !== c && e.then(c);
            ii(b, d, a, e._onCommit);
            return e
        };
        qi.prototype.createBatch = function() {
            var a = new oi(this),
                b = a._expirationTime,
                c = this._internalRoot,
                d = c.firstBatch;
            if (null === d) c.firstBatch = a, a._next = null;
            else {
                for (c = null; null !== d && d._expirationTime <= b;) c = d, d = d._next;
                a._next = d;
                null !== c && (c._next = a)
            }
            return a
        };

        function ri(a) {
            return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue))
        }
        Sb = li.batchedUpdates;
        Tb = li.interactiveUpdates;
        Ub = li.flushInteractiveUpdates;

        function si(a, b) {
            b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute("data-reactroot")));
            if (!b)
                for (var c; c = a.lastChild;) a.removeChild(c);
            return new qi(a, !1, b)
        }

        function ti(a, b, c, d, e) {
            ri(c) ? void 0 : A("200");
            var f = c._reactRootContainer;
            if (f) {
                if ("function" === typeof e) {
                    var g = e;
                    e = function() {
                        var a = ji(f._internalRoot);
                        g.call(a)
                    }
                }
                null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e)
            } else {
                f = c._reactRootContainer = si(c, d);
                if ("function" === typeof e) {
                    var h = e;
                    e = function() {
                        var a = ji(f._internalRoot);
                        h.call(a)
                    }
                }
                ci(function() {
                    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e)
                })
            }
            return ji(f._internalRoot)
        }

        function ui(a, b) {
            var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
            ri(b) ? void 0 : A("200");
            return ni(a, b, null, c)
        }
        var vi = {
            createPortal: ui,
            findDOMNode: function(a) {
                return null == a ? null : 1 === a.nodeType ? a : hi(a)
            },
            hydrate: function(a, b, c) {
                return ti(null, a, b, !0, c)
            },
            render: function(a, b, c) {
                return ti(null, a, b, !1, c)
            },
            unstable_renderSubtreeIntoContainer: function(a, b, c, d) {
                null == a || void 0 === a._reactInternalFiber ? A("38") : void 0;
                return ti(a, b, c, !1, d)
            },
            unmountComponentAtNode: function(a) {
                ri(a) ? void 0 : A("40");
                return a._reactRootContainer ? (ci(function() {
                    ti(null, null, a, !1, function() {
                        a._reactRootContainer = null
                    })
                }), !0) : !1
            },
            unstable_createPortal: function() {
                return ui.apply(void 0,
                    arguments)
            },
            unstable_batchedUpdates: bi,
            unstable_deferredUpdates: Hh,
            unstable_interactiveUpdates: ei,
            flushSync: di,
            unstable_flushControlled: fi,
            __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
                EventPluginHub: Ka,
                EventPluginRegistry: va,
                EventPropagators: $a,
                ReactControlledComponent: Rb,
                ReactDOMComponentTree: Qa,
                ReactDOMEventListener: Nd
            },
            unstable_createRoot: function(a, b) {
                return new qi(a, !0, null != b && !0 === b.hydrate)
            }
        };
        ki({
            findFiberByHostInstance: Na,
            bundleType: 0,
            version: "16.4.1",
            rendererPackageName: "react-dom"
        });
        var Ai = {
                default: vi
            },
            Bi = Ai && vi || Ai;
        module.exports = Bi.default ? Bi.default : Bi;


        /***/
    }),
    /* 91 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */



        var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

        /**
         * Simple, lightweight module assisting with the detection and context of
         * Worker. Helps avoid circular dependencies and allows code to reason about
         * whether or not they are in a Worker, even if they never include the main
         * `ReactWorker` dependency.
         */
        var ExecutionEnvironment = {

            canUseDOM: canUseDOM,

            canUseWorkers: typeof Worker !== 'undefined',

            canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

            canUseViewport: canUseDOM && !!window.screen,

            isInWorker: !canUseDOM // For now, this is true - might change in the future.

        };

        module.exports = ExecutionEnvironment;

        /***/
    }),
    /* 92 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        /* eslint-disable fb-www/typeof-undefined */

        /**
         * Same as document.activeElement but wraps in a try-catch block. In IE it is
         * not safe to call document.activeElement if there is nothing focused.
         *
         * The activeElement will be null only if the document or document body is not
         * yet defined.
         *
         * @param {?DOMDocument} doc Defaults to current document.
         * @return {?DOMElement}
         */
        function getActiveElement(doc) /*?DOMElement*/ {
            doc = doc || (typeof document !== 'undefined' ? document : undefined);
            if (typeof doc === 'undefined') {
                return null;
            }
            try {
                return doc.activeElement || doc.body;
            } catch (e) {
                return doc.body;
            }
        }

        module.exports = getActiveElement;

        /***/
    }),
    /* 93 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         * 
         */

        /*eslint-disable no-self-compare */



        var hasOwnProperty = Object.prototype.hasOwnProperty;

        /**
         * inlined Object.is polyfill to avoid requiring consumers ship their own
         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
         */
        function is(x, y) {
            // SameValue algorithm
            if (x === y) {
                // Steps 1-5, 7-10
                // Steps 6.b-6.e: +0 != -0
                // Added the nonzero y check to make Flow happy, but it is redundant
                return x !== 0 || y !== 0 || 1 / x === 1 / y;
            } else {
                // Step 6.a: NaN == NaN
                return x !== x && y !== y;
            }
        }

        /**
         * Performs equality by iterating through keys on an object and returning false
         * when any key has values which are not strictly equal between the arguments.
         * Returns true when the values of all keys are strictly equal.
         */
        function shallowEqual(objA, objB) {
            if (is(objA, objB)) {
                return true;
            }

            if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
                return false;
            }

            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);

            if (keysA.length !== keysB.length) {
                return false;
            }

            // Test for A's keys different from B.
            for (var i = 0; i < keysA.length; i++) {
                if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
                    return false;
                }
            }

            return true;
        }

        module.exports = shallowEqual;

        /***/
    }),
    /* 94 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * 
         */

        var isTextNode = __webpack_require__(95);

        /*eslint-disable no-bitwise */

        /**
         * Checks if a given DOM node contains or is another DOM node.
         */
        function containsNode(outerNode, innerNode) {
            if (!outerNode || !innerNode) {
                return false;
            } else if (outerNode === innerNode) {
                return true;
            } else if (isTextNode(outerNode)) {
                return false;
            } else if (isTextNode(innerNode)) {
                return containsNode(outerNode, innerNode.parentNode);
            } else if ('contains' in outerNode) {
                return outerNode.contains(innerNode);
            } else if (outerNode.compareDocumentPosition) {
                return !!(outerNode.compareDocumentPosition(innerNode) & 16);
            } else {
                return false;
            }
        }

        module.exports = containsNode;

        /***/
    }),
    /* 95 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var isNode = __webpack_require__(96);

        /**
         * @param {*} object The object to check.
         * @return {boolean} Whether or not the object is a DOM text node.
         */
        function isTextNode(object) {
            return isNode(object) && object.nodeType == 3;
        }

        module.exports = isTextNode;

        /***/
    }),
    /* 96 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        /**
         * @param {*} object The object to check.
         * @return {boolean} Whether or not the object is a DOM node.
         */
        function isNode(object) {
            var doc = object ? object.ownerDocument || object : document;
            var defaultView = doc.defaultView || window;
            return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
        }

        module.exports = isNode;

        /***/
    }),
    /* 97 */
    /***/
    (function(module, exports) {

        // shim for using process in browser
        var process = module.exports = {};

        // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
            throw new Error('setTimeout has not been defined');
        }

        function defaultClearTimeout() {
            throw new Error('clearTimeout has not been defined');
        }
        (function() {
            try {
                if (typeof setTimeout === 'function') {
                    cachedSetTimeout = setTimeout;
                } else {
                    cachedSetTimeout = defaultSetTimout;
                }
            } catch (e) {
                cachedSetTimeout = defaultSetTimout;
            }
            try {
                if (typeof clearTimeout === 'function') {
                    cachedClearTimeout = clearTimeout;
                } else {
                    cachedClearTimeout = defaultClearTimeout;
                }
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout;
            }
        }())

        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
                //normal enviroments in sane situations
                return setTimeout(fun, 0);
            }
            // if setTimeout wasn't available but was latter defined
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                cachedSetTimeout = setTimeout;
                return setTimeout(fun, 0);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedSetTimeout(fun, 0);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                    return cachedSetTimeout.call(null, fun, 0);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                    return cachedSetTimeout.call(this, fun, 0);
                }
            }


        }

        function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
                //normal enviroments in sane situations
                return clearTimeout(marker);
            }
            // if clearTimeout wasn't available but was latter defined
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                cachedClearTimeout = clearTimeout;
                return clearTimeout(marker);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedClearTimeout(marker);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                    return cachedClearTimeout.call(null, marker);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                    // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                    return cachedClearTimeout.call(this, marker);
                }
            }



        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
            if (!draining || !currentQueue) {
                return;
            }
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
            }
            if (queue.length) {
                drainQueue();
            }
        }

        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while (len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                    }
                }
                queueIndex = -1;
                len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
        }

        process.nextTick = function(fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
                runTimeout(drainQueue);
            }
        };

        // v8 likes predictible objects
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }
        Item.prototype.run = function() {
            this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function(name) {
            return []
        }

        process.binding = function(name) {
            throw new Error('process.binding is not supported');
        };

        process.cwd = function() {
            return '/'
        };
        process.chdir = function(dir) {
            throw new Error('process.chdir is not supported');
        };
        process.umask = function() {
            return 0;
        };


        /***/
    }),
    /* 98 */
    /***/
    (function(module, exports) {

        module.exports = function(originalModule) {
            if (!originalModule.webpackPolyfill) {
                var module = Object.create(originalModule);
                // module.parent = undefined by default
                if (!module.children) module.children = [];
                Object.defineProperty(module, "loaded", {
                    enumerable: true,
                    get: function() {
                        return module.l;
                    }
                });
                Object.defineProperty(module, "id", {
                    enumerable: true,
                    get: function() {
                        return module.i;
                    }
                });
                Object.defineProperty(module, "exports", {
                    enumerable: true,
                });
                module.webpackPolyfill = 1;
            }
            return module;
        };


        /***/
    }),
    /* 99 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /*!
         * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
         *
         * Copyright (c) 2014-2017, Jon Schlinkert.
         * Released under the MIT License.
         */



        var isObject = __webpack_require__(100);

        function isObjectObject(o) {
            return isObject(o) === true &&
                Object.prototype.toString.call(o) === '[object Object]';
        }

        module.exports = function isPlainObject(o) {
            var ctor, prot;

            if (isObjectObject(o) === false) return false;

            // If has modified constructor
            ctor = o.constructor;
            if (typeof ctor !== 'function') return false;

            // If has modified prototype
            prot = ctor.prototype;
            if (isObjectObject(prot) === false) return false;

            // If constructor does not have an Object-specific method
            if (prot.hasOwnProperty('isPrototypeOf') === false) {
                return false;
            }

            // Most likely a plain Object
            return true;
        };


        /***/
    }),
    /* 100 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /*!
         * isobject <https://github.com/jonschlinkert/isobject>
         *
         * Copyright (c) 2014-2017, Jon Schlinkert.
         * Released under the MIT License.
         */



        module.exports = function isObject(val) {
            return val != null && typeof val === 'object' && Array.isArray(val) === false;
        };


        /***/
    }),
    /* 101 */
    /***/
    (function(module, exports, __webpack_require__) {

        /*
         *          __        ___
         *    _____/ /___  __/ (_)____
         *   / ___/ __/ / / / / / ___/
         *  (__  ) /_/ /_/ / / (__  )
         * /____/\__/\__, /_/_/____/
         *          /____/
         *
         * light - weight css preprocessor @licence MIT
         */
        (function(factory) { /* eslint-disable */
            true ? (module['exports'] = factory(null)) :
                typeof define === 'function' && define['amd'] ? define(factory(null)) :
                (window['stylis'] = factory(null))
        }( /** @param {*=} options */ function factory(options) { /* eslint-disable */

            'use strict'

            /**
             * Notes
             *
             * The ['<method name>'] pattern is used to support closure compiler
             * the jsdoc signatures are also used to the same effect
             *
             * ----
             *
             * int + int + int === n4 [faster]
             *
             * vs
             *
             * int === n1 && int === n2 && int === n3
             *
             * ----
             *
             * switch (int) { case ints...} [faster]
             *
             * vs
             *
             * if (int == 1 && int === 2 ...)
             *
             * ----
             *
             * The (first*n1 + second*n2 + third*n3) format used in the property parser
             * is a simple way to hash the sequence of characters
             * taking into account the index they occur in
             * since any number of 3 character sequences could produce duplicates.
             *
             * On the other hand sequences that are directly tied to the index of the character
             * resolve a far more accurate measure, it's also faster
             * to evaluate one condition in a switch statement
             * than three in an if statement regardless of the added math.
             *
             * This allows the vendor prefixer to be both small and fast.
             */

            var nullptn = /^\0+/g /* matches leading null characters */
            var formatptn = /[\0\r\f]/g /* matches new line, null and formfeed characters */
            var colonptn = /: */g /* splits animation rules */
            var cursorptn = /zoo|gra/ /* assert cursor varient */
            var transformptn = /([,: ])(transform)/g /* vendor prefix transform, older webkit */
            var animationptn = /,+\s*(?![^(]*[)])/g /* splits multiple shorthand notation animations */
            var propertiesptn = / +\s*(?![^(]*[)])/g /* animation properties */
            var elementptn = / *[\0] */g /* selector elements */
            var selectorptn = /,\r+?/g /* splits selectors */
            var andptn = /([\t\r\n ])*\f?&/g /* match & */
            var escapeptn = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g /* matches :global(.*) */
            var invalidptn = /\W+/g /* removes invalid characters from keyframes */
            var keyframeptn = /@(k\w+)\s*(\S*)\s*/ /* matches @keyframes $1 */
            var plcholdrptn = /::(place)/g /* match ::placeholder varient */
            var readonlyptn = /:(read-only)/g /* match :read-only varient */
            var beforeptn = /\s+(?=[{\];=:>])/g /* matches \s before ] ; = : */
            var afterptn = /([[}=:>])\s+/g /* matches \s after characters [ } = : */
            var tailptn = /(\{[^{]+?);(?=\})/g /* matches tail semi-colons ;} */
            var whiteptn = /\s{2,}/g /* matches repeating whitespace */
            var pseudoptn = /([^\(])(:+) */g /* pseudo element */
            var writingptn = /[svh]\w+-[tblr]{2}/ /* match writing mode property values */
            var gradientptn = /([\w-]+t\()/g /* match *gradient property */
            var supportsptn = /\(\s*(.*)\s*\)/g /* match supports (groups) */
            var propertyptn = /([\s\S]*?);/g /* match properties leading semicolon */
            var selfptn = /-self|flex-/g /* match flex- and -self in align-self: flex-*; */
            var pseudofmt = /[^]*?(:[rp][el]a[\w-]+)[^]*/ /* extrats :readonly or :placholder from selector */
            var trimptn = /[ \t]+$/ /* match tail whitspace */
            var dimensionptn = /stretch|:\s*\w+\-(?:conte|avail)/ /* match max/min/fit-content, fill-available */
            var imgsrcptn = /([^-])(image-set\()/

            /* vendors */
            var webkit = '-webkit-'
            var moz = '-moz-'
            var ms = '-ms-'

            /* character codes */
            var SEMICOLON = 59 /* ; */
            var CLOSEBRACES = 125 /* } */
            var OPENBRACES = 123 /* { */
            var OPENPARENTHESES = 40 /* ( */
            var CLOSEPARENTHESES = 41 /* ) */
            var OPENBRACKET = 91 /* [ */
            var CLOSEBRACKET = 93 /* ] */
            var NEWLINE = 10 /* \n */
            var CARRIAGE = 13 /* \r */
            var TAB = 9 /* \t */
            var AT = 64 /* @ */
            var SPACE = 32 /*   */
            var AND = 38 /* & */
            var DASH = 45 /* - */
            var UNDERSCORE = 95 /* _ */
            var STAR = 42 /* * */
            var COMMA = 44 /* , */
            var COLON = 58 /* : */
            var SINGLEQUOTE = 39 /* ' */
            var DOUBLEQUOTE = 34 /* " */
            var FOWARDSLASH = 47 /* / */
            var GREATERTHAN = 62 /* > */
            var PLUS = 43 /* + */
            var TILDE = 126 /* ~ */
            var NULL = 0 /* \0 */
            var FORMFEED = 12 /* \f */
            var VERTICALTAB = 11 /* \v */

            /* special identifiers */
            var KEYFRAME = 107 /* k */
            var MEDIA = 109 /* m */
            var SUPPORTS = 115 /* s */
            var PLACEHOLDER = 112 /* p */
            var READONLY = 111 /* o */
            var IMPORT = 105 /* <at>i */
            var CHARSET = 99 /* <at>c */
            var DOCUMENT = 100 /* <at>d */
            var PAGE = 112 /* <at>p */

            var column = 1 /* current column */
            var line = 1 /* current line numebr */
            var pattern = 0 /* :pattern */

            var cascade = 1 /* #id h1 h2 vs h1#id h2#id  */
            var prefix = 1 /* vendor prefix */
            var escape = 1 /* escape :global() pattern */
            var compress = 0 /* compress output */
            var semicolon = 0 /* no/semicolon option */
            var preserve = 0 /* preserve empty selectors */

            /* empty reference */
            var array = []

            /* plugins */
            var plugins = []
            var plugged = 0
            var should = null

            /* plugin context */
            var POSTS = -2
            var PREPS = -1
            var UNKWN = 0
            var PROPS = 1
            var BLCKS = 2
            var ATRUL = 3

            /* plugin newline context */
            var unkwn = 0

            /* keyframe animation */
            var keyed = 1
            var key = ''

            /* selector namespace */
            var nscopealt = ''
            var nscope = ''

            /**
             * Compile
             *
             * @param {Array<string>} parent
             * @param {Array<string>} current
             * @param {string} body
             * @param {number} id
             * @param {number} depth
             * @return {string}
             */
            function compile(parent, current, body, id, depth) {
                var bracket = 0 /* brackets [] */
                var comment = 0 /* comments /* // or /* */
                var parentheses = 0 /* functions () */
                var quote = 0 /* quotes '', "" */

                var first = 0 /* first character code */
                var second = 0 /* second character code */
                var code = 0 /* current character code */
                var tail = 0 /* previous character code */
                var trail = 0 /* character before previous code */
                var peak = 0 /* previous non-whitespace code */

                var counter = 0 /* count sequence termination */
                var context = 0 /* track current context */
                var atrule = 0 /* track @at-rule context */
                var pseudo = 0 /* track pseudo token index */
                var caret = 0 /* current character index */
                var format = 0 /* control character formating context */
                var insert = 0 /* auto semicolon insertion */
                var invert = 0 /* inverted selector pattern */
                var length = 0 /* generic length address */
                var eof = body.length /* end of file(length) */
                var eol = eof - 1 /* end of file(characters) */

                var char = '' /* current character */
                var chars = '' /* current buffer of characters */
                var child = '' /* next buffer of characters */
                var out = '' /* compiled body */
                var children = '' /* compiled children */
                var flat = '' /* compiled leafs */
                var selector /* generic selector address */
                var result /* generic address */

                // ...build body
                while (caret < eof) {
                    code = body.charCodeAt(caret)

                    // eof varient
                    if (caret === eol) {
                        // last character + noop context, add synthetic padding for noop context to terminate
                        if (comment + quote + parentheses + bracket !== 0) {
                            if (comment !== 0) {
                                code = comment === FOWARDSLASH ? NEWLINE : FOWARDSLASH
                            }

                            quote = parentheses = bracket = 0
                            eof++
                            eol++
                        }
                    }

                    if (comment + quote + parentheses + bracket === 0) {
                        // eof varient
                        if (caret === eol) {
                            if (format > 0) {
                                chars = chars.replace(formatptn, '')
                            }

                            if (chars.trim().length > 0) {
                                switch (code) {
                                    case SPACE:
                                    case TAB:
                                    case SEMICOLON:
                                    case CARRIAGE:
                                    case NEWLINE:
                                        {
                                            break
                                        }
                                    default:
                                        {
                                            chars += body.charAt(caret)
                                        }
                                }

                                code = SEMICOLON
                            }
                        }

                        // auto semicolon insertion
                        if (insert === 1) {
                            switch (code) {
                                // false flags
                                case OPENBRACES:
                                case CLOSEBRACES:
                                case SEMICOLON:
                                case DOUBLEQUOTE:
                                case SINGLEQUOTE:
                                case OPENPARENTHESES:
                                case CLOSEPARENTHESES:
                                case COMMA:
                                    {
                                        insert = 0
                                    }
                                    // ignore
                                case TAB:
                                case CARRIAGE:
                                case NEWLINE:
                                case SPACE:
                                    {
                                        break
                                    }
                                    // valid
                                default:
                                    {
                                        insert = 0
                                        length = caret
                                        first = code
                                        caret--
                                        code = SEMICOLON

                                        while (length < eof) {
                                            switch (body.charCodeAt(length++)) {
                                                case NEWLINE:
                                                case CARRIAGE:
                                                case SEMICOLON:
                                                    {
                                                        ++caret
                                                        code = first
                                                        length = eof
                                                        break
                                                    }
                                                case COLON:
                                                    {
                                                        if (format > 0) {
                                                            ++caret
                                                            code = first
                                                        }
                                                    }
                                                case OPENBRACES:
                                                    {
                                                        length = eof
                                                    }
                                            }
                                        }
                                    }
                            }
                        }

                        // token varient
                        switch (code) {
                            case OPENBRACES:
                                {
                                    chars = chars.trim()
                                    first = chars.charCodeAt(0)
                                    counter = 1
                                    length = ++caret

                                    while (caret < eof) {
                                        switch (code = body.charCodeAt(caret)) {
                                            case OPENBRACES:
                                                {
                                                    counter++
                                                    break
                                                }
                                            case CLOSEBRACES:
                                                {
                                                    counter--
                                                    break
                                                }
                                            case FOWARDSLASH:
                                                {
                                                    switch (second = body.charCodeAt(caret + 1)) {
                                                        // /*, //
                                                        case STAR:
                                                        case FOWARDSLASH:
                                                            {
                                                                caret = delimited(second, caret, eol, body)
                                                            }
                                                    }
                                                    break
                                                }
                                                // given "[" === 91 & "]" === 93 hence forth 91 + 1 + 1 === 93
                                            case OPENBRACKET:
                                                {
                                                    code++
                                                }
                                                // given "(" === 40 & ")" === 41 hence forth 40 + 1 === 41
                                            case OPENPARENTHESES:
                                                {
                                                    code++
                                                }
                                                // quote tail delimiter is identical to the head delimiter hence noop,
                                                // fallthrough clauses have been shited to the correct tail delimiter
                                            case DOUBLEQUOTE:
                                            case SINGLEQUOTE:
                                                {
                                                    while (caret++ < eol) {
                                                        if (body.charCodeAt(caret) === code) {
                                                            break
                                                        }
                                                    }
                                                }
                                        }

                                        if (counter === 0) {
                                            break
                                        }

                                        caret++
                                    }

                                    child = body.substring(length, caret)

                                    if (first === NULL) {
                                        first = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0)
                                    }

                                    switch (first) {
                                        // @at-rule
                                        case AT:
                                            {
                                                if (format > 0) {
                                                    chars = chars.replace(formatptn, '')
                                                }

                                                second = chars.charCodeAt(1)

                                                switch (second) {
                                                    case DOCUMENT:
                                                    case MEDIA:
                                                    case SUPPORTS:
                                                    case DASH:
                                                        {
                                                            selector = current
                                                            break
                                                        }
                                                    default:
                                                        {
                                                            selector = array
                                                        }
                                                }

                                                child = compile(current, selector, child, second, depth + 1)
                                                length = child.length

                                                // preserve empty @at-rule
                                                if (preserve > 0 && length === 0) {
                                                    length = chars.length
                                                }

                                                // execute plugins, @at-rule context
                                                if (plugged > 0) {
                                                    selector = select(array, chars, invert)
                                                    result = proxy(ATRUL, child, selector, current, line, column, length, second, depth, id)
                                                    chars = selector.join('')

                                                    if (result !== void 0) {
                                                        if ((length = (child = result.trim()).length) === 0) {
                                                            second = 0
                                                            child = ''
                                                        }
                                                    }
                                                }

                                                if (length > 0) {
                                                    switch (second) {
                                                        case SUPPORTS:
                                                            {
                                                                chars = chars.replace(supportsptn, supports)
                                                            }
                                                        case DOCUMENT:
                                                        case MEDIA:
                                                        case DASH:
                                                            {
                                                                child = chars + '{' + child + '}'
                                                                break
                                                            }
                                                        case KEYFRAME:
                                                            {
                                                                chars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''))
                                                                child = chars + '{' + child + '}'

                                                                if (prefix === 1 || (prefix === 2 && vendor('@' + child, 3))) {
                                                                    child = '@' + webkit + child + '@' + child
                                                                } else {
                                                                    child = '@' + child
                                                                }
                                                                break
                                                            }
                                                        default:
                                                            {
                                                                child = chars + child

                                                                if (id === PAGE) {
                                                                    child = (out += child, '')
                                                                }
                                                            }
                                                    }
                                                } else {
                                                    child = ''
                                                }

                                                break
                                            }
                                            // selector
                                        default:
                                            {
                                                child = compile(current, select(current, chars, invert), child, id, depth + 1)
                                            }
                                    }

                                    children += child

                                    // reset
                                    context = 0
                                    insert = 0
                                    pseudo = 0
                                    format = 0
                                    invert = 0
                                    atrule = 0
                                    chars = ''
                                    child = ''
                                    code = body.charCodeAt(++caret)
                                    break
                                }
                            case CLOSEBRACES:
                            case SEMICOLON:
                                {
                                    chars = (format > 0 ? chars.replace(formatptn, '') : chars).trim()

                                    if ((length = chars.length) > 1) {
                                        // monkey-patch missing colon
                                        if (pseudo === 0) {
                                            first = chars.charCodeAt(0)

                                            // first character is a letter or dash, buffer has a space character
                                            if ((first === DASH || first > 96 && first < 123)) {
                                                length = (chars = chars.replace(' ', ':')).length
                                            }
                                        }

                                        // execute plugins, property context
                                        if (plugged > 0) {
                                            if ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth, id)) !== void 0) {
                                                if ((length = (chars = result.trim()).length) === 0) {
                                                    chars = '\0\0'
                                                }
                                            }
                                        }

                                        first = chars.charCodeAt(0)
                                        second = chars.charCodeAt(1)

                                        switch (first) {
                                            case NULL:
                                                {
                                                    break
                                                }
                                            case AT:
                                                {
                                                    if (second === IMPORT || second === CHARSET) {
                                                        flat += chars + body.charAt(caret)
                                                        break
                                                    }
                                                }
                                            default:
                                                {
                                                    if (chars.charCodeAt(length - 1) === COLON) {
                                                        break
                                                    }

                                                    out += property(chars, first, second, chars.charCodeAt(2))
                                                }
                                        }
                                    }

                                    // reset
                                    context = 0
                                    insert = 0
                                    pseudo = 0
                                    format = 0
                                    invert = 0
                                    chars = ''
                                    code = body.charCodeAt(++caret)
                                    break
                                }
                        }
                    }

                    // parse characters
                    switch (code) {
                        case CARRIAGE:
                        case NEWLINE:
                            {
                                // auto insert semicolon
                                if (comment + quote + parentheses + bracket + semicolon === 0) {
                                    // valid non-whitespace characters that
                                    // may precede a newline
                                    switch (peak) {
                                        case CLOSEPARENTHESES:
                                        case SINGLEQUOTE:
                                        case DOUBLEQUOTE:
                                        case AT:
                                        case TILDE:
                                        case GREATERTHAN:
                                        case STAR:
                                        case PLUS:
                                        case FOWARDSLASH:
                                        case DASH:
                                        case COLON:
                                        case COMMA:
                                        case SEMICOLON:
                                        case OPENBRACES:
                                        case CLOSEBRACES:
                                            {
                                                break
                                            }
                                        default:
                                            {
                                                // current buffer has a colon
                                                if (pseudo > 0) {
                                                    insert = 1
                                                }
                                            }
                                    }
                                }

                                // terminate line comment
                                if (comment === FOWARDSLASH) {
                                    comment = 0
                                } else if (cascade + context === 0 && id !== KEYFRAME && chars.length > 0) {
                                    format = 1
                                    chars += '\0'
                                }

                                // execute plugins, newline context
                                if (plugged * unkwn > 0) {
                                    proxy(UNKWN, chars, current, parent, line, column, out.length, id, depth, id)
                                }

                                // next line, reset column position
                                column = 1
                                line++
                                break
                            }
                        case SEMICOLON:
                        case CLOSEBRACES:
                            {
                                if (comment + quote + parentheses + bracket === 0) {
                                    column++
                                    break
                                }
                            }
                        default:
                            {
                                // increment column position
                                column++

                                // current character
                                char = body.charAt(caret)

                                // remove comments, escape functions, strings, attributes and prepare selectors
                                switch (code) {
                                    case TAB:
                                    case SPACE:
                                        {
                                            if (quote + bracket + comment === 0) {
                                                switch (tail) {
                                                    case COMMA:
                                                    case COLON:
                                                    case TAB:
                                                    case SPACE:
                                                        {
                                                            char = ''
                                                            break
                                                        }
                                                    default:
                                                        {
                                                            if (code !== SPACE) {
                                                                char = ' '
                                                            }
                                                        }
                                                }
                                            }
                                            break
                                        }
                                        // escape breaking control characters
                                    case NULL:
                                        {
                                            char = '\\0'
                                            break
                                        }
                                    case FORMFEED:
                                        {
                                            char = '\\f'
                                            break
                                        }
                                    case VERTICALTAB:
                                        {
                                            char = '\\v'
                                            break
                                        }
                                        // &
                                    case AND:
                                        {
                                            // inverted selector pattern i.e html &
                                            if (quote + comment + bracket === 0 && cascade > 0) {
                                                invert = 1
                                                format = 1
                                                char = '\f' + char
                                            }
                                            break
                                        }
                                        // ::p<l>aceholder, l
                                        // :read-on<l>y, l
                                    case 108:
                                        {
                                            if (quote + comment + bracket + pattern === 0 && pseudo > 0) {
                                                switch (caret - pseudo) {
                                                    // ::placeholder
                                                    case 2:
                                                        {
                                                            if (tail === PLACEHOLDER && body.charCodeAt(caret - 3) === COLON) {
                                                                pattern = tail
                                                            }
                                                        }
                                                        // :read-only
                                                    case 8:
                                                        {
                                                            if (trail === READONLY) {
                                                                pattern = trail
                                                            }
                                                        }
                                                }
                                            }
                                            break
                                        }
                                        // :<pattern>
                                    case COLON:
                                        {
                                            if (quote + comment + bracket === 0) {
                                                pseudo = caret
                                            }
                                            break
                                        }
                                        // selectors
                                    case COMMA:
                                        {
                                            if (comment + parentheses + quote + bracket === 0) {
                                                format = 1
                                                char += '\r'
                                            }
                                            break
                                        }
                                        // quotes
                                    case DOUBLEQUOTE:
                                        {
                                            if (comment === 0) {
                                                quote = quote === code ? 0 : (quote === 0 ? code : quote)
                                            }
                                            break
                                        }
                                    case SINGLEQUOTE:
                                        {
                                            if (comment === 0) {
                                                quote = quote === code ? 0 : (quote === 0 ? code : quote)
                                            }
                                            break
                                        }
                                        // attributes
                                    case OPENBRACKET:
                                        {
                                            if (quote + comment + parentheses === 0) {
                                                bracket++
                                            }
                                            break
                                        }
                                    case CLOSEBRACKET:
                                        {
                                            if (quote + comment + parentheses === 0) {
                                                bracket--
                                            }
                                            break
                                        }
                                        // functions
                                    case CLOSEPARENTHESES:
                                        {
                                            if (quote + comment + bracket === 0) {
                                                parentheses--
                                            }
                                            break
                                        }
                                    case OPENPARENTHESES:
                                        {
                                            if (quote + comment + bracket === 0) {
                                                if (context === 0) {
                                                    switch (tail * 2 + trail * 3) {
                                                        // :matches
                                                        case 533:
                                                            {
                                                                break
                                                            }
                                                            // :global, :not, :nth-child etc...
                                                        default:
                                                            {
                                                                counter = 0
                                                                context = 1
                                                            }
                                                    }
                                                }

                                                parentheses++
                                            }
                                            break
                                        }
                                    case AT:
                                        {
                                            if (comment + parentheses + quote + bracket + pseudo + atrule === 0) {
                                                atrule = 1
                                            }
                                            break
                                        }
                                        // block/line comments
                                    case STAR:
                                    case FOWARDSLASH:
                                        {
                                            if (quote + bracket + parentheses > 0) {
                                                break
                                            }

                                            switch (comment) {
                                                // initialize line/block comment context
                                                case 0:
                                                    {
                                                        switch (code * 2 + body.charCodeAt(caret + 1) * 3) {
                                                            // //
                                                            case 235:
                                                                {
                                                                    comment = FOWARDSLASH
                                                                    break
                                                                }
                                                                // /*
                                                            case 220:
                                                                {
                                                                    length = caret
                                                                    comment = STAR
                                                                    break
                                                                }
                                                        }
                                                        break
                                                    }
                                                    // end block comment context
                                                case STAR:
                                                    {
                                                        if (code === FOWARDSLASH && tail === STAR && length + 2 !== caret) {
                                                            // /*<!> ... */, !
                                                            if (body.charCodeAt(length + 2) === 33) {
                                                                out += body.substring(length, caret + 1)
                                                            }
                                                            char = ''
                                                            comment = 0
                                                        }
                                                    }
                                            }
                                        }
                                }

                                // ignore comment blocks
                                if (comment === 0) {
                                    // aggressive isolation mode, divide each individual selector
                                    // including selectors in :not function but excluding selectors in :global function
                                    if (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {
                                        switch (code) {
                                            case COMMA:
                                            case TILDE:
                                            case GREATERTHAN:
                                            case PLUS:
                                            case CLOSEPARENTHESES:
                                            case OPENPARENTHESES:
                                                {
                                                    if (context === 0) {
                                                        // outside of an isolated context i.e nth-child(<...>)
                                                        switch (tail) {
                                                            case TAB:
                                                            case SPACE:
                                                            case NEWLINE:
                                                            case CARRIAGE:
                                                                {
                                                                    char = char + '\0'
                                                                    break
                                                                }
                                                            default:
                                                                {
                                                                    char = '\0' + char + (code === COMMA ? '' : '\0')
                                                                }
                                                        }
                                                        format = 1
                                                    } else {
                                                        // within an isolated context, sleep untill it's terminated
                                                        switch (code) {
                                                            case OPENPARENTHESES:
                                                                {
                                                                    // :globa<l>(
                                                                    if (pseudo + 7 === caret && tail === 108) {
                                                                        pseudo = 0
                                                                    }
                                                                    context = ++counter
                                                                    break
                                                                }
                                                            case CLOSEPARENTHESES:
                                                                {
                                                                    if ((context = --counter) === 0) {
                                                                        format = 1
                                                                        char += '\0'
                                                                    }
                                                                    break
                                                                }
                                                        }
                                                    }
                                                    break
                                                }
                                            case TAB:
                                            case SPACE:
                                                {
                                                    switch (tail) {
                                                        case NULL:
                                                        case OPENBRACES:
                                                        case CLOSEBRACES:
                                                        case SEMICOLON:
                                                        case COMMA:
                                                        case FORMFEED:
                                                        case TAB:
                                                        case SPACE:
                                                        case NEWLINE:
                                                        case CARRIAGE:
                                                            {
                                                                break
                                                            }
                                                        default:
                                                            {
                                                                // ignore in isolated contexts
                                                                if (context === 0) {
                                                                    format = 1
                                                                    char += '\0'
                                                                }
                                                            }
                                                    }
                                                }
                                        }
                                    }

                                    // concat buffer of characters
                                    chars += char

                                    // previous non-whitespace character code
                                    if (code !== SPACE && code !== TAB) {
                                        peak = code
                                    }
                                }
                            }
                    }

                    // tail character codes
                    trail = tail
                    tail = code

                    // visit every character
                    caret++
                }

                length = out.length

                // preserve empty selector
                if (preserve > 0) {
                    if (length === 0 && children.length === 0 && (current[0].length === 0) === false) {
                        if (id !== MEDIA || (current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0])) {
                            length = current.join(',').length + 2
                        }
                    }
                }

                if (length > 0) {
                    // cascade isolation mode?
                    selector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current

                    // execute plugins, block context
                    if (plugged > 0) {
                        result = proxy(BLCKS, out, selector, parent, line, column, length, id, depth, id)

                        if (result !== void 0 && (out = result).length === 0) {
                            return flat + out + children
                        }
                    }

                    out = selector.join(',') + '{' + out + '}'

                    if (prefix * pattern !== 0) {
                        if (prefix === 2 && !vendor(out, 2))
                            pattern = 0

                        switch (pattern) {
                            // ::read-only
                            case READONLY:
                                {
                                    out = out.replace(readonlyptn, ':' + moz + '$1') + out
                                    break
                                }
                                // ::placeholder
                            case PLACEHOLDER:
                                {
                                    out = (
                                        out.replace(plcholdrptn, '::' + webkit + 'input-$1') +
                                        out.replace(plcholdrptn, '::' + moz + '$1') +
                                        out.replace(plcholdrptn, ':' + ms + 'input-$1') + out
                                    )
                                    break
                                }
                        }

                        pattern = 0
                    }
                }

                return flat + out + children
            }

            /**
             * Select
             *
             * @param {Array<string>} parent
             * @param {string} current
             * @param {number} invert
             * @return {Array<string>}
             */
            function select(parent, current, invert) {
                var selectors = current.trim().split(selectorptn)
                var out = selectors

                var length = selectors.length
                var l = parent.length

                switch (l) {
                    // 0-1 parent selectors
                    case 0:
                    case 1:
                        {
                            for (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {
                                out[i] = scope(selector, out[i], invert, l).trim()
                            }
                            break
                        }
                        // >2 parent selectors, nested
                    default:
                        {
                            for (var i = 0, j = 0, out = []; i < length; ++i) {
                                for (var k = 0; k < l; ++k) {
                                    out[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim()
                                }
                            }
                        }
                }

                return out
            }

            /**
             * Scope
             *
             * @param {string} parent
             * @param {string} current
             * @param {number} invert
             * @param {number} level
             * @return {string}
             */
            function scope(parent, current, invert, level) {
                var selector = current
                var code = selector.charCodeAt(0)

                // trim leading whitespace
                if (code < 33) {
                    code = (selector = selector.trim()).charCodeAt(0)
                }

                switch (code) {
                    // &
                    case AND:
                        {
                            switch (cascade + level) {
                                case 0:
                                case 1:
                                    {
                                        if (parent.trim().length === 0) {
                                            break
                                        }
                                    }
                                default:
                                    {
                                        return selector.replace(andptn, '$1' + parent.trim())
                                    }
                            }
                            break
                        }
                        // :
                    case COLON:
                        {
                            switch (selector.charCodeAt(1)) {
                                // g in :global
                                case 103:
                                    {
                                        if (escape > 0 && cascade > 0) {
                                            return selector.replace(escapeptn, '$1').replace(andptn, '$1' + nscope)
                                        }
                                        break
                                    }
                                default:
                                    {
                                        // :hover
                                        return parent.trim() + selector.replace(andptn, '$1' + parent.trim())
                                    }
                            }
                        }
                    default:
                        {
                            // html &
                            if (invert * cascade > 0 && selector.indexOf('\f') > 0) {
                                return selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1') + parent.trim())
                            }
                        }
                }

                return parent + selector
            }

            /**
             * Property
             *
             * @param {string} input
             * @param {number} first
             * @param {number} second
             * @param {number} third
             * @return {string}
             */
            function property(input, first, second, third) {
                var index = 0
                var out = input + ';'
                var hash = (first * 2) + (second * 3) + (third * 4)
                var cache

                // animation: a, n, i characters
                if (hash === 944) {
                    return animation(out)
                } else if (prefix === 0 || (prefix === 2 && !vendor(out, 1))) {
                    return out
                }

                // vendor prefix
                switch (hash) {
                    // text-decoration/text-size-adjust/text-shadow/text-align/text-transform: t, e, x
                    case 1015:
                        {
                            // text-shadow/text-align/text-transform, a
                            return out.charCodeAt(10) === 97 ? webkit + out + out : out
                        }
                        // filter/fill f, i, l
                    case 951:
                        {
                            // filter, t
                            return out.charCodeAt(3) === 116 ? webkit + out + out : out
                        }
                        // color/column, c, o, l
                    case 963:
                        {
                            // column, n
                            return out.charCodeAt(5) === 110 ? webkit + out + out : out
                        }
                        // box-decoration-break, b, o, x
                    case 1009:
                        {
                            if (out.charCodeAt(4) !== 100) {
                                break
                            }
                        }
                        // mask, m, a, s
                        // clip-path, c, l, i
                    case 969:
                    case 942:
                        {
                            return webkit + out + out
                        }
                        // appearance: a, p, p
                    case 978:
                        {
                            return webkit + out + moz + out + out
                        }
                        // hyphens: h, y, p
                        // user-select: u, s, e
                    case 1019:
                    case 983:
                        {
                            return webkit + out + moz + out + ms + out + out
                        }
                        // background/backface-visibility, b, a, c
                    case 883:
                        {
                            // backface-visibility, -
                            if (out.charCodeAt(8) === DASH) {
                                return webkit + out + out
                            }

                            // image-set(...)
                            if (out.indexOf('image-set(', 11) > 0) {
                                return out.replace(imgsrcptn, '$1' + webkit + '$2') + out
                            }

                            return out
                        }
                        // flex: f, l, e
                    case 932:
                        {
                            if (out.charCodeAt(4) === DASH) {
                                switch (out.charCodeAt(5)) {
                                    // flex-grow, g
                                    case 103:
                                        {
                                            return webkit + 'box-' + out.replace('-grow', '') + webkit + out + ms + out.replace('grow', 'positive') + out
                                        }
                                        // flex-shrink, s
                                    case 115:
                                        {
                                            return webkit + out + ms + out.replace('shrink', 'negative') + out
                                        }
                                        // flex-basis, b
                                    case 98:
                                        {
                                            return webkit + out + ms + out.replace('basis', 'preferred-size') + out
                                        }
                                }
                            }

                            return webkit + out + ms + out + out
                        }
                        // order: o, r, d
                    case 964:
                        {
                            return webkit + out + ms + 'flex' + '-' + out + out
                        }
                        // justify-items/justify-content, j, u, s
                    case 1023:
                        {
                            // justify-content, c
                            if (out.charCodeAt(8) !== 99) {
                                break
                            }

                            cache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')
                            return webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out
                        }
                        // cursor, c, u, r
                    case 1005:
                        {
                            return cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out
                        }
                        // writing-mode, w, r, i
                    case 1000:
                        {
                            cache = out.substring(13).trim()
                            index = cache.indexOf('-') + 1

                            switch (cache.charCodeAt(0) + cache.charCodeAt(index)) {
                                // vertical-lr
                                case 226:
                                    {
                                        cache = out.replace(writingptn, 'tb')
                                        break
                                    }
                                    // vertical-rl
                                case 232:
                                    {
                                        cache = out.replace(writingptn, 'tb-rl')
                                        break
                                    }
                                    // horizontal-tb
                                case 220:
                                    {
                                        cache = out.replace(writingptn, 'lr')
                                        break
                                    }
                                default:
                                    {
                                        return out
                                    }
                            }

                            return webkit + out + ms + cache + out
                        }
                        // position: sticky
                    case 1017:
                        {
                            if (out.indexOf('sticky', 9) === -1) {
                                return out
                            }
                        }
                        // display(flex/inline-flex/inline-box): d, i, s
                    case 975:
                        {
                            index = (out = input).length - 10
                            cache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim()

                            switch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7) | 0)) {
                                // inline-
                                case 203:
                                    {
                                        // inline-box
                                        if (cache.charCodeAt(8) < 111) {
                                            break
                                        }
                                    }
                                    // inline-box/sticky
                                case 115:
                                    {
                                        out = out.replace(cache, webkit + cache) + ';' + out
                                        break
                                    }
                                    // inline-flex
                                    // flex
                                case 207:
                                case 102:
                                    {
                                        out = (
                                            out.replace(cache, webkit + (hash > 102 ? 'inline-' : '') + 'box') + ';' +
                                            out.replace(cache, webkit + cache) + ';' +
                                            out.replace(cache, ms + cache + 'box') + ';' +
                                            out
                                        )
                                    }
                            }

                            return out + ';'
                        }
                        // align-items, align-center, align-self: a, l, i, -
                    case 938:
                        {
                            if (out.charCodeAt(5) === DASH) {
                                switch (out.charCodeAt(6)) {
                                    // align-items, i
                                    case 105:
                                        {
                                            cache = out.replace('-items', '')
                                            return webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out
                                        }
                                        // align-self, s
                                    case 115:
                                        {
                                            return webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out
                                        }
                                        // align-content
                                    default:
                                        {
                                            return webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '').replace(selfptn, '') + out
                                        }
                                }
                            }
                            break
                        }
                        // min/max
                    case 973:
                    case 989:
                        {
                            // min-/max- height/width/block-size/inline-size
                            if (out.charCodeAt(3) !== DASH || out.charCodeAt(4) === 122) {
                                break
                            }
                        }
                        // height/width: min-content / width: max-content
                    case 931:
                    case 953:
                        {
                            if (dimensionptn.test(input) === true) {
                                // stretch
                                if ((cache = input.substring(input.indexOf(':') + 1)).charCodeAt(0) === 115)
                                    return property(input.replace('stretch', 'fill-available'), first, second, third).replace(':fill-available', ':stretch')
                                else
                                    return out.replace(cache, webkit + cache) + out.replace(cache, moz + cache.replace('fill-', '')) + out
                            }
                            break
                        }
                        // transform, transition: t, r, a
                    case 962:
                        {
                            out = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out

                            // transitions
                            if (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {
                                return out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out
                            }

                            break
                        }
                }

                return out
            }

            /**
             * Vendor
             *
             * @param {string} content
             * @param {number} context
             * @return {boolean}
             */
            function vendor(content, context) {
                var index = content.indexOf(context === 1 ? ':' : '{')
                var key = content.substring(0, context !== 3 ? index : 10)
                var value = content.substring(index + 1, content.length - 1)

                return should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context)
            }

            /**
             * Supports
             *
             * @param {string} match
             * @param {string} group
             * @return {string}
             */
            function supports(match, group) {
                var out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2))

                return out !== group + ';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '(' + group + ')'
            }

            /**
             * Animation
             *
             * @param {string} input
             * @return {string}
             */
            function animation(input) {
                var length = input.length
                var index = input.indexOf(':', 9) + 1
                var declare = input.substring(0, index).trim()
                var out = input.substring(index, length - 1).trim()

                switch (input.charCodeAt(9) * keyed) {
                    case 0:
                        {
                            break
                        }
                        // animation-*, -
                    case DASH:
                        {
                            // animation-name, n
                            if (input.charCodeAt(10) !== 110) {
                                break
                            }
                        }
                        // animation/animation-name
                    default:
                        {
                            // split in case of multiple animations
                            var list = out.split((out = '', animationptn))

                            for (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {
                                var value = list[i]
                                var items = value.split(propertiesptn)

                                while (value = items[index]) {
                                    var peak = value.charCodeAt(0)

                                    if (keyed === 1 && (
                                            // letters
                                            (peak > AT && peak < 90) || (peak > 96 && peak < 123) || peak === UNDERSCORE ||
                                            // dash but not in sequence i.e --
                                            (peak === DASH && value.charCodeAt(1) !== DASH)
                                        )) {
                                        // not a number/function
                                        switch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {
                                            case 1:
                                                {
                                                    switch (value) {
                                                        // not a valid reserved keyword
                                                        case 'infinite':
                                                        case 'alternate':
                                                        case 'backwards':
                                                        case 'running':
                                                        case 'normal':
                                                        case 'forwards':
                                                        case 'both':
                                                        case 'none':
                                                        case 'linear':
                                                        case 'ease':
                                                        case 'ease-in':
                                                        case 'ease-out':
                                                        case 'ease-in-out':
                                                        case 'paused':
                                                        case 'reverse':
                                                        case 'alternate-reverse':
                                                        case 'inherit':
                                                        case 'initial':
                                                        case 'unset':
                                                        case 'step-start':
                                                        case 'step-end':
                                                            {
                                                                break
                                                            }
                                                        default:
                                                            {
                                                                value += key
                                                            }
                                                    }
                                                }
                                        }
                                    }

                                    items[index++] = value
                                }

                                out += (i === 0 ? '' : ',') + items.join(' ')
                            }
                        }
                }

                out = declare + out + ';'

                if (prefix === 1 || (prefix === 2 && vendor(out, 1)))
                    return webkit + out + out

                return out
            }

            /**
             * Isolate
             *
             * @param {Array<string>} current
             */
            function isolate(current) {
                for (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {
                    // split individual elements in a selector i.e h1 h2 === [h1, h2]
                    var elements = current[i].split(elementptn)
                    var out = ''

                    for (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {
                        // empty element
                        if ((size = (element = elements[j]).length) === 0 && l > 1) {
                            continue
                        }

                        tail = out.charCodeAt(out.length - 1)
                        code = element.charCodeAt(0)
                        padding = ''

                        if (j !== 0) {
                            // determine if we need padding
                            switch (tail) {
                                case STAR:
                                case TILDE:
                                case GREATERTHAN:
                                case PLUS:
                                case SPACE:
                                case OPENPARENTHESES:
                                    {
                                        break
                                    }
                                default:
                                    {
                                        padding = ' '
                                    }
                            }
                        }

                        switch (code) {
                            case AND:
                                {
                                    element = padding + nscopealt
                                }
                            case TILDE:
                            case GREATERTHAN:
                            case PLUS:
                            case SPACE:
                            case CLOSEPARENTHESES:
                            case OPENPARENTHESES:
                                {
                                    break
                                }
                            case OPENBRACKET:
                                {
                                    element = padding + element + nscopealt
                                    break
                                }
                            case COLON:
                                {
                                    switch (element.charCodeAt(1) * 2 + element.charCodeAt(2) * 3) {
                                        // :global
                                        case 530:
                                            {
                                                if (escape > 0) {
                                                    element = padding + element.substring(8, size - 1)
                                                    break
                                                }
                                            }
                                            // :hover, :nth-child(), ...
                                        default:
                                            {
                                                if (j < 1 || elements[j - 1].length < 1) {
                                                    element = padding + nscopealt + element
                                                }
                                            }
                                    }
                                    break
                                }
                            case COMMA:
                                {
                                    padding = ''
                                }
                            default:
                                {
                                    if (size > 1 && element.indexOf(':') > 0) {
                                        element = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2')
                                    } else {
                                        element = padding + element + nscopealt
                                    }
                                }
                        }

                        out += element
                    }

                    selector[i] = out.replace(formatptn, '').trim()
                }

                return selector
            }

            /**
             * Proxy
             *
             * @param {number} context
             * @param {string} content
             * @param {Array<string>} selectors
             * @param {Array<string>} parents
             * @param {number} line
             * @param {number} column
             * @param {number} length
             * @param {number} id
             * @param {number} depth
             * @param {number} at
             * @return {(string|void|*)}
             */
            function proxy(context, content, selectors, parents, line, column, length, id, depth, at) {
                for (var i = 0, out = content, next; i < plugged; ++i) {
                    switch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth, at)) {
                        case void 0:
                        case false:
                        case true:
                        case null:
                            {
                                break
                            }
                        default:
                            {
                                out = next
                            }
                    }
                }

                switch (out) {
                    case void 0:
                    case false:
                    case true:
                    case null:
                    case content:
                        {
                            break
                        }
                    default:
                        {
                            return out
                        }
                }
            }

            /**
             * @param {number} code
             * @param {number} index
             * @param {number} length
             * @param {string} body
             * @return {number}
             */
            function delimited(code, index, length, body) {
                for (var i = index + 1; i < length; ++i) {
                    switch (body.charCodeAt(i)) {
                        // /*
                        case FOWARDSLASH:
                            {
                                if (code === STAR) {
                                    if (body.charCodeAt(i - 1) === STAR && index + 2 !== i) {
                                        return i + 1
                                    }
                                }
                                break
                            }
                            // //
                        case NEWLINE:
                            {
                                if (code === FOWARDSLASH) {
                                    return i + 1
                                }
                            }
                    }
                }

                return i
            }

            /**
             * @param {number} type
             * @param {number} index
             * @param {number} length
             * @param {number} find
             * @param {string} body
             * @return {number}
             */
            function match(type, index, length, body) {
                for (var i = index + 1; i < length; ++i) {
                    switch (body.charCodeAt(i)) {
                        case type:
                            {
                                return i
                            }
                    }
                }

                return i
            }

            /**
             * Minify
             *
             * @param {(string|*)} output
             * @return {string}
             */
            function minify(output) {
                return output
                    .replace(formatptn, '')
                    .replace(beforeptn, '')
                    .replace(afterptn, '$1')
                    .replace(tailptn, '$1')
                    .replace(whiteptn, ' ')
            }

            /**
             * Use
             *
             * @param {(Array<function(...?)>|function(...?)|number|void)?} plugin
             */
            function use(plugin) {
                switch (plugin) {
                    case void 0:
                    case null:
                        {
                            plugged = plugins.length = 0
                            break
                        }
                    default:
                        {
                            switch (plugin.constructor) {
                                case Array:
                                    {
                                        for (var i = 0, length = plugin.length; i < length; ++i) {
                                            use(plugin[i])
                                        }
                                        break
                                    }
                                case Function:
                                    {
                                        plugins[plugged++] = plugin
                                        break
                                    }
                                case Boolean:
                                    {
                                        unkwn = !!plugin | 0
                                    }
                            }
                        }
                }

                return use
            }

            /**
             * Set
             *
             * @param {*} options
             */
            function set(options) {
                for (var name in options) {
                    var value = options[name]
                    switch (name) {
                        case 'keyframe':
                            keyed = value | 0;
                            break
                        case 'global':
                            escape = value | 0;
                            break
                        case 'cascade':
                            cascade = value | 0;
                            break
                        case 'compress':
                            compress = value | 0;
                            break
                        case 'semicolon':
                            semicolon = value | 0;
                            break
                        case 'preserve':
                            preserve = value | 0;
                            break
                        case 'prefix':
                            should = null

                            if (!value) {
                                prefix = 0
                            } else if (typeof value !== 'function') {
                                prefix = 1
                            } else {
                                prefix = 2
                                should = value
                            }
                    }
                }

                return set
            }

            /**
             * Stylis
             *
             * @param {string} selector
             * @param {string} input
             * @return {*}
             */
            function stylis(selector, input) {
                if (this !== void 0 && this.constructor === stylis) {
                    return factory(selector)
                }

                // setup
                var ns = selector
                var code = ns.charCodeAt(0)

                // trim leading whitespace
                if (code < 33) {
                    code = (ns = ns.trim()).charCodeAt(0)
                }

                // keyframe/animation namespace
                if (keyed > 0) {
                    key = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-')
                }

                // reset, used to assert if a plugin is moneky-patching the return value
                code = 1

                // cascade/isolate
                if (cascade === 1) {
                    nscope = ns
                } else {
                    nscopealt = ns
                }

                var selectors = [nscope]
                var result

                // execute plugins, pre-process context
                if (plugged > 0) {
                    result = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0, 0)

                    if (result !== void 0 && typeof result === 'string') {
                        input = result
                    }
                }

                // build
                var output = compile(array, selectors, input, 0, 0)

                // execute plugins, post-process context
                if (plugged > 0) {
                    result = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0, 0)

                    // bypass minification
                    if (result !== void 0 && typeof(output = result) !== 'string') {
                        code = 0
                    }
                }

                // reset
                key = ''
                nscope = ''
                nscopealt = ''
                pattern = 0
                line = 1
                column = 1

                return compress * code === 0 ? output : minify(output)
            }

            stylis['use'] = use
            stylis['set'] = set

            if(options !== void 0) {
                set(options)
            }

            return stylis
        }));


        /***/
    }),
    /* 102 */
    /***/
    (function(module, exports, __webpack_require__) {

        (function(factory) {
            true ? (module['exports'] = factory()) :
                typeof define === 'function' && define['amd'] ? define(factory()) :
                (window['stylisRuleSheet'] = factory())
        }(function() {

            'use strict'

            return function(insertRule) {
                var delimiter = '/*|*/'
                var needle = delimiter + '}'

                function toSheet(block) {
                    if (block)
                        try {
                            insertRule(block + '}')
                        } catch (e) {}
                }

                return function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {
                    switch (context) {
                        // property
                        case 1:
                            // @import
                            if (depth === 0 && content.charCodeAt(0) === 64)
                                return insertRule(content + ';'), ''
                            break
                            // selector
                        case 2:
                            if (ns === 0)
                                return content + delimiter
                            break
                            // at-rule
                        case 3:
                            switch (ns) {
                                // @font-face, @page
                                case 102:
                                case 112:
                                    return insertRule(selectors[0] + content), ''
                                default:
                                    return content + (at === 0 ? delimiter : '')
                            }
                        case -2:
                            content.split(needle).forEach(toSheet)
                    }
                }
            }
        }))


        /***/
    }),
    /* 103 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */



        var ReactPropTypesSecret = __webpack_require__(104);

        function emptyFunction() {}

        module.exports = function() {
            function shim(props, propName, componentName, location, propFullName, secret) {
                if (secret === ReactPropTypesSecret) {
                    // It is still safe when called from React.
                    return;
                }
                var err = new Error(
                    'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
                    'Use PropTypes.checkPropTypes() to call them. ' +
                    'Read more at http://fb.me/use-check-prop-types'
                );
                err.name = 'Invariant Violation';
                throw err;
            };
            shim.isRequired = shim;

            function getShim() {
                return shim;
            };
            // Important!
            // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
            var ReactPropTypes = {
                array: shim,
                bool: shim,
                func: shim,
                number: shim,
                object: shim,
                string: shim,
                symbol: shim,

                any: shim,
                arrayOf: getShim,
                element: shim,
                instanceOf: getShim,
                node: shim,
                objectOf: getShim,
                oneOf: getShim,
                oneOfType: getShim,
                shape: getShim,
                exact: getShim
            };

            ReactPropTypes.checkPropTypes = emptyFunction;
            ReactPropTypes.PropTypes = ReactPropTypes;

            return ReactPropTypes;
        };


        /***/
    }),
    /* 104 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */



        var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

        module.exports = ReactPropTypesSecret;


        /***/
    }),
    /* 105 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        /**
         * Copyright 2015, Yahoo! Inc.
         * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
         */
        var REACT_STATICS = {
            childContextTypes: true,
            contextTypes: true,
            defaultProps: true,
            displayName: true,
            getDefaultProps: true,
            getDerivedStateFromProps: true,
            mixins: true,
            propTypes: true,
            type: true
        };

        var KNOWN_STATICS = {
            name: true,
            length: true,
            prototype: true,
            caller: true,
            callee: true,
            arguments: true,
            arity: true
        };

        var defineProperty = Object.defineProperty;
        var getOwnPropertyNames = Object.getOwnPropertyNames;
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        var getPrototypeOf = Object.getPrototypeOf;
        var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

        function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
            if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

                if (objectPrototype) {
                    var inheritedComponent = getPrototypeOf(sourceComponent);
                    if (inheritedComponent && inheritedComponent !== objectPrototype) {
                        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                    }
                }

                var keys = getOwnPropertyNames(sourceComponent);

                if (getOwnPropertySymbols) {
                    keys = keys.concat(getOwnPropertySymbols(sourceComponent));
                }

                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                        try { // Avoid failures from read-only properties
                            defineProperty(targetComponent, key, descriptor);
                        } catch (e) {}
                    }
                }

                return targetComponent;
            }

            return targetComponent;
        }

        module.exports = hoistNonReactStatics;


        /***/
    }),
    /* 106 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        if (true) {
            module.exports = __webpack_require__(107);
        } else {
            module.exports = require('./cjs/react-is.development.js');
        }


        /***/
    }),
    /* 107 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /** @license React v16.4.1
         * react-is.production.min.js
         *
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var b = "function" === typeof Symbol && Symbol.for,
            c = b ? Symbol.for("react.element") : 60103,
            d = b ? Symbol.for("react.portal") : 60106,
            e = b ? Symbol.for("react.fragment") : 60107,
            f = b ? Symbol.for("react.strict_mode") : 60108,
            g = b ? Symbol.for("react.profiler") : 60114,
            h = b ? Symbol.for("react.provider") : 60109,
            k = b ? Symbol.for("react.context") : 60110,
            l = b ? Symbol.for("react.async_mode") : 60111,
            m = b ? Symbol.for("react.forward_ref") : 60112,
            n = b ? Symbol.for("react.timeout") : 60113;

        function q(a) {
            if ("object" === typeof a && null !== a) {
                var p = a.$$typeof;
                switch (p) {
                    case c:
                        switch (a = a.type, a) {
                            case l:
                            case e:
                            case g:
                            case f:
                                return a;
                            default:
                                switch (a = a && a.$$typeof, a) {
                                    case k:
                                    case m:
                                    case h:
                                        return a;
                                    default:
                                        return p
                                }
                        }
                    case d:
                        return p
                }
            }
        }
        exports.typeOf = q;
        exports.AsyncMode = l;
        exports.ContextConsumer = k;
        exports.ContextProvider = h;
        exports.Element = c;
        exports.ForwardRef = m;
        exports.Fragment = e;
        exports.Profiler = g;
        exports.Portal = d;
        exports.StrictMode = f;
        exports.isValidElementType = function(a) {
            return "string" === typeof a || "function" === typeof a || a === e || a === l || a === g || a === f || a === n || "object" === typeof a && null !== a && (a.$$typeof === h || a.$$typeof === k || a.$$typeof === m)
        };
        exports.isAsyncMode = function(a) {
            return q(a) === l
        };
        exports.isContextConsumer = function(a) {
            return q(a) === k
        };
        exports.isContextProvider = function(a) {
            return q(a) === h
        };
        exports.isElement = function(a) {
            return "object" === typeof a && null !== a && a.$$typeof === c
        };
        exports.isForwardRef = function(a) {
            return q(a) === m
        };
        exports.isFragment = function(a) {
            return q(a) === e
        };
        exports.isProfiler = function(a) {
            return q(a) === g
        };
        exports.isPortal = function(a) {
            return q(a) === d
        };
        exports.isStrictMode = function(a) {
            return q(a) === f
        };


        /***/
    }),
    /* 108 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (immutable) */
        __webpack_exports__["a"] = register;
        /* unused harmony export unregister */
        // This optional code is used to register a service worker.
        // register() is not called by default.
        // This lets the app load faster on subsequent visits in production, and gives
        // it offline capabilities. However, it also means that developers (and users)
        // will only see deployed updates on subsequent visits to a page, after all the
        // existing tabs open on the page have been closed, since previously cached
        // resources are updated in the background.
        // To learn more about the benefits of this model and instructions on how to
        // opt-in, read http://bit.ly/CRA-PWA
        var isLocalhost = Boolean(window.location.hostname === 'localhost' || // [::1] is the IPv6 localhost address.
            window.location.hostname === '[::1]' || // 127.0.0.1/8 is considered localhost for IPv4.
            window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));

        function register(config) {
            if ("production" === 'production' && 'serviceWorker' in navigator) { // The URL constructor is available in all browsers that support SW.
                var publicUrl = new URL("", window.location);
                if (publicUrl.origin !== window.location.origin) { // Our service worker won't work if PUBLIC_URL is on a different origin
                    // from what our page is served on. This might happen if a CDN is used to
                    // serve assets; see https://github.com/facebook/create-react-app/issues/2374
                    return;
                }
                window.addEventListener('load', function() {
                    var swUrl = "" + '/service-worker.js';
                    if (isLocalhost) { // This is running on localhost. Let's check if a service worker still exists or not.
                        checkValidServiceWorker(swUrl, config); // Add some additional logging to localhost, pointing developers to the
                        // service worker/PWA documentation.
                        navigator.serviceWorker.ready.then(function() {
                            console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit http://bit.ly/CRA-PWA');
                        });
                    } else { // Is not localhost. Just register service worker
                        registerValidSW(swUrl, config);
                    }
                });
            }
        }

        function registerValidSW(swUrl, config) {
            navigator.serviceWorker.register(swUrl).then(function(registration) {
                registration.onupdatefound = function() {
                    var installingWorker = registration.installing;
                    installingWorker.onstatechange = function() {
                        if (installingWorker.state === 'installed') {
                            if (navigator.serviceWorker.controller) { // At this point, the updated precached content has been fetched,
                                // but the previous service worker will still serve the older
                                // content until all client tabs are closed.
                                console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'); // Execute callback
                                if (config && config.onUpdate) {
                                    config.onUpdate(registration);
                                }
                            } else { // At this point, everything has been precached.
                                // It's the perfect time to display a
                                // "Content is cached for offline use." message.
                                console.log('Content is cached for offline use.'); // Execute callback
                                if (config && config.onSuccess) {
                                    config.onSuccess(registration);
                                }
                            }
                        }
                    };
                };
            }).catch(function(error) {
                console.error('Error during service worker registration:', error);
            });
        }

        function checkValidServiceWorker(swUrl, config) { // Check if the service worker can be found. If it can't reload the page.
            fetch(swUrl).then(function(response) { // Ensure service worker exists, and that we really are getting a JS file.
                if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) { // No service worker found. Probably a different app. Reload the page.
                    navigator.serviceWorker.ready.then(function(registration) {
                        registration.unregister().then(function() {
                            window.location.reload();
                        });
                    });
                } else { // Service worker found. Proceed as normal.
                    registerValidSW(swUrl, config);
                }
            }).catch(function() {
                console.log('No internet connection found. App is running in offline mode.');
            });
        }

        function unregister() {
            if ('serviceWorker' in navigator) {
                navigator.serviceWorker.ready.then(function(registration) {
                    registration.unregister();
                });
            }
        }

        /***/
    }),
    /* 109 */
    /***/
    (function(module, exports) {

        // removed by extract-text-webpack-plugin

        /***/
    }),
    /* 110 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return MenuBar;
        });
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1_styled_components__ = __webpack_require__(12);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2__imgs_favicon_png__ = __webpack_require__(111);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2__imgs_favicon_png___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__imgs_favicon_png__);
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();
        var _templateObject = _taggedTemplateLiteral(['\n    background-color: ', ';\n    padding: 10px;\n\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 900px) {\n        flex-direction: row;\n    }\n'], ['\n    background-color: ', ';\n    padding: 10px;\n\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 900px) {\n        flex-direction: row;\n    }\n']),
            _templateObject2 = _taggedTemplateLiteral(['\n    display: flex;\n\n    flex-grow: 1;\n'], ['\n    display: flex;\n\n    flex-grow: 1;\n']),
            _templateObject3 = _taggedTemplateLiteral(['\n    height: 34px;\n    margin-right: 10px;\n\n    @media (max-width: 360px) {\n        height: 28px;\n    }\n    @media (min-width: 390px) {\n        height: 40px;\n    }\n'], ['\n    height: 34px;\n    margin-right: 10px;\n\n    @media (max-width: 360px) {\n        height: 28px;\n    }\n    @media (min-width: 390px) {\n        height: 40px;\n    }\n']),
            _templateObject4 = _taggedTemplateLiteral(['\n    font-size: 1.8rem;\n    color: ', ';\n    margin: 0px;\n\n    @media (max-width: 360px) {\n        font-size: 1.5rem;\n    }\n    @media (min-width: 390px) {\n        font-size: 2rem;\n    }\n'], ['\n    font-size: 1.8rem;\n    color: ', ';\n    margin: 0px;\n\n    @media (max-width: 360px) {\n        font-size: 1.5rem;\n    }\n    @media (min-width: 390px) {\n        font-size: 2rem;\n    }\n']),
            _templateObject5 = _taggedTemplateLiteral(['\n    display: flex;\n    background-color: ', ';\n    z-index: 1;\n\n    flex-direction: column;\n    opacity: ', ';\n    pointer-events: ', ';\n    position: absolute;\n    left: 0px;\n    width: 100%;\n    top: 53px;\n\n    padding-bottom: 10px;\n    padding-top: 10px;\n\n    @media (max-width: 360px) {\n        top: 47px;\n    }\n    @media (min-width: 900px) {\n        flex-direction: row;\n        opacity: 1;\n        pointer-events: auto;\n        position: static;\n        width: auto;\n\n        padding-top: 0px;\n        padding-bottom: 0px;\n    }\n'], ['\n    display: flex;\n    background-color: ', ';\n    z-index: 1;\n\n    flex-direction: column;\n    opacity: ', ';\n    pointer-events: ', ';\n    position: absolute;\n    left: 0px;\n    width: 100%;\n    top: 53px;\n\n    padding-bottom: 10px;\n    padding-top: 10px;\n\n    @media (max-width: 360px) {\n        top: 47px;\n    }\n    @media (min-width: 900px) {\n        flex-direction: row;\n        opacity: 1;\n        pointer-events: auto;\n        position: static;\n        width: auto;\n\n        padding-top: 0px;\n        padding-bottom: 0px;\n    }\n']),
            _templateObject6 = _taggedTemplateLiteral(['\n    border: none;\n    background-color: transparent;\n    color: ', ';\n    font-size: 1.3rem;\n\n    @media (min-width: 900px) {\n        margin-left: 20px;\n    }\n'], ['\n    border: none;\n    background-color: transparent;\n    color: ', ';\n    font-size: 1.3rem;\n\n    @media (min-width: 900px) {\n        margin-left: 20px;\n    }\n']);

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        function _taggedTemplateLiteral(strings, raw) {
            return Object.freeze(Object.defineProperties(strings, {
                raw: {
                    value: Object.freeze(raw)
                }
            }));
        }
        var MenuBarStyled = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject, function(props) {
            return props.theme.main;
        });
        var BarStart = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject2);
        var Icon = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].img.attrs({
            src: __WEBPACK_IMPORTED_MODULE_2__imgs_favicon_png___default.a
        })(_templateObject3);
        var H1 = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].h1(_templateObject4, function(props) {
            return props.theme.background;
        });
        var NavHolder = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject5, function(props) {
            return props.theme.main;
        }, function(props) {
            return props.showing ? 1 : 0;
        }, function(props) {
            return props.showing ? 'auto' : 'none';
        });
        var NavButton = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].button(_templateObject6, function(props) {
            return props.theme.background;
        });
        var MenuBar = function(_React$Component) {
            _inherits(MenuBar, _React$Component);

            function MenuBar(props) {
                _classCallCheck(this, MenuBar);
                var _this = _possibleConstructorReturn(this, (MenuBar.__proto__ || Object.getPrototypeOf(MenuBar)).call(this, props));
                _this.state = {
                    showing: false
                };
                return _this;
            }
            _createClass(MenuBar, [{
                key: 'toggleShowing',
                value: function toggleShowing() {
                    this.setState(Object.assign({}, this.state, {
                        showing: !this.state.showing
                    }));
                }
            }, {
                key: 'changeScreen',
                value: function changeScreen(screen) {
                    this.setState(Object.assign({}, this.state, {
                        showing: false
                    }));
                    this.props.changeScreen(screen);
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this2 = this;
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(MenuBarStyled, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(BarStart, {
                        onClick: function onClick() {
                            _this2.toggleShowing();
                        }
                    }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Icon, null), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(H1, null, 'Girraween Countdown')), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(NavHolder, {
                        showing: this.state.showing
                    }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(NavButton, {
                        onClick: function onClick() {
                            _this2.changeScreen("home");
                        }
                    }, 'Home'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(NavButton, {
                        onClick: function onClick() {
                            _this2.changeScreen("classEdit");
                        }
                    }, 'Edit Classes'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(NavButton, {
                        onClick: function onClick() {
                            _this2.changeScreen("about");
                        }
                    }, 'About'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(NavButton, {
                        onClick: function onClick() {
                            _this2.changeScreen("settings");
                        }
                    }, 'Settings')));
                }
            }]);
            return MenuBar;
        }(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

        /***/
    }),
    /* 111 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "static/media/favicon.bc428344.png";

        /***/
    }),
    /* 112 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "c", function() {
            return HomeScreen;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return ClassScreen;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return AboutScreen;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "d", function() {
            return SettingsScreen;
        });
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1_styled_components__ = __webpack_require__(12);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2_styled_is__ = __webpack_require__(113);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_3_react_color__ = __webpack_require__(114);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_3_react_color___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_color__);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_4__calculations__ = __webpack_require__(78);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_5__fileParse__ = __webpack_require__(270);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_6__utils__ = __webpack_require__(79);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_7__themes__ = __webpack_require__(80);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_8__misc_belltimes_pdf__ = __webpack_require__(272);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_8__misc_belltimes_pdf___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__misc_belltimes_pdf__);
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();
        var _templateObject = _taggedTemplateLiteral(['\n    padding: 30px;\n'], ['\n    padding: 30px;\n']),
            _templateObject2 = _taggedTemplateLiteral(['\n    font-size: 2rem;\n    margin: 0px;\n    margin-left: 20px;\n\n    color: ', ';\n'], ['\n    font-size: 2rem;\n    margin: 0px;\n    margin-left: 20px;\n\n    color: ', ';\n']),
            _templateObject3 = _taggedTemplateLiteral(['\n    margin-left: 0px;\n    margin-top: 20px;\n    font-size: 1.4rem;\n'], ['\n    margin-left: 0px;\n    margin-top: 20px;\n    font-size: 1.4rem;\n']),
            _templateObject4 = _taggedTemplateLiteral(['\n    font-size: 1.2rem;\n\n    color: ', ';\n'], ['\n    font-size: 1.2rem;\n\n    color: ', ';\n']),
            _templateObject5 = _taggedTemplateLiteral(['\n    margin-left: 0px;\n    font-size: 2rem;\n    text-align: center;\n\n    margin-bottom: 20px;\n\n    @media (min-width: 900px){\n        font-size: 2.6rem;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%,-50%);\n\n        margin-bottom: 0px;\n\n        ', '\n    }\n'], ['\n    margin-left: 0px;\n    font-size: 2rem;\n    text-align: center;\n\n    margin-bottom: 20px;\n\n    @media (min-width: 900px){\n        font-size: 2.6rem;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%,-50%);\n\n        margin-bottom: 0px;\n\n        ', '\n    }\n']),
            _templateObject6 = _taggedTemplateLiteral(['\n    border: 3px solid ', ';\n    background-color: ', ';\n    color: ', ';\n\n    border-radius: 5px;\n    font-size: 1.5rem;\n    padding: 10px;\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-left: 10px;\n'], ['\n    border: 3px solid ', ';\n    background-color: ', ';\n    color: ', ';\n\n    border-radius: 5px;\n    font-size: 1.5rem;\n    padding: 10px;\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-left: 10px;\n']),
            _templateObject7 = _taggedTemplateLiteral(['\n    padding: 10px;\n    font-size: 1.1rem;\n    border-radius: 5px;\n\n    background-color: ', ';\n    border: 2px solid ', ';\n    color: ', ';\n\n    margin-top: 20px;\n\n    @media (min-width: 900px){\n        margin: 0px;\n    }\n'], ['\n    padding: 10px;\n    font-size: 1.1rem;\n    border-radius: 5px;\n\n    background-color: ', ';\n    border: 2px solid ', ';\n    color: ', ';\n\n    margin-top: 20px;\n\n    @media (min-width: 900px){\n        margin: 0px;\n    }\n']),
            _templateObject8 = _taggedTemplateLiteral(['\n    background-color: ', ';\n    color: ', ';\n'], ['\n    background-color: ', ';\n    color: ', ';\n']),
            _templateObject9 = _taggedTemplateLiteral(['\n'], ['\n']),
            _templateObject10 = _taggedTemplateLiteral(['\n    @media (min-width: 900px){\n        position: absolute;\n        bottom: 0px;\n    }\n'], ['\n    @media (min-width: 900px){\n        position: absolute;\n        bottom: 0px;\n    }\n']),
            _templateObject11 = _taggedTemplateLiteral(['\n    background-color: transparent;\n    color: ', ';\n    border: 2px solid ', ';\n    font-size: 0.9rem;\n    padding: 0.5rem;\n    margin-left: 3rem;\n'], ['\n    background-color: transparent;\n    color: ', ';\n    border: 2px solid ', ';\n    font-size: 0.9rem;\n    padding: 0.5rem;\n    margin-left: 3rem;\n']),
            _templateObject12 = _taggedTemplateLiteral(['\n    position: absolute;\n    z-index: -999;\n    opacity: 0;\n    width: 0.1px;\n    height: 0.1px;\n    left: -1px;\n    top: -1px;\n'], ['\n    position: absolute;\n    z-index: -999;\n    opacity: 0;\n    width: 0.1px;\n    height: 0.1px;\n    left: -1px;\n    top: -1px;\n']),
            _templateObject13 = _taggedTemplateLiteral(['\n    background-color: ', ';\n    border: 3px solid ', ';\n    color: ', ';\n    \n    border-radius: 5px;\n    font-size: 1.5rem;\n    padding: 10px;\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-left: 10px;\n'], ['\n    background-color: ', ';\n    border: 3px solid ', ';\n    color: ', ';\n    \n    border-radius: 5px;\n    font-size: 1.5rem;\n    padding: 10px;\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-left: 10px;\n']),
            _templateObject14 = _taggedTemplateLiteral(['\n    color: ', ';\n'], ['\n    color: ', ';\n']),
            _templateObject15 = _taggedTemplateLiteral(['\n    overflow-x: scroll;\n    @media (min-width: 900px){\n        overflow-x: scroll;\n    }\n'], ['\n    overflow-x: scroll;\n    @media (min-width: 900px){\n        overflow-x: scroll;\n    }\n']),
            _templateObject16 = _taggedTemplateLiteral(['\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 10;\n'], ['\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 10;\n']),
            _templateObject17 = _taggedTemplateLiteral(['\n    position: absolute;\n\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n\n    background-color: ', ';\n\n    border-radius: 2rem;\n    padding: 1rem;\n    padding-left: 2rem;\n    padding-right: 2rem;\n    \n    z-index: 11;\n\n    display: flex;\n    flex-direction: column;\n'], ['\n    position: absolute;\n\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n\n    background-color: ', ';\n\n    border-radius: 2rem;\n    padding: 1rem;\n    padding-left: 2rem;\n    padding-right: 2rem;\n    \n    z-index: 11;\n\n    display: flex;\n    flex-direction: column;\n']),
            _templateObject18 = _taggedTemplateLiteral(['\n    color: ', ';\n\n    ', '\n'], ['\n    color: ', ';\n\n    ', '\n']),
            _templateObject19 = _taggedTemplateLiteral(['\n        font-size: 1rem;\n        margin: 0px;\n    '], ['\n        font-size: 1rem;\n        margin: 0px;\n    ']),
            _templateObject20 = _taggedTemplateLiteral(['\n    background-color: ', ';\n    margin-left: 0px;\n'], ['\n    background-color: ', ';\n    margin-left: 0px;\n']),
            _templateObject21 = _taggedTemplateLiteral(['\n    font-size: 1rem;\n    background-color: ', ';\n    padding: 3px;\n    border: 2px solid ', ';\n    color: ', ';\n\n    ', '\n\n    ', '\n'], ['\n    font-size: 1rem;\n    background-color: ', ';\n    padding: 3px;\n    border: 2px solid ', ';\n    color: ', ';\n\n    ', '\n\n    ', '\n']),
            _templateObject22 = _taggedTemplateLiteral(['\n        width: 55px;\n    '], ['\n        width: 55px;\n    ']),
            _templateObject23 = _taggedTemplateLiteral(['\n        width: 140px;\n    '], ['\n        width: 140px;\n    ']),
            _templateObject24 = _taggedTemplateLiteral(['\n    padding: 5px;\n    font-size: 0.9rem;\n    border-radius: 3px;\n\n    background-color: ', ';\n    border: 2px solid ', ';\n    color: ', ';\n\n    margin: 0px;\n'], ['\n    padding: 5px;\n    font-size: 0.9rem;\n    border-radius: 3px;\n\n    background-color: ', ';\n    border: 2px solid ', ';\n    color: ', ';\n\n    margin: 0px;\n']),
            _templateObject25 = _taggedTemplateLiteral(['\n    display: flex;\n    flex-direction: row;\n'], ['\n    display: flex;\n    flex-direction: row;\n']),
            _templateObject26 = _taggedTemplateLiteral(['\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 750px) {\n        flex-direction: row;\n    }\n'], ['\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 750px) {\n        flex-direction: row;\n    }\n']),
            _templateObject27 = _taggedTemplateLiteral(['\n    margin: 5px;\n'], ['\n    margin: 5px;\n']),
            _templateObject28 = _taggedTemplateLiteral(['\n    padding: 20px;\n    padding-top: 0px;\n'], ['\n    padding: 20px;\n    padding-top: 0px;\n']),
            _templateObject29 = _taggedTemplateLiteral(['\n    margin-top: 22px;\n    margin-right: 10px;\n'], ['\n    margin-top: 22px;\n    margin-right: 10px;\n']),
            _templateObject30 = _taggedTemplateLiteral(['\n    margin-bottom: 0px;\n'], ['\n    margin-bottom: 0px;\n']);

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        function _taggedTemplateLiteral(strings, raw) {
            return Object.freeze(Object.defineProperties(strings, {
                raw: {
                    value: Object.freeze(raw)
                }
            }));
        }
        var MainContent = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject);
        var H1 = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].h1(_templateObject2, function(props) {
            return props.theme.text;
        });
        var H2 = H1.withComponent("h2").extend(_templateObject3);
        var P = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].p(_templateObject4, function(props) {
            return props.theme.text;
        });
        var CenteredH1 = H1.extend(_templateObject5, function(props) {
            return props.isoffset ? '\n            left: 35%;\n            width: 60%;\n        ' : '';
        });
        var Button = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].button(_templateObject6, function(props) {
            return props.theme.text;
        }, function(props) {
            return props.theme.main;
        }, function(props) {
            return props.theme.background;
        });
        var Select = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].select(_templateObject7, function(props) {
            return props.theme.background;
        }, function(props) {
            return props.theme.text;
        }, function(props) {
            return props.theme.text;
        });
        var Option = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].option(_templateObject8, function(props) {
            return props.theme.text;
        }, function(props) {
            return props.theme.background;
        });
        var Checkbox = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].input.attrs({
            type: "checkbox"
        })(_templateObject9);
        var Bottom = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject10);
        var LightButton = Object(__WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ])(Button)(_templateObject11, function(props) {
            return props.theme.text;
        }, function(props) {
            return props.theme.text;
        });
        var HomeScreen = function(_React$Component) {
            _inherits(HomeScreen, _React$Component);

            function HomeScreen(props) {
                _classCallCheck(this, HomeScreen);
                var _this = _possibleConstructorReturn(this, (HomeScreen.__proto__ || Object.getPrototypeOf(HomeScreen)).call(this, props));
                _this.selectRef = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createRef();
                _this.formalRef = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createRef();
                return _this;
            }
            _createClass(HomeScreen, [{
                key: 'handleWeekChange',
                value: function handleWeekChange() {
                    var isOdd = Object(__WEBPACK_IMPORTED_MODULE_6__utils__["c" /* getWeek */ ])() % 2 === 1;
                    if (this.selectRef.current.value === "Week A") {
                        this.props.setAIsOdd(isOdd);
                        this.setState(Object.assign({}, this.state, {
                            aIsOdd: isOdd
                        }));
                    } else {
                        this.props.setAIsOdd(!isOdd);
                        this.setState(Object.assign({}, this.state, {
                            aIsOdd: !isOdd
                        }));
                    }
                }
            }, {
                key: 'updateFormal',
                value: function updateFormal() { // This updates if this day is formal assembly day.
                    this.props.setIsFormal(this.formalRef.current.checked);
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this2 = this;
                    var _props = this.props,
                        aIsOdd = _props.aIsOdd,
                        pData = _props.pData;
                    var currWeek = Object(__WEBPACK_IMPORTED_MODULE_6__utils__["c" /* getWeek */ ])() % 2 === 0 ? aIsOdd ? "Week B" : "Week A" : /* Even and aIsOdd */ aIsOdd ? "Week A" : "Week B"; // Odd and aIsOdd
                    var todaysTimetable = null;
                    if (pData) {
                        todaysTimetable = Object(__WEBPACK_IMPORTED_MODULE_6__utils__["b" /* getToday */ ])(pData, currWeek, __WEBPACK_IMPORTED_MODULE_4__calculations__["a" /* getCurrPeriodId */ ](this.props.isFormal));
                    }
                    var displayedMsg = 'error';
                    var timeLeftData = this.props.timeLeftData;
                    if (timeLeftData.isWeekend) {
                        displayedMsg = 'No school on the weekend!';
                    } else if (timeLeftData.isSchoolEnded) {
                        displayedMsg = 'School has ended for today!';
                    } else {
                        var minsWords = Object(__WEBPACK_IMPORTED_MODULE_6__utils__["d" /* timeToMinsString */ ])(timeLeftData.minsDiff, false);
                        if (timeLeftData.minsDiff === 1) {
                            displayedMsg = 'There is 1 minute until ' + timeLeftData.nextMsg + '.';
                        } else {
                            displayedMsg = 'There are ' + minsWords + ' until ' + timeLeftData.nextMsg + '.';
                        }
                    }
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(MainContent, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(CenteredH1, {
                        isoffset: Boolean(todaysTimetable)
                    }, displayedMsg), todaysTimetable, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Select, {
                        innerRef: this.selectRef,
                        defaultValue: currWeek,
                        onChange: function onChange() {
                            _this2.handleWeekChange();
                        }
                    }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Option, null, 'Week A'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Option, null, 'Week B')), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LightButton, {
                        onClick: function onClick() {
                            return window.open(__WEBPACK_IMPORTED_MODULE_8__misc_belltimes_pdf___default.a, '_blank');
                        }
                    }, 'Bell times'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Bottom, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Checkbox, {
                        innerRef: this.formalRef,
                        onChange: function onChange() {
                            _this2.updateFormal();
                        }
                    }), ' Monday Formal Assembly Bell Times')));
                }
            }]);
            return HomeScreen;
        }(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);
        var InvisFileInput = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].input(_templateObject12);
        var FileLabel = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].label.attrs({
            htmlFor: 'fileInput'
        })(_templateObject13, function(props) {
            return props.theme.main;
        }, function(props) {
            return props.theme.text;
        }, function(props) {
            return props.theme.background;
        });
        var Li = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].li(_templateObject14, function(props) {
            return props.theme.text;
        });
        var TableArea = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject15);
        var GreyedOut = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject16);
        var EditBox = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject17, function(props) {
            return props.theme.main;
        });
        var ContrastP = P.extend(_templateObject18, function(props) {
            return props.theme.background;
        }, Object(__WEBPACK_IMPORTED_MODULE_2_styled_is__["a" /* default */ ])('small')(_templateObject19));
        var MiniButton = LightButton.extend(_templateObject20, function(props) {
            return props.theme.background;
        });
        var InputStyle = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].input.attrs({
            type: 'text'
        })(_templateObject21, function(props) {
            return props.theme.background;
        }, function(props) {
            return props.theme.text;
        }, function(props) {
            return props.theme.text;
        }, Object(__WEBPACK_IMPORTED_MODULE_2_styled_is__["a" /* default */ ])('small')(_templateObject22), Object(__WEBPACK_IMPORTED_MODULE_2_styled_is__["b" /* isNot */ ])('small')(_templateObject23));
        var MiniSelect = Select.extend(_templateObject24, function(props) {
            return props.theme.background;
        }, function(props) {
            return props.theme.text;
        }, function(props) {
            return props.theme.text;
        });
        var EditingWindow = function(_React$Component2) {
            _inherits(EditingWindow, _React$Component2);

            function EditingWindow(props) {
                _classCallCheck(this, EditingWindow);
                var _this3 = _possibleConstructorReturn(this, (EditingWindow.__proto__ || Object.getPrototypeOf(EditingWindow)).call(this, props));
                _this3.baseClassRef = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createRef();
                _this3.classRef = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createRef();
                _this3.roomRef = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createRef();
                _this3.state = {
                    baseClass: props.className
                };
                return _this3;
            }
            _createClass(EditingWindow, [{
                key: 'handleBaseClassChange',
                value: function handleBaseClassChange() {
                    this.classRef.current.value = this.baseClassRef.current.value;
                    this.setState(Object.assign({}, this.state, {
                        baseClass: this.baseClassRef.current.value
                    }));
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this4 = this;
                    var _props2 = this.props,
                        classes = _props2.classes,
                        room = _props2.room,
                        cancel = _props2.cancel,
                        change = _props2.change;
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(GreyedOut, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(EditBox, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContrastP, null, 'Edit Period:'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContrastP, {
                        small: true
                    }, 'Class for this period:'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(MiniSelect, {
                        innerRef: this.baseClassRef,
                        defaultValue: this.state.baseClass,
                        onChange: function onChange() {
                            return _this4.handleBaseClassChange();
                        }
                    }, classes.map(function(currClass, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Option, {
                            key: i
                        }, currClass);
                    })), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContrastP, {
                        small: true
                    }, 'Class Name:'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(InputStyle, {
                        defaultValue: this.state.baseClass,
                        innerRef: this.classRef
                    }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContrastP, {
                        small: true
                    }, 'Room:'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(InputStyle, {
                        small: true,
                        defaultValue: room,
                        innerRef: this.roomRef
                    }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br', null), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(MiniButton, {
                        onClick: function onClick() {
                            change(_this4.state.baseClass, _this4.classRef.current.value, _this4.roomRef.current.value);
                        }
                    }, 'Apply'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(MiniButton, {
                        onClick: cancel
                    }, 'Cancel')));
                }
            }]);
            return EditingWindow;
        }(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);
        var ClassScreen = function(_React$Component3) {
            _inherits(ClassScreen, _React$Component3);

            function ClassScreen(props) {
                _classCallCheck(this, ClassScreen);
                var _this5 = _possibleConstructorReturn(this, (ClassScreen.__proto__ || Object.getPrototypeOf(ClassScreen)).call(this, props));
                _this5.inputRef = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createRef();
                _this5.editingTarget = {
                    week: -1,
                    dayId: -1,
                    pId: -1
                };
                _this5.state = {
                    editingData: false
                };
                return _this5;
            }
            _createClass(ClassScreen, [{
                key: 'componentDidMount',
                value: function componentDidMount() {
                    var _this6 = this;
                    this.inputRef.current.addEventListener('change', function() {
                        _this6.handleFileUpload(_this6.inputRef.current.files[0]);
                    }, false);
                }
            }, {
                key: 'handleFileUpload',
                value: function handleFileUpload(file) {
                    var _this7 = this;
                    Object(__WEBPACK_IMPORTED_MODULE_5__fileParse__["a" /* parseIcal */ ])(file, function(outData) {
                        _this7.props.setPData(outData);
                    });
                }
            }, {
                key: 'showChangeDataScreen',
                value: function showChangeDataScreen(week, dayId, pId) {
                    this.editingTarget.week = week;
                    this.editingTarget.dayId = dayId;
                    this.editingTarget.pId = pId;
                    this.setState(Object.assign({}, this.state, {
                        editingData: true
                    }));
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this8 = this;
                    var pData = this.props.pData;
                    var timetable = null;
                    if (pData) {
                        var tableA = Object(__WEBPACK_IMPORTED_MODULE_6__utils__["a" /* dataToTable */ ])(pData, function(week, dayId, pId) {
                            _this8.showChangeDataScreen(week, dayId, pId);
                        }, 0);
                        var tableB = Object(__WEBPACK_IMPORTED_MODULE_6__utils__["a" /* dataToTable */ ])(pData, function(week, dayId, pId) {
                            _this8.showChangeDataScreen(week, dayId, pId);
                        }, 1);
                        timetable = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, 'To edit timetable periods, click on the desired period below.'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TableArea, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, 'Week A'), tableA, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, 'Week B'), tableB, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br', null), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br', null), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br', null)));
                    }
                    var editingWindow = null;
                    if (this.state.editingData) {
                        var _editingTarget = this.editingTarget,
                            week = _editingTarget.week,
                            dayId = _editingTarget.dayId,
                            pId = _editingTarget.pId;
                        var classIndex = pData.bodyData[week][dayId][pId].class;
                        var className = pData.classes[classIndex];
                        var room = pData.bodyData[week][dayId][pId].room;
                        var cancel = function cancel() {
                            _this8.setState(Object.assign({}, _this8.state, {
                                editingData: false
                            }));
                        };
                        var change = function change(baseClass, newClassName, newRoom) {
                            var newPData = Object.assign({}, pData);
                            var indexOfClass = newPData.classes.indexOf(baseClass);
                            newPData.classes[indexOfClass] = newClassName;
                            newPData.bodyData[week][dayId][pId].class = indexOfClass;
                            newPData.bodyData[week][dayId][pId].room = newRoom;
                            cancel();
                            _this8.props.setPData(newPData);
                        };
                        editingWindow = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(EditingWindow, {
                            classes: pData.classes,
                            className: className,
                            room: room,
                            cancel: cancel,
                            change: change
                        });
                    }
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(MainContent, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(H1, null, 'Classes Edit'), timetable, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, 'How to upload your timetable from Sentral:'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ol', null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Li, null, 'Login to ', __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a', {
                        href: 'https://web3.girraween-h.schools.nsw.edu.au/portal/login'
                    }, 'Sentral')), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Li, null, 'Go to the Timetable tab'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Li, null, 'Click "Export as ICal"'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Li, null, 'Upload the downloaded iCal below')), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, 'PLEASE CHECK THAT YOUR TIMETABLE IS CORRECT AFTER UPLOADING. SENTRAL\'S ICAL GENERATOR IS INCONSISTENT, SO THERE MAY BE ERRORS AFTER UPLOADING TO GIRRAWEEN COUNTDOWN.'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br', null), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(InvisFileInput, {
                        innerRef: this.inputRef,
                        type: 'file',
                        id: 'fileInput'
                    }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(FileLabel, null, 'Upload ICal'), editingWindow);
                }
            }]);
            return ClassScreen;
        }(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);
        var A = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].a(_templateObject14, function(props) {
            return props.theme.main;
        });
        var AboutScreen = function(_React$Component4) {
            _inherits(AboutScreen, _React$Component4);

            function AboutScreen(props) {
                _classCallCheck(this, AboutScreen);
                var _this9 = _possibleConstructorReturn(this, (AboutScreen.__proto__ || Object.getPrototypeOf(AboutScreen)).call(this, props));
                _this9.state = {
                    creditsShown: false
                };
                return _this9;
            }
            _createClass(AboutScreen, [{
                key: 'toggleCredits',
                value: function toggleCredits() {
                    this.setState(Object.assign({}, this.state, {
                        creditsShown: !this.state.creditsShown
                    }));
                }
            }, {
                key: 'render',
                value: function render() {
                    var emailTag = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(A, {
                        href: 'mailto: girraweencountdown@gmail.com'
                    }, 'girraweencountdown@gmail.com');
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(MainContent, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(H1, null, 'About'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(H2, null, 'What is Girraween Countdown?'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, 'Girraween Countdown is a simple countdown and timetable app for Girraween High School. It is able to tells you how long until the end of the period, and which periods you have on your timetable each day.', __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br', null), 'It was made to be a tool for efficient learning, as easy access to the knowledge of how long is left in the current period can lead to informed decisions when doing classroom activities.'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(H2, null, 'Feedback'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, 'As Girraween Countdown is not for profit, all help is appreciated. If you find a bug, or have suggestions and feedback, we would love to hear from you. Email us at ', emailTag, '.'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(H2, null, 'App'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, 'We have a Girraween Countdown app ', __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(A, {
                        href: 'https://play.google.com/store/apps/details?id=com.moodragon46.girraween_countdown'
                    }, 'on the Google Play store for Android'), '. We do not currently have it on IOS because of the cost (at the time of writing it is $99 for an Apple developer account).'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(H2, null, 'Removal of account syncing'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(P, null, 'Recently, account syncing was removed from Girraween Countdown. The reason for this is that it impeded progress in adding new features, added lots of small bugs that were hard to fix, and generally didn\'t seem necessary. We also felt that the data stored online (which was your timetable and your colour scheme) is easily to recreate if you lose your local data.'));
                }
            }]);
            return AboutScreen;
        }(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);
        var LineFlex = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject25);
        var AutoFlex = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject26);
        var ColSecHeading = P.extend(_templateObject27);
        var ColourSection = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].div(_templateObject28);
        var SchemeRadio = __WEBPACK_IMPORTED_MODULE_1_styled_components__["c" /* default */ ].input.attrs({
            type: 'radio',
            name: 'schemeRadio'
        })(_templateObject29);
        var ShortP = P.extend(_templateObject30);
        var SettingsScreen = function SettingsScreen(props) {
            var isDark = __WEBPACK_IMPORTED_MODULE_7__themes__["a" /* compareTheme */ ](props.rawTheme, __WEBPACK_IMPORTED_MODULE_7__themes__["d" /* themes */ ].dark);
            var isRed = __WEBPACK_IMPORTED_MODULE_7__themes__["a" /* compareTheme */ ](props.rawTheme, __WEBPACK_IMPORTED_MODULE_7__themes__["d" /* themes */ ].red);
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(MainContent, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(H1, null, 'Settings'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(H2, null, 'Colour Scheme:'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LineFlex, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SchemeRadio, {
                id: 'standard',
                defaultChecked: isDark,
                onClick: function onClick() {
                    props.changeTheme(__WEBPACK_IMPORTED_MODULE_7__themes__["d" /* themes */ ].dark);
                }
            }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', {
                htmlFor: 'standard'
            }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ShortP, null, 'Dark'))), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LineFlex, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SchemeRadio, {
                id: 'red',
                defaultChecked: isRed,
                onClick: function onClick() {
                    props.changeTheme(__WEBPACK_IMPORTED_MODULE_7__themes__["d" /* themes */ ].red);
                }
            }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', {
                htmlFor: 'red'
            }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ShortP, null, 'Red'))), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LineFlex, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SchemeRadio, {
                id: 'customCol',
                defaultChecked: !(isDark || isRed)
            }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', {
                htmlFor: 'customCol'
            }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ShortP, null, 'Custom Colour Scheme:'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(AutoFlex, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ColourSection, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ColSecHeading, null, 'Background Colour'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_color__["ChromePicker"], {
                disableAlpha: true,
                color: props.rawTheme.background,
                onChangeComplete: function onChangeComplete(val) {
                    props.changeThemeVal('background', val.hex);
                }
            })), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ColourSection, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ColSecHeading, null, 'Main Colour'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_color__["ChromePicker"], {
                disableAlpha: true,
                color: props.rawTheme.main,
                onChangeComplete: function onChangeComplete(val) {
                    props.changeThemeVal('main', val.hex);
                }
            })), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ColourSection, null, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ColSecHeading, null, 'Text Colour'), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_color__["ChromePicker"], {
                disableAlpha: true,
                color: props.rawTheme.text,
                onChangeComplete: function onChangeComplete(val) {
                    props.changeThemeVal('text', val.hex);
                }
            })))))));
        };

        /***/
    }),
    /* 113 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return isNot;
        });
        /* unused harmony export isOr */
        /* unused harmony export isSomeNot */
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_styled_components__ = __webpack_require__(12);


        // This Source Code Form is subject to the terms of the Mozilla Public
        // License, v. 2.0. If a copy of the MPL was not distributed with this
        // file, You can obtain one at http://mozilla.org/MPL/2.0/.

        var styledIf = function styledIf(method, condition) {
            return function() {
                for (var _len = arguments.length, names = Array(_len), _key = 0; _key < _len; _key++) {
                    names[_key] = arguments[_key];
                }

                return function() {
                    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                        args[_key2] = arguments[_key2];
                    }

                    return function(props) {
                        return names[method](function(name) {
                            return Boolean(props[name]) === condition;
                        }) && __WEBPACK_IMPORTED_MODULE_0_styled_components__["b" /* css */ ].apply(undefined, args);
                    };
                };
            };
        };

        var is = styledIf('every', true);
        var isNot = styledIf('every', false);
        var isOr = styledIf('some', true);
        var isSomeNot = styledIf('some', false);

        /* harmony default export */
        __webpack_exports__["a"] = (is);


        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbi8vIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbi8vIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uXG5cbmltcG9ydCB7IGNzcyB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuY29uc3Qgc3R5bGVkSWYgPSAobWV0aG9kLCBjb25kaXRpb24pID0+ICguLi5uYW1lcykgPT4gKC4uLmFyZ3MpID0+IHByb3BzID0+XG4gIG5hbWVzW21ldGhvZF0obmFtZSA9PiBCb29sZWFuKHByb3BzW25hbWVdKSA9PT0gY29uZGl0aW9uKSAmJiBjc3MoLi4uYXJncyk7XG5cbmNvbnN0IGlzID0gc3R5bGVkSWYoJ2V2ZXJ5JywgdHJ1ZSk7XG5jb25zdCBpc05vdCA9IHN0eWxlZElmKCdldmVyeScsIGZhbHNlKTtcbmNvbnN0IGlzT3IgPSBzdHlsZWRJZignc29tZScsIHRydWUpO1xuY29uc3QgaXNTb21lTm90ID0gc3R5bGVkSWYoJ3NvbWUnLCBmYWxzZSk7XG5cbmV4cG9ydCBkZWZhdWx0IGlzO1xuZXhwb3J0IHsgaXNOb3QsIGlzT3IsIGlzU29tZU5vdCB9O1xuIl0sIm5hbWVzIjpbInN0eWxlZElmIiwibWV0aG9kIiwiY29uZGl0aW9uIiwibmFtZXMiLCJhcmdzIiwiQm9vbGVhbiIsInByb3BzIiwibmFtZSIsImNzcyIsImlzIiwiaXNOb3QiLCJpc09yIiwiaXNTb21lTm90Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBSUEsQUFFQSxJQUFNQSxXQUFXLFNBQVhBLFFBQVcsQ0FBQ0MsTUFBRCxFQUFTQyxTQUFUO1NBQXVCO3NDQUFJQyxLQUFKO1dBQUE7OztXQUFjO3lDQUFJQyxJQUFKO1lBQUE7OzthQUFhO2VBQ2pFRCxNQUFNRixNQUFOLEVBQWM7aUJBQVFJLFFBQVFDLE1BQU1DLElBQU4sQ0FBUixNQUF5QkwsU0FBakM7U0FBZCxLQUE2RE0scUJBQU9KLElBQVAsQ0FESTtPQUFiO0tBQWQ7R0FBdkI7Q0FBakI7O0FBR0EsSUFBTUssS0FBS1QsU0FBUyxPQUFULEVBQWtCLElBQWxCLENBQVg7QUFDQSxJQUFNVSxRQUFRVixTQUFTLE9BQVQsRUFBa0IsS0FBbEIsQ0FBZDtBQUNBLElBQU1XLE9BQU9YLFNBQVMsTUFBVCxFQUFpQixJQUFqQixDQUFiO0FBQ0EsSUFBTVksWUFBWVosU0FBUyxNQUFULEVBQWlCLEtBQWpCLENBQWxCOzs7OzsifQ==

        /***/
    }),
    /* 114 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.CustomPicker = exports.TwitterPicker = exports.SwatchesPicker = exports.SliderPicker = exports.SketchPicker = exports.PhotoshopPicker = exports.MaterialPicker = exports.HuePicker = exports.GithubPicker = exports.CompactPicker = exports.ChromePicker = exports.default = exports.CirclePicker = exports.BlockPicker = exports.AlphaPicker = undefined;

        var _Alpha = __webpack_require__(115);

        Object.defineProperty(exports, 'AlphaPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Alpha).default;
            }
        });

        var _Block = __webpack_require__(236);

        Object.defineProperty(exports, 'BlockPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Block).default;
            }
        });

        var _Circle = __webpack_require__(238);

        Object.defineProperty(exports, 'CirclePicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Circle).default;
            }
        });

        var _Chrome = __webpack_require__(240);

        Object.defineProperty(exports, 'ChromePicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Chrome).default;
            }
        });

        var _Compact = __webpack_require__(244);

        Object.defineProperty(exports, 'CompactPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Compact).default;
            }
        });

        var _Github = __webpack_require__(247);

        Object.defineProperty(exports, 'GithubPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Github).default;
            }
        });

        var _Hue = __webpack_require__(249);

        Object.defineProperty(exports, 'HuePicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Hue).default;
            }
        });

        var _Material = __webpack_require__(251);

        Object.defineProperty(exports, 'MaterialPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Material).default;
            }
        });

        var _Photoshop = __webpack_require__(252);

        Object.defineProperty(exports, 'PhotoshopPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Photoshop).default;
            }
        });

        var _Sketch = __webpack_require__(258);

        Object.defineProperty(exports, 'SketchPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Sketch).default;
            }
        });

        var _Slider = __webpack_require__(261);

        Object.defineProperty(exports, 'SliderPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Slider).default;
            }
        });

        var _Swatches = __webpack_require__(265);

        Object.defineProperty(exports, 'SwatchesPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Swatches).default;
            }
        });

        var _Twitter = __webpack_require__(268);

        Object.defineProperty(exports, 'TwitterPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_Twitter).default;
            }
        });

        var _ColorWrap = __webpack_require__(76);

        Object.defineProperty(exports, 'CustomPicker', {
            enumerable: true,
            get: function get() {
                return _interopRequireDefault(_ColorWrap).default;
            }
        });

        var _Chrome2 = _interopRequireDefault(_Chrome);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        exports.default = _Chrome2.default;

        /***/
    }),
    /* 115 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.AlphaPicker = undefined;

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        var _AlphaPointer = __webpack_require__(235);

        var _AlphaPointer2 = _interopRequireDefault(_AlphaPointer);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var AlphaPicker = exports.AlphaPicker = function AlphaPicker(_ref) {
            var rgb = _ref.rgb,
                hsl = _ref.hsl,
                width = _ref.width,
                height = _ref.height,
                onChange = _ref.onChange,
                direction = _ref.direction,
                style = _ref.style,
                renderers = _ref.renderers,
                pointer = _ref.pointer,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        position: 'relative',
                        width: width,
                        height: height
                    },
                    alpha: {
                        radius: '2px',
                        style: style
                    }
                }
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.picker,
                    className: 'alpha-picker ' + className
                },
                _react2.default.createElement(_common.Alpha, _extends({}, styles.alpha, {
                    rgb: rgb,
                    hsl: hsl,
                    pointer: pointer,
                    renderers: renderers,
                    onChange: onChange,
                    direction: direction
                }))
            );
        };

        AlphaPicker.defaultProps = {
            width: '316px',
            height: '16px',
            direction: 'horizontal',
            pointer: _AlphaPointer2.default
        };

        exports.default = (0, _common.ColorWrap)(AlphaPicker);

        /***/
    }),
    /* 116 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.flattenNames = undefined;

        var _isString2 = __webpack_require__(117);

        var _isString3 = _interopRequireDefault(_isString2);

        var _forOwn2 = __webpack_require__(25);

        var _forOwn3 = _interopRequireDefault(_forOwn2);

        var _isPlainObject2 = __webpack_require__(128);

        var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);

        var _map2 = __webpack_require__(9);

        var _map3 = _interopRequireDefault(_map2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var flattenNames = exports.flattenNames = function flattenNames() {
            var things = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

            var names = [];

            (0, _map3.default)(things, function(thing) {
                if (Array.isArray(thing)) {
                    flattenNames(thing).map(function(name) {
                        return names.push(name);
                    });
                } else if ((0, _isPlainObject3.default)(thing)) {
                    (0, _forOwn3.default)(thing, function(value, key) {
                        value === true && names.push(key);
                        names.push(key + '-' + value);
                    });
                } else if ((0, _isString3.default)(thing)) {
                    names.push(thing);
                }
            });

            return names;
        };

        exports.default = flattenNames;

        /***/
    }),
    /* 117 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(10),
            isArray = __webpack_require__(4),
            isObjectLike = __webpack_require__(7);

        /** `Object#toString` result references. */
        var stringTag = '[object String]';

        /**
         * Checks if `value` is classified as a `String` primitive or object.
         *
         * @static
         * @since 0.1.0
         * @memberOf _
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a string, else `false`.
         * @example
         *
         * _.isString('abc');
         * // => true
         *
         * _.isString(1);
         * // => false
         */
        function isString(value) {
            return typeof value == 'string' ||
                (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
        }

        module.exports = isString;


        /***/
    }),
    /* 118 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(13);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString = objectProto.toString;

        /** Built-in value references. */
        var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

        /**
         * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the raw `toStringTag`.
         */
        function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag),
                tag = value[symToStringTag];

            try {
                value[symToStringTag] = undefined;
                var unmasked = true;
            } catch (e) {}

            var result = nativeObjectToString.call(value);
            if (unmasked) {
                if (isOwn) {
                    value[symToStringTag] = tag;
                } else {
                    delete value[symToStringTag];
                }
            }
            return result;
        }

        module.exports = getRawTag;


        /***/
    }),
    /* 119 */
    /***/
    (function(module, exports) {

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString = objectProto.toString;

        /**
         * Converts `value` to a string using `Object.prototype.toString`.
         *
         * @private
         * @param {*} value The value to convert.
         * @returns {string} Returns the converted string.
         */
        function objectToString(value) {
            return nativeObjectToString.call(value);
        }

        module.exports = objectToString;


        /***/
    }),
    /* 120 */
    /***/
    (function(module, exports, __webpack_require__) {

        var createBaseFor = __webpack_require__(121);

        /**
         * The base implementation of `baseForOwn` which iterates over `object`
         * properties returned by `keysFunc` and invokes `iteratee` for each property.
         * Iteratee functions may exit iteration early by explicitly returning `false`.
         *
         * @private
         * @param {Object} object The object to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @param {Function} keysFunc The function to get the keys of `object`.
         * @returns {Object} Returns `object`.
         */
        var baseFor = createBaseFor();

        module.exports = baseFor;


        /***/
    }),
    /* 121 */
    /***/
    (function(module, exports) {

        /**
         * Creates a base function for methods like `_.forIn` and `_.forOwn`.
         *
         * @private
         * @param {boolean} [fromRight] Specify iterating from right to left.
         * @returns {Function} Returns the new base function.
         */
        function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
                var index = -1,
                    iterable = Object(object),
                    props = keysFunc(object),
                    length = props.length;

                while (length--) {
                    var key = props[fromRight ? length : ++index];
                    if (iteratee(iterable[key], key, iterable) === false) {
                        break;
                    }
                }
                return object;
            };
        }

        module.exports = createBaseFor;


        /***/
    }),
    /* 122 */
    /***/
    (function(module, exports) {

        /**
         * The base implementation of `_.times` without support for iteratee shorthands
         * or max array length checks.
         *
         * @private
         * @param {number} n The number of times to invoke `iteratee`.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns the array of results.
         */
        function baseTimes(n, iteratee) {
            var index = -1,
                result = Array(n);

            while (++index < n) {
                result[index] = iteratee(index);
            }
            return result;
        }

        module.exports = baseTimes;


        /***/
    }),
    /* 123 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(10),
            isObjectLike = __webpack_require__(7);

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]';

        /**
         * The base implementation of `_.isArguments`.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an `arguments` object,
         */
        function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
        }

        module.exports = baseIsArguments;


        /***/
    }),
    /* 124 */
    /***/
    (function(module, exports) {

        /**
         * This method returns `false`.
         *
         * @static
         * @memberOf _
         * @since 4.13.0
         * @category Util
         * @returns {boolean} Returns `false`.
         * @example
         *
         * _.times(2, _.stubFalse);
         * // => [false, false]
         */
        function stubFalse() {
            return false;
        }

        module.exports = stubFalse;


        /***/
    }),
    /* 125 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(10),
            isLength = __webpack_require__(28),
            isObjectLike = __webpack_require__(7);

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]',
            arrayTag = '[object Array]',
            boolTag = '[object Boolean]',
            dateTag = '[object Date]',
            errorTag = '[object Error]',
            funcTag = '[object Function]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            objectTag = '[object Object]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            weakMapTag = '[object WeakMap]';

        var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]',
            float32Tag = '[object Float32Array]',
            float64Tag = '[object Float64Array]',
            int8Tag = '[object Int8Array]',
            int16Tag = '[object Int16Array]',
            int32Tag = '[object Int32Array]',
            uint8Tag = '[object Uint8Array]',
            uint8ClampedTag = '[object Uint8ClampedArray]',
            uint16Tag = '[object Uint16Array]',
            uint32Tag = '[object Uint32Array]';

        /** Used to identify `toStringTag` values of typed arrays. */
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
            typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
            typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
            typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
            typedArrayTags[uint32Tag] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
            typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
            typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
            typedArrayTags[errorTag] = typedArrayTags[funcTag] =
            typedArrayTags[mapTag] = typedArrayTags[numberTag] =
            typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
            typedArrayTags[setTag] = typedArrayTags[stringTag] =
            typedArrayTags[weakMapTag] = false;

        /**
         * The base implementation of `_.isTypedArray` without Node.js optimizations.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
         */
        function baseIsTypedArray(value) {
            return isObjectLike(value) &&
                isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }

        module.exports = baseIsTypedArray;


        /***/
    }),
    /* 126 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isPrototype = __webpack_require__(31),
            nativeKeys = __webpack_require__(127);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         */
        function baseKeys(object) {
            if (!isPrototype(object)) {
                return nativeKeys(object);
            }
            var result = [];
            for (var key in Object(object)) {
                if (hasOwnProperty.call(object, key) && key != 'constructor') {
                    result.push(key);
                }
            }
            return result;
        }

        module.exports = baseKeys;


        /***/
    }),
    /* 127 */
    /***/
    (function(module, exports, __webpack_require__) {

        var overArg = __webpack_require__(51);

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeKeys = overArg(Object.keys, Object);

        module.exports = nativeKeys;


        /***/
    }),
    /* 128 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(10),
            getPrototype = __webpack_require__(32),
            isObjectLike = __webpack_require__(7);

        /** `Object#toString` result references. */
        var objectTag = '[object Object]';

        /** Used for built-in method references. */
        var funcProto = Function.prototype,
            objectProto = Object.prototype;

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /** Used to infer the `Object` constructor. */
        var objectCtorString = funcToString.call(Object);

        /**
         * Checks if `value` is a plain object, that is, an object created by the
         * `Object` constructor or one with a `[[Prototype]]` of `null`.
         *
         * @static
         * @memberOf _
         * @since 0.8.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
         * @example
         *
         * function Foo() {
         *   this.a = 1;
         * }
         *
         * _.isPlainObject(new Foo);
         * // => false
         *
         * _.isPlainObject([1, 2, 3]);
         * // => false
         *
         * _.isPlainObject({ 'x': 0, 'y': 0 });
         * // => true
         *
         * _.isPlainObject(Object.create(null));
         * // => true
         */
        function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
                return false;
            }
            var proto = getPrototype(value);
            if (proto === null) {
                return true;
            }
            var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
            return typeof Ctor == 'function' && Ctor instanceof Ctor &&
                funcToString.call(Ctor) == objectCtorString;
        }

        module.exports = isPlainObject;


        /***/
    }),
    /* 129 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseMatches = __webpack_require__(130),
            baseMatchesProperty = __webpack_require__(174),
            identity = __webpack_require__(54),
            isArray = __webpack_require__(4),
            property = __webpack_require__(184);

        /**
         * The base implementation of `_.iteratee`.
         *
         * @private
         * @param {*} [value=_.identity] The value to convert to an iteratee.
         * @returns {Function} Returns the iteratee.
         */
        function baseIteratee(value) {
            // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
            // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
            if (typeof value == 'function') {
                return value;
            }
            if (value == null) {
                return identity;
            }
            if (typeof value == 'object') {
                return isArray(value) ?
                    baseMatchesProperty(value[0], value[1]) :
                    baseMatches(value);
            }
            return property(value);
        }

        module.exports = baseIteratee;


        /***/
    }),
    /* 130 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsMatch = __webpack_require__(131),
            getMatchData = __webpack_require__(173),
            matchesStrictComparable = __webpack_require__(65);

        /**
         * The base implementation of `_.matches` which doesn't clone `source`.
         *
         * @private
         * @param {Object} source The object of property values to match.
         * @returns {Function} Returns the new spec function.
         */
        function baseMatches(source) {
            var matchData = getMatchData(source);
            if (matchData.length == 1 && matchData[0][2]) {
                return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            }
            return function(object) {
                return object === source || baseIsMatch(object, source, matchData);
            };
        }

        module.exports = baseMatches;


        /***/
    }),
    /* 131 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Stack = __webpack_require__(33),
            baseIsEqual = __webpack_require__(57);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2;

        /**
         * The base implementation of `_.isMatch` without support for iteratee shorthands.
         *
         * @private
         * @param {Object} object The object to inspect.
         * @param {Object} source The object of property values to match.
         * @param {Array} matchData The property names, values, and compare flags to match.
         * @param {Function} [customizer] The function to customize comparisons.
         * @returns {boolean} Returns `true` if `object` is a match, else `false`.
         */
        function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length,
                length = index,
                noCustomizer = !customizer;

            if (object == null) {
                return !length;
            }
            object = Object(object);
            while (index--) {
                var data = matchData[index];
                if ((noCustomizer && data[2]) ?
                    data[1] !== object[data[0]] :
                    !(data[0] in object)
                ) {
                    return false;
                }
            }
            while (++index < length) {
                data = matchData[index];
                var key = data[0],
                    objValue = object[key],
                    srcValue = data[1];

                if (noCustomizer && data[2]) {
                    if (objValue === undefined && !(key in object)) {
                        return false;
                    }
                } else {
                    var stack = new Stack;
                    if (customizer) {
                        var result = customizer(objValue, srcValue, key, object, source, stack);
                    }
                    if (!(result === undefined ?
                            baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) :
                            result
                        )) {
                        return false;
                    }
                }
            }
            return true;
        }

        module.exports = baseIsMatch;


        /***/
    }),
    /* 132 */
    /***/
    (function(module, exports) {

        /**
         * Removes all key-value entries from the list cache.
         *
         * @private
         * @name clear
         * @memberOf ListCache
         */
        function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
        }

        module.exports = listCacheClear;


        /***/
    }),
    /* 133 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assocIndexOf = __webpack_require__(17);

        /** Used for built-in method references. */
        var arrayProto = Array.prototype;

        /** Built-in value references. */
        var splice = arrayProto.splice;

        /**
         * Removes `key` and its value from the list cache.
         *
         * @private
         * @name delete
         * @memberOf ListCache
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function listCacheDelete(key) {
            var data = this.__data__,
                index = assocIndexOf(data, key);

            if (index < 0) {
                return false;
            }
            var lastIndex = data.length - 1;
            if (index == lastIndex) {
                data.pop();
            } else {
                splice.call(data, index, 1);
            }
            --this.size;
            return true;
        }

        module.exports = listCacheDelete;


        /***/
    }),
    /* 134 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assocIndexOf = __webpack_require__(17);

        /**
         * Gets the list cache value for `key`.
         *
         * @private
         * @name get
         * @memberOf ListCache
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function listCacheGet(key) {
            var data = this.__data__,
                index = assocIndexOf(data, key);

            return index < 0 ? undefined : data[index][1];
        }

        module.exports = listCacheGet;


        /***/
    }),
    /* 135 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assocIndexOf = __webpack_require__(17);

        /**
         * Checks if a list cache value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf ListCache
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
        }

        module.exports = listCacheHas;


        /***/
    }),
    /* 136 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assocIndexOf = __webpack_require__(17);

        /**
         * Sets the list cache `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf ListCache
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the list cache instance.
         */
        function listCacheSet(key, value) {
            var data = this.__data__,
                index = assocIndexOf(data, key);

            if (index < 0) {
                ++this.size;
                data.push([key, value]);
            } else {
                data[index][1] = value;
            }
            return this;
        }

        module.exports = listCacheSet;


        /***/
    }),
    /* 137 */
    /***/
    (function(module, exports, __webpack_require__) {

        var ListCache = __webpack_require__(16);

        /**
         * Removes all key-value entries from the stack.
         *
         * @private
         * @name clear
         * @memberOf Stack
         */
        function stackClear() {
            this.__data__ = new ListCache;
            this.size = 0;
        }

        module.exports = stackClear;


        /***/
    }),
    /* 138 */
    /***/
    (function(module, exports) {

        /**
         * Removes `key` and its value from the stack.
         *
         * @private
         * @name delete
         * @memberOf Stack
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function stackDelete(key) {
            var data = this.__data__,
                result = data['delete'](key);

            this.size = data.size;
            return result;
        }

        module.exports = stackDelete;


        /***/
    }),
    /* 139 */
    /***/
    (function(module, exports) {

        /**
         * Gets the stack value for `key`.
         *
         * @private
         * @name get
         * @memberOf Stack
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function stackGet(key) {
            return this.__data__.get(key);
        }

        module.exports = stackGet;


        /***/
    }),
    /* 140 */
    /***/
    (function(module, exports) {

        /**
         * Checks if a stack value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf Stack
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function stackHas(key) {
            return this.__data__.has(key);
        }

        module.exports = stackHas;


        /***/
    }),
    /* 141 */
    /***/
    (function(module, exports, __webpack_require__) {

        var ListCache = __webpack_require__(16),
            Map = __webpack_require__(35),
            MapCache = __webpack_require__(36);

        /** Used as the size to enable large array optimizations. */
        var LARGE_ARRAY_SIZE = 200;

        /**
         * Sets the stack `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf Stack
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the stack cache instance.
         */
        function stackSet(key, value) {
            var data = this.__data__;
            if (data instanceof ListCache) {
                var pairs = data.__data__;
                if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
                    pairs.push([key, value]);
                    this.size = ++data.size;
                    return this;
                }
                data = this.__data__ = new MapCache(pairs);
            }
            data.set(key, value);
            this.size = data.size;
            return this;
        }

        module.exports = stackSet;


        /***/
    }),
    /* 142 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isFunction = __webpack_require__(52),
            isMasked = __webpack_require__(143),
            isObject = __webpack_require__(8),
            toSource = __webpack_require__(56);

        /**
         * Used to match `RegExp`
         * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
         */
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

        /** Used to detect host constructors (Safari). */
        var reIsHostCtor = /^\[object .+?Constructor\]$/;

        /** Used for built-in method references. */
        var funcProto = Function.prototype,
            objectProto = Object.prototype;

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /** Used to detect if a method is native. */
        var reIsNative = RegExp('^' +
            funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
            .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
        );

        /**
         * The base implementation of `_.isNative` without bad shim checks.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a native function,
         *  else `false`.
         */
        function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) {
                return false;
            }
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
        }

        module.exports = baseIsNative;


        /***/
    }),
    /* 143 */
    /***/
    (function(module, exports, __webpack_require__) {

        var coreJsData = __webpack_require__(144);

        /** Used to detect methods masquerading as native. */
        var maskSrcKey = (function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
            return uid ? ('Symbol(src)_1.' + uid) : '';
        }());

        /**
         * Checks if `func` has its source masked.
         *
         * @private
         * @param {Function} func The function to check.
         * @returns {boolean} Returns `true` if `func` is masked, else `false`.
         */
        function isMasked(func) {
            return !!maskSrcKey && (maskSrcKey in func);
        }

        module.exports = isMasked;


        /***/
    }),
    /* 144 */
    /***/
    (function(module, exports, __webpack_require__) {

        var root = __webpack_require__(5);

        /** Used to detect overreaching core-js shims. */
        var coreJsData = root['__core-js_shared__'];

        module.exports = coreJsData;


        /***/
    }),
    /* 145 */
    /***/
    (function(module, exports) {

        /**
         * Gets the value at `key` of `object`.
         *
         * @private
         * @param {Object} [object] The object to query.
         * @param {string} key The key of the property to get.
         * @returns {*} Returns the property value.
         */
        function getValue(object, key) {
            return object == null ? undefined : object[key];
        }

        module.exports = getValue;


        /***/
    }),
    /* 146 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Hash = __webpack_require__(147),
            ListCache = __webpack_require__(16),
            Map = __webpack_require__(35);

        /**
         * Removes all key-value entries from the map.
         *
         * @private
         * @name clear
         * @memberOf MapCache
         */
        function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
                'hash': new Hash,
                'map': new(Map || ListCache),
                'string': new Hash
            };
        }

        module.exports = mapCacheClear;


        /***/
    }),
    /* 147 */
    /***/
    (function(module, exports, __webpack_require__) {

        var hashClear = __webpack_require__(148),
            hashDelete = __webpack_require__(149),
            hashGet = __webpack_require__(150),
            hashHas = __webpack_require__(151),
            hashSet = __webpack_require__(152);

        /**
         * Creates a hash object.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function Hash(entries) {
            var index = -1,
                length = entries == null ? 0 : entries.length;

            this.clear();
            while (++index < length) {
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }

        // Add methods to `Hash`.
        Hash.prototype.clear = hashClear;
        Hash.prototype['delete'] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;

        module.exports = Hash;


        /***/
    }),
    /* 148 */
    /***/
    (function(module, exports, __webpack_require__) {

        var nativeCreate = __webpack_require__(18);

        /**
         * Removes all key-value entries from the hash.
         *
         * @private
         * @name clear
         * @memberOf Hash
         */
        function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
            this.size = 0;
        }

        module.exports = hashClear;


        /***/
    }),
    /* 149 */
    /***/
    (function(module, exports) {

        /**
         * Removes `key` and its value from the hash.
         *
         * @private
         * @name delete
         * @memberOf Hash
         * @param {Object} hash The hash to modify.
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key];
            this.size -= result ? 1 : 0;
            return result;
        }

        module.exports = hashDelete;


        /***/
    }),
    /* 150 */
    /***/
    (function(module, exports, __webpack_require__) {

        var nativeCreate = __webpack_require__(18);

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Gets the hash value for `key`.
         *
         * @private
         * @name get
         * @memberOf Hash
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
                var result = data[key];
                return result === HASH_UNDEFINED ? undefined : result;
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined;
        }

        module.exports = hashGet;


        /***/
    }),
    /* 151 */
    /***/
    (function(module, exports, __webpack_require__) {

        var nativeCreate = __webpack_require__(18);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Checks if a hash value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf Hash
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
        }

        module.exports = hashHas;


        /***/
    }),
    /* 152 */
    /***/
    (function(module, exports, __webpack_require__) {

        var nativeCreate = __webpack_require__(18);

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /**
         * Sets the hash `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf Hash
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the hash instance.
         */
        function hashSet(key, value) {
            var data = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
            return this;
        }

        module.exports = hashSet;


        /***/
    }),
    /* 153 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getMapData = __webpack_require__(19);

        /**
         * Removes `key` and its value from the map.
         *
         * @private
         * @name delete
         * @memberOf MapCache
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function mapCacheDelete(key) {
            var result = getMapData(this, key)['delete'](key);
            this.size -= result ? 1 : 0;
            return result;
        }

        module.exports = mapCacheDelete;


        /***/
    }),
    /* 154 */
    /***/
    (function(module, exports) {

        /**
         * Checks if `value` is suitable for use as unique object key.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
         */
        function isKeyable(value) {
            var type = typeof value;
            return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean') ?
                (value !== '__proto__') :
                (value === null);
        }

        module.exports = isKeyable;


        /***/
    }),
    /* 155 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getMapData = __webpack_require__(19);

        /**
         * Gets the map value for `key`.
         *
         * @private
         * @name get
         * @memberOf MapCache
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function mapCacheGet(key) {
            return getMapData(this, key).get(key);
        }

        module.exports = mapCacheGet;


        /***/
    }),
    /* 156 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getMapData = __webpack_require__(19);

        /**
         * Checks if a map value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf MapCache
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function mapCacheHas(key) {
            return getMapData(this, key).has(key);
        }

        module.exports = mapCacheHas;


        /***/
    }),
    /* 157 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getMapData = __webpack_require__(19);

        /**
         * Sets the map `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf MapCache
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the map cache instance.
         */
        function mapCacheSet(key, value) {
            var data = getMapData(this, key),
                size = data.size;

            data.set(key, value);
            this.size += data.size == size ? 0 : 1;
            return this;
        }

        module.exports = mapCacheSet;


        /***/
    }),
    /* 158 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Stack = __webpack_require__(33),
            equalArrays = __webpack_require__(58),
            equalByTag = __webpack_require__(164),
            equalObjects = __webpack_require__(167),
            getTag = __webpack_require__(20),
            isArray = __webpack_require__(4),
            isBuffer = __webpack_require__(26),
            isTypedArray = __webpack_require__(50);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1;

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]',
            arrayTag = '[object Array]',
            objectTag = '[object Object]';

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * A specialized version of `baseIsEqual` for arrays and objects which performs
         * deep comparisons and tracks traversed objects enabling objects with circular
         * references to be compared.
         *
         * @private
         * @param {Object} object The object to compare.
         * @param {Object} other The other object to compare.
         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
         * @param {Function} customizer The function to customize comparisons.
         * @param {Function} equalFunc The function to determine equivalents of values.
         * @param {Object} [stack] Tracks traversed `object` and `other` objects.
         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
         */
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object),
                othIsArr = isArray(other),
                objTag = objIsArr ? arrayTag : getTag(object),
                othTag = othIsArr ? arrayTag : getTag(other);

            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;

            var objIsObj = objTag == objectTag,
                othIsObj = othTag == objectTag,
                isSameTag = objTag == othTag;

            if (isSameTag && isBuffer(object)) {
                if (!isBuffer(other)) {
                    return false;
                }
                objIsArr = true;
                objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
                stack || (stack = new Stack);
                return (objIsArr || isTypedArray(object)) ?
                    equalArrays(object, other, bitmask, customizer, equalFunc, stack) :
                    equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
                    othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

                if (objIsWrapped || othIsWrapped) {
                    var objUnwrapped = objIsWrapped ? object.value() : object,
                        othUnwrapped = othIsWrapped ? other.value() : other;

                    stack || (stack = new Stack);
                    return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                }
            }
            if (!isSameTag) {
                return false;
            }
            stack || (stack = new Stack);
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }

        module.exports = baseIsEqualDeep;


        /***/
    }),
    /* 159 */
    /***/
    (function(module, exports, __webpack_require__) {

        var MapCache = __webpack_require__(36),
            setCacheAdd = __webpack_require__(160),
            setCacheHas = __webpack_require__(161);

        /**
         *
         * Creates an array cache object to store unique values.
         *
         * @private
         * @constructor
         * @param {Array} [values] The values to cache.
         */
        function SetCache(values) {
            var index = -1,
                length = values == null ? 0 : values.length;

            this.__data__ = new MapCache;
            while (++index < length) {
                this.add(values[index]);
            }
        }

        // Add methods to `SetCache`.
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;

        module.exports = SetCache;


        /***/
    }),
    /* 160 */
    /***/
    (function(module, exports) {

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /**
         * Adds `value` to the array cache.
         *
         * @private
         * @name add
         * @memberOf SetCache
         * @alias push
         * @param {*} value The value to cache.
         * @returns {Object} Returns the cache instance.
         */
        function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
        }

        module.exports = setCacheAdd;


        /***/
    }),
    /* 161 */
    /***/
    (function(module, exports) {

        /**
         * Checks if `value` is in the array cache.
         *
         * @private
         * @name has
         * @memberOf SetCache
         * @param {*} value The value to search for.
         * @returns {number} Returns `true` if `value` is found, else `false`.
         */
        function setCacheHas(value) {
            return this.__data__.has(value);
        }

        module.exports = setCacheHas;


        /***/
    }),
    /* 162 */
    /***/
    (function(module, exports) {

        /**
         * A specialized version of `_.some` for arrays without support for iteratee
         * shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} predicate The function invoked per iteration.
         * @returns {boolean} Returns `true` if any element passes the predicate check,
         *  else `false`.
         */
        function arraySome(array, predicate) {
            var index = -1,
                length = array == null ? 0 : array.length;

            while (++index < length) {
                if (predicate(array[index], index, array)) {
                    return true;
                }
            }
            return false;
        }

        module.exports = arraySome;


        /***/
    }),
    /* 163 */
    /***/
    (function(module, exports) {

        /**
         * Checks if a `cache` value for `key` exists.
         *
         * @private
         * @param {Object} cache The cache to query.
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function cacheHas(cache, key) {
            return cache.has(key);
        }

        module.exports = cacheHas;


        /***/
    }),
    /* 164 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(13),
            Uint8Array = __webpack_require__(59),
            eq = __webpack_require__(34),
            equalArrays = __webpack_require__(58),
            mapToArray = __webpack_require__(165),
            setToArray = __webpack_require__(166);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2;

        /** `Object#toString` result references. */
        var boolTag = '[object Boolean]',
            dateTag = '[object Date]',
            errorTag = '[object Error]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            symbolTag = '[object Symbol]';

        var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]';

        /** Used to convert symbols to primitives and strings. */
        var symbolProto = Symbol ? Symbol.prototype : undefined,
            symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

        /**
         * A specialized version of `baseIsEqualDeep` for comparing objects of
         * the same `toStringTag`.
         *
         * **Note:** This function only supports comparing values with tags of
         * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
         *
         * @private
         * @param {Object} object The object to compare.
         * @param {Object} other The other object to compare.
         * @param {string} tag The `toStringTag` of the objects to compare.
         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
         * @param {Function} customizer The function to customize comparisons.
         * @param {Function} equalFunc The function to determine equivalents of values.
         * @param {Object} stack Tracks traversed `object` and `other` objects.
         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
         */
        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
            switch (tag) {
                case dataViewTag:
                    if ((object.byteLength != other.byteLength) ||
                        (object.byteOffset != other.byteOffset)) {
                        return false;
                    }
                    object = object.buffer;
                    other = other.buffer;

                case arrayBufferTag:
                    if ((object.byteLength != other.byteLength) ||
                        !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
                        return false;
                    }
                    return true;

                case boolTag:
                case dateTag:
                case numberTag:
                    // Coerce booleans to `1` or `0` and dates to milliseconds.
                    // Invalid dates are coerced to `NaN`.
                    return eq(+object, +other);

                case errorTag:
                    return object.name == other.name && object.message == other.message;

                case regexpTag:
                case stringTag:
                    // Coerce regexes to strings and treat strings, primitives and objects,
                    // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
                    // for more details.
                    return object == (other + '');

                case mapTag:
                    var convert = mapToArray;

                case setTag:
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                    convert || (convert = setToArray);

                    if (object.size != other.size && !isPartial) {
                        return false;
                    }
                    // Assume cyclic values are equal.
                    var stacked = stack.get(object);
                    if (stacked) {
                        return stacked == other;
                    }
                    bitmask |= COMPARE_UNORDERED_FLAG;

                    // Recursively compare objects (susceptible to call stack limits).
                    stack.set(object, other);
                    var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                    stack['delete'](object);
                    return result;

                case symbolTag:
                    if (symbolValueOf) {
                        return symbolValueOf.call(object) == symbolValueOf.call(other);
                    }
            }
            return false;
        }

        module.exports = equalByTag;


        /***/
    }),
    /* 165 */
    /***/
    (function(module, exports) {

        /**
         * Converts `map` to its key-value pairs.
         *
         * @private
         * @param {Object} map The map to convert.
         * @returns {Array} Returns the key-value pairs.
         */
        function mapToArray(map) {
            var index = -1,
                result = Array(map.size);

            map.forEach(function(value, key) {
                result[++index] = [key, value];
            });
            return result;
        }

        module.exports = mapToArray;


        /***/
    }),
    /* 166 */
    /***/
    (function(module, exports) {

        /**
         * Converts `set` to an array of its values.
         *
         * @private
         * @param {Object} set The set to convert.
         * @returns {Array} Returns the values.
         */
        function setToArray(set) {
            var index = -1,
                result = Array(set.size);

            set.forEach(function(value) {
                result[++index] = value;
            });
            return result;
        }

        module.exports = setToArray;


        /***/
    }),
    /* 167 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getAllKeys = __webpack_require__(60);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1;

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * A specialized version of `baseIsEqualDeep` for objects with support for
         * partial deep comparisons.
         *
         * @private
         * @param {Object} object The object to compare.
         * @param {Object} other The other object to compare.
         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
         * @param {Function} customizer The function to customize comparisons.
         * @param {Function} equalFunc The function to determine equivalents of values.
         * @param {Object} stack Tracks traversed `object` and `other` objects.
         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
         */
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
                objProps = getAllKeys(object),
                objLength = objProps.length,
                othProps = getAllKeys(other),
                othLength = othProps.length;

            if (objLength != othLength && !isPartial) {
                return false;
            }
            var index = objLength;
            while (index--) {
                var key = objProps[index];
                if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
                    return false;
                }
            }
            // Assume cyclic values are equal.
            var stacked = stack.get(object);
            if (stacked && stack.get(other)) {
                return stacked == other;
            }
            var result = true;
            stack.set(object, other);
            stack.set(other, object);

            var skipCtor = isPartial;
            while (++index < objLength) {
                key = objProps[index];
                var objValue = object[key],
                    othValue = other[key];

                if (customizer) {
                    var compared = isPartial ?
                        customizer(othValue, objValue, key, other, object, stack) :
                        customizer(objValue, othValue, key, object, other, stack);
                }
                // Recursively compare objects (susceptible to call stack limits).
                if (!(compared === undefined ?
                        (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack)) :
                        compared
                    )) {
                    result = false;
                    break;
                }
                skipCtor || (skipCtor = key == 'constructor');
            }
            if (result && !skipCtor) {
                var objCtor = object.constructor,
                    othCtor = other.constructor;

                // Non `Object` object instances with different constructors are not equal.
                if (objCtor != othCtor &&
                    ('constructor' in object && 'constructor' in other) &&
                    !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
                        typeof othCtor == 'function' && othCtor instanceof othCtor)) {
                    result = false;
                }
            }
            stack['delete'](object);
            stack['delete'](other);
            return result;
        }

        module.exports = equalObjects;


        /***/
    }),
    /* 168 */
    /***/
    (function(module, exports) {

        /**
         * A specialized version of `_.filter` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} predicate The function invoked per iteration.
         * @returns {Array} Returns the new filtered array.
         */
        function arrayFilter(array, predicate) {
            var index = -1,
                length = array == null ? 0 : array.length,
                resIndex = 0,
                result = [];

            while (++index < length) {
                var value = array[index];
                if (predicate(value, index, array)) {
                    result[resIndex++] = value;
                }
            }
            return result;
        }

        module.exports = arrayFilter;


        /***/
    }),
    /* 169 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(11),
            root = __webpack_require__(5);

        /* Built-in method references that are verified to be native. */
        var DataView = getNative(root, 'DataView');

        module.exports = DataView;


        /***/
    }),
    /* 170 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(11),
            root = __webpack_require__(5);

        /* Built-in method references that are verified to be native. */
        var Promise = getNative(root, 'Promise');

        module.exports = Promise;


        /***/
    }),
    /* 171 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(11),
            root = __webpack_require__(5);

        /* Built-in method references that are verified to be native. */
        var Set = getNative(root, 'Set');

        module.exports = Set;


        /***/
    }),
    /* 172 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(11),
            root = __webpack_require__(5);

        /* Built-in method references that are verified to be native. */
        var WeakMap = getNative(root, 'WeakMap');

        module.exports = WeakMap;


        /***/
    }),
    /* 173 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isStrictComparable = __webpack_require__(64),
            keys = __webpack_require__(14);

        /**
         * Gets the property names, values, and compare flags of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the match data of `object`.
         */
        function getMatchData(object) {
            var result = keys(object),
                length = result.length;

            while (length--) {
                var key = result[length],
                    value = object[key];

                result[length] = [key, value, isStrictComparable(value)];
            }
            return result;
        }

        module.exports = getMatchData;


        /***/
    }),
    /* 174 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsEqual = __webpack_require__(57),
            get = __webpack_require__(175),
            hasIn = __webpack_require__(181),
            isKey = __webpack_require__(38),
            isStrictComparable = __webpack_require__(64),
            matchesStrictComparable = __webpack_require__(65),
            toKey = __webpack_require__(22);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2;

        /**
         * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
         *
         * @private
         * @param {string} path The path of the property to get.
         * @param {*} srcValue The value to match.
         * @returns {Function} Returns the new spec function.
         */
        function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) {
                return matchesStrictComparable(toKey(path), srcValue);
            }
            return function(object) {
                var objValue = get(object, path);
                return (objValue === undefined && objValue === srcValue) ?
                    hasIn(object, path) :
                    baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            };
        }

        module.exports = baseMatchesProperty;


        /***/
    }),
    /* 175 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGet = __webpack_require__(66);

        /**
         * Gets the value at `path` of `object`. If the resolved value is
         * `undefined`, the `defaultValue` is returned in its place.
         *
         * @static
         * @memberOf _
         * @since 3.7.0
         * @category Object
         * @param {Object} object The object to query.
         * @param {Array|string} path The path of the property to get.
         * @param {*} [defaultValue] The value returned for `undefined` resolved values.
         * @returns {*} Returns the resolved value.
         * @example
         *
         * var object = { 'a': [{ 'b': { 'c': 3 } }] };
         *
         * _.get(object, 'a[0].b.c');
         * // => 3
         *
         * _.get(object, ['a', '0', 'b', 'c']);
         * // => 3
         *
         * _.get(object, 'a.b.c', 'default');
         * // => 'default'
         */
        function get(object, path, defaultValue) {
            var result = object == null ? undefined : baseGet(object, path);
            return result === undefined ? defaultValue : result;
        }

        module.exports = get;


        /***/
    }),
    /* 176 */
    /***/
    (function(module, exports, __webpack_require__) {

        var memoizeCapped = __webpack_require__(177);

        /** Used to match property names within property paths. */
        var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

        /** Used to match backslashes in property paths. */
        var reEscapeChar = /\\(\\)?/g;

        /**
         * Converts `string` to a property path array.
         *
         * @private
         * @param {string} string The string to convert.
         * @returns {Array} Returns the property path array.
         */
        var stringToPath = memoizeCapped(function(string) {
            var result = [];
            if (string.charCodeAt(0) === 46 /* . */ ) {
                result.push('');
            }
            string.replace(rePropName, function(match, number, quote, subString) {
                result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
            });
            return result;
        });

        module.exports = stringToPath;


        /***/
    }),
    /* 177 */
    /***/
    (function(module, exports, __webpack_require__) {

        var memoize = __webpack_require__(178);

        /** Used as the maximum memoize cache size. */
        var MAX_MEMOIZE_SIZE = 500;

        /**
         * A specialized version of `_.memoize` which clears the memoized function's
         * cache when it exceeds `MAX_MEMOIZE_SIZE`.
         *
         * @private
         * @param {Function} func The function to have its output memoized.
         * @returns {Function} Returns the new memoized function.
         */
        function memoizeCapped(func) {
            var result = memoize(func, function(key) {
                if (cache.size === MAX_MEMOIZE_SIZE) {
                    cache.clear();
                }
                return key;
            });

            var cache = result.cache;
            return result;
        }

        module.exports = memoizeCapped;


        /***/
    }),
    /* 178 */
    /***/
    (function(module, exports, __webpack_require__) {

        var MapCache = __webpack_require__(36);

        /** Error message constants. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /**
         * Creates a function that memoizes the result of `func`. If `resolver` is
         * provided, it determines the cache key for storing the result based on the
         * arguments provided to the memoized function. By default, the first argument
         * provided to the memoized function is used as the map cache key. The `func`
         * is invoked with the `this` binding of the memoized function.
         *
         * **Note:** The cache is exposed as the `cache` property on the memoized
         * function. Its creation may be customized by replacing the `_.memoize.Cache`
         * constructor with one whose instances implement the
         * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
         * method interface of `clear`, `delete`, `get`, `has`, and `set`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to have its output memoized.
         * @param {Function} [resolver] The function to resolve the cache key.
         * @returns {Function} Returns the new memoized function.
         * @example
         *
         * var object = { 'a': 1, 'b': 2 };
         * var other = { 'c': 3, 'd': 4 };
         *
         * var values = _.memoize(_.values);
         * values(object);
         * // => [1, 2]
         *
         * values(other);
         * // => [3, 4]
         *
         * object.a = 2;
         * values(object);
         * // => [1, 2]
         *
         * // Modify the result cache.
         * values.cache.set(object, ['a', 'b']);
         * values(object);
         * // => ['a', 'b']
         *
         * // Replace `_.memoize.Cache`.
         * _.memoize.Cache = WeakMap;
         */
        function memoize(func, resolver) {
            if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
                throw new TypeError(FUNC_ERROR_TEXT);
            }
            var memoized = function() {
                var args = arguments,
                    key = resolver ? resolver.apply(this, args) : args[0],
                    cache = memoized.cache;

                if (cache.has(key)) {
                    return cache.get(key);
                }
                var result = func.apply(this, args);
                memoized.cache = cache.set(key, result) || cache;
                return result;
            };
            memoized.cache = new(memoize.Cache || MapCache);
            return memoized;
        }

        // Expose `MapCache`.
        memoize.Cache = MapCache;

        module.exports = memoize;


        /***/
    }),
    /* 179 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseToString = __webpack_require__(180);

        /**
         * Converts `value` to a string. An empty string is returned for `null`
         * and `undefined` values. The sign of `-0` is preserved.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to convert.
         * @returns {string} Returns the converted string.
         * @example
         *
         * _.toString(null);
         * // => ''
         *
         * _.toString(-0);
         * // => '-0'
         *
         * _.toString([1, 2, 3]);
         * // => '1,2,3'
         */
        function toString(value) {
            return value == null ? '' : baseToString(value);
        }

        module.exports = toString;


        /***/
    }),
    /* 180 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(13),
            arrayMap = __webpack_require__(55),
            isArray = __webpack_require__(4),
            isSymbol = __webpack_require__(21);

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0;

        /** Used to convert symbols to primitives and strings. */
        var symbolProto = Symbol ? Symbol.prototype : undefined,
            symbolToString = symbolProto ? symbolProto.toString : undefined;

        /**
         * The base implementation of `_.toString` which doesn't convert nullish
         * values to empty strings.
         *
         * @private
         * @param {*} value The value to process.
         * @returns {string} Returns the string.
         */
        function baseToString(value) {
            // Exit early for strings to avoid a performance hit in some environments.
            if (typeof value == 'string') {
                return value;
            }
            if (isArray(value)) {
                // Recursively convert values (susceptible to call stack limits).
                return arrayMap(value, baseToString) + '';
            }
            if (isSymbol(value)) {
                return symbolToString ? symbolToString.call(value) : '';
            }
            var result = (value + '');
            return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
        }

        module.exports = baseToString;


        /***/
    }),
    /* 181 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseHasIn = __webpack_require__(182),
            hasPath = __webpack_require__(183);

        /**
         * Checks if `path` is a direct or inherited property of `object`.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Object
         * @param {Object} object The object to query.
         * @param {Array|string} path The path to check.
         * @returns {boolean} Returns `true` if `path` exists, else `false`.
         * @example
         *
         * var object = _.create({ 'a': _.create({ 'b': 2 }) });
         *
         * _.hasIn(object, 'a');
         * // => true
         *
         * _.hasIn(object, 'a.b');
         * // => true
         *
         * _.hasIn(object, ['a', 'b']);
         * // => true
         *
         * _.hasIn(object, 'b');
         * // => false
         */
        function hasIn(object, path) {
            return object != null && hasPath(object, path, baseHasIn);
        }

        module.exports = hasIn;


        /***/
    }),
    /* 182 */
    /***/
    (function(module, exports) {

        /**
         * The base implementation of `_.hasIn` without support for deep paths.
         *
         * @private
         * @param {Object} [object] The object to query.
         * @param {Array|string} key The key to check.
         * @returns {boolean} Returns `true` if `key` exists, else `false`.
         */
        function baseHasIn(object, key) {
            return object != null && key in Object(object);
        }

        module.exports = baseHasIn;


        /***/
    }),
    /* 183 */
    /***/
    (function(module, exports, __webpack_require__) {

        var castPath = __webpack_require__(67),
            isArguments = __webpack_require__(48),
            isArray = __webpack_require__(4),
            isIndex = __webpack_require__(49),
            isLength = __webpack_require__(28),
            toKey = __webpack_require__(22);

        /**
         * Checks if `path` exists on `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {Array|string} path The path to check.
         * @param {Function} hasFunc The function to check properties.
         * @returns {boolean} Returns `true` if `path` exists, else `false`.
         */
        function hasPath(object, path, hasFunc) {
            path = castPath(path, object);

            var index = -1,
                length = path.length,
                result = false;

            while (++index < length) {
                var key = toKey(path[index]);
                if (!(result = object != null && hasFunc(object, key))) {
                    break;
                }
                object = object[key];
            }
            if (result || ++index != length) {
                return result;
            }
            length = object == null ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) &&
                (isArray(object) || isArguments(object));
        }

        module.exports = hasPath;


        /***/
    }),
    /* 184 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseProperty = __webpack_require__(185),
            basePropertyDeep = __webpack_require__(186),
            isKey = __webpack_require__(38),
            toKey = __webpack_require__(22);

        /**
         * Creates a function that returns the value at `path` of a given object.
         *
         * @static
         * @memberOf _
         * @since 2.4.0
         * @category Util
         * @param {Array|string} path The path of the property to get.
         * @returns {Function} Returns the new accessor function.
         * @example
         *
         * var objects = [
         *   { 'a': { 'b': 2 } },
         *   { 'a': { 'b': 1 } }
         * ];
         *
         * _.map(objects, _.property('a.b'));
         * // => [2, 1]
         *
         * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
         * // => [1, 2]
         */
        function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }

        module.exports = property;


        /***/
    }),
    /* 185 */
    /***/
    (function(module, exports) {

        /**
         * The base implementation of `_.property` without support for deep paths.
         *
         * @private
         * @param {string} key The key of the property to get.
         * @returns {Function} Returns the new accessor function.
         */
        function baseProperty(key) {
            return function(object) {
                return object == null ? undefined : object[key];
            };
        }

        module.exports = baseProperty;


        /***/
    }),
    /* 186 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGet = __webpack_require__(66);

        /**
         * A specialized version of `baseProperty` which supports deep paths.
         *
         * @private
         * @param {Array|string} path The path of the property to get.
         * @returns {Function} Returns the new accessor function.
         */
        function basePropertyDeep(path) {
            return function(object) {
                return baseGet(object, path);
            };
        }

        module.exports = basePropertyDeep;


        /***/
    }),
    /* 187 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseEach = __webpack_require__(68),
            isArrayLike = __webpack_require__(15);

        /**
         * The base implementation of `_.map` without support for iteratee shorthands.
         *
         * @private
         * @param {Array|Object} collection The collection to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns the new mapped array.
         */
        function baseMap(collection, iteratee) {
            var index = -1,
                result = isArrayLike(collection) ? Array(collection.length) : [];

            baseEach(collection, function(value, key, collection) {
                result[++index] = iteratee(value, key, collection);
            });
            return result;
        }

        module.exports = baseMap;


        /***/
    }),
    /* 188 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isArrayLike = __webpack_require__(15);

        /**
         * Creates a `baseEach` or `baseEachRight` function.
         *
         * @private
         * @param {Function} eachFunc The function to iterate over a collection.
         * @param {boolean} [fromRight] Specify iterating from right to left.
         * @returns {Function} Returns the new base function.
         */
        function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee) {
                if (collection == null) {
                    return collection;
                }
                if (!isArrayLike(collection)) {
                    return eachFunc(collection, iteratee);
                }
                var length = collection.length,
                    index = fromRight ? length : -1,
                    iterable = Object(collection);

                while ((fromRight ? index-- : ++index < length)) {
                    if (iteratee(iterable[index], index, iterable) === false) {
                        break;
                    }
                }
                return collection;
            };
        }

        module.exports = createBaseEach;


        /***/
    }),
    /* 189 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.mergeClasses = undefined;

        var _forOwn2 = __webpack_require__(25);

        var _forOwn3 = _interopRequireDefault(_forOwn2);

        var _cloneDeep2 = __webpack_require__(190);

        var _cloneDeep3 = _interopRequireDefault(_cloneDeep2);

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var mergeClasses = exports.mergeClasses = function mergeClasses(classes) {
            var activeNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

            var styles = classes.default && (0, _cloneDeep3.default)(classes.default) || {};
            activeNames.map(function(name) {
                var toMerge = classes[name];
                if (toMerge) {
                    (0, _forOwn3.default)(toMerge, function(value, key) {
                        if (!styles[key]) {
                            styles[key] = {};
                        }

                        styles[key] = _extends({}, styles[key], toMerge[key]);
                    });
                }

                return name;
            });
            return styles;
        };

        exports.default = mergeClasses;

        /***/
    }),
    /* 190 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseClone = __webpack_require__(191);

        /** Used to compose bitmasks for cloning. */
        var CLONE_DEEP_FLAG = 1,
            CLONE_SYMBOLS_FLAG = 4;

        /**
         * This method is like `_.clone` except that it recursively clones `value`.
         *
         * @static
         * @memberOf _
         * @since 1.0.0
         * @category Lang
         * @param {*} value The value to recursively clone.
         * @returns {*} Returns the deep cloned value.
         * @see _.clone
         * @example
         *
         * var objects = [{ 'a': 1 }, { 'b': 2 }];
         *
         * var deep = _.cloneDeep(objects);
         * console.log(deep[0] === objects[0]);
         * // => false
         */
        function cloneDeep(value) {
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }

        module.exports = cloneDeep;


        /***/
    }),
    /* 191 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Stack = __webpack_require__(33),
            arrayEach = __webpack_require__(69),
            assignValue = __webpack_require__(70),
            baseAssign = __webpack_require__(193),
            baseAssignIn = __webpack_require__(194),
            cloneBuffer = __webpack_require__(197),
            copyArray = __webpack_require__(198),
            copySymbols = __webpack_require__(199),
            copySymbolsIn = __webpack_require__(200),
            getAllKeys = __webpack_require__(60),
            getAllKeysIn = __webpack_require__(201),
            getTag = __webpack_require__(20),
            initCloneArray = __webpack_require__(202),
            initCloneByTag = __webpack_require__(203),
            initCloneObject = __webpack_require__(208),
            isArray = __webpack_require__(4),
            isBuffer = __webpack_require__(26),
            isMap = __webpack_require__(210),
            isObject = __webpack_require__(8),
            isSet = __webpack_require__(212),
            keys = __webpack_require__(14);

        /** Used to compose bitmasks for cloning. */
        var CLONE_DEEP_FLAG = 1,
            CLONE_FLAT_FLAG = 2,
            CLONE_SYMBOLS_FLAG = 4;

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]',
            arrayTag = '[object Array]',
            boolTag = '[object Boolean]',
            dateTag = '[object Date]',
            errorTag = '[object Error]',
            funcTag = '[object Function]',
            genTag = '[object GeneratorFunction]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            objectTag = '[object Object]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            symbolTag = '[object Symbol]',
            weakMapTag = '[object WeakMap]';

        var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]',
            float32Tag = '[object Float32Array]',
            float64Tag = '[object Float64Array]',
            int8Tag = '[object Int8Array]',
            int16Tag = '[object Int16Array]',
            int32Tag = '[object Int32Array]',
            uint8Tag = '[object Uint8Array]',
            uint8ClampedTag = '[object Uint8ClampedArray]',
            uint16Tag = '[object Uint16Array]',
            uint32Tag = '[object Uint32Array]';

        /** Used to identify `toStringTag` values supported by `_.clone`. */
        var cloneableTags = {};
        cloneableTags[argsTag] = cloneableTags[arrayTag] =
            cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
            cloneableTags[boolTag] = cloneableTags[dateTag] =
            cloneableTags[float32Tag] = cloneableTags[float64Tag] =
            cloneableTags[int8Tag] = cloneableTags[int16Tag] =
            cloneableTags[int32Tag] = cloneableTags[mapTag] =
            cloneableTags[numberTag] = cloneableTags[objectTag] =
            cloneableTags[regexpTag] = cloneableTags[setTag] =
            cloneableTags[stringTag] = cloneableTags[symbolTag] =
            cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
            cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
        cloneableTags[errorTag] = cloneableTags[funcTag] =
            cloneableTags[weakMapTag] = false;

        /**
         * The base implementation of `_.clone` and `_.cloneDeep` which tracks
         * traversed objects.
         *
         * @private
         * @param {*} value The value to clone.
         * @param {boolean} bitmask The bitmask flags.
         *  1 - Deep clone
         *  2 - Flatten inherited properties
         *  4 - Clone symbols
         * @param {Function} [customizer] The function to customize cloning.
         * @param {string} [key] The key of `value`.
         * @param {Object} [object] The parent object of `value`.
         * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
         * @returns {*} Returns the cloned value.
         */
        function baseClone(value, bitmask, customizer, key, object, stack) {
            var result,
                isDeep = bitmask & CLONE_DEEP_FLAG,
                isFlat = bitmask & CLONE_FLAT_FLAG,
                isFull = bitmask & CLONE_SYMBOLS_FLAG;

            if (customizer) {
                result = object ? customizer(value, key, object, stack) : customizer(value);
            }
            if (result !== undefined) {
                return result;
            }
            if (!isObject(value)) {
                return value;
            }
            var isArr = isArray(value);
            if (isArr) {
                result = initCloneArray(value);
                if (!isDeep) {
                    return copyArray(value, result);
                }
            } else {
                var tag = getTag(value),
                    isFunc = tag == funcTag || tag == genTag;

                if (isBuffer(value)) {
                    return cloneBuffer(value, isDeep);
                }
                if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
                    result = (isFlat || isFunc) ? {} : initCloneObject(value);
                    if (!isDeep) {
                        return isFlat ?
                            copySymbolsIn(value, baseAssignIn(result, value)) :
                            copySymbols(value, baseAssign(result, value));
                    }
                } else {
                    if (!cloneableTags[tag]) {
                        return object ? value : {};
                    }
                    result = initCloneByTag(value, tag, isDeep);
                }
            }
            // Check for circular references and return its corresponding clone.
            stack || (stack = new Stack);
            var stacked = stack.get(value);
            if (stacked) {
                return stacked;
            }
            stack.set(value, result);

            if (isSet(value)) {
                value.forEach(function(subValue) {
                    result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
                });

                return result;
            }

            if (isMap(value)) {
                value.forEach(function(subValue, key) {
                    result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
                });

                return result;
            }

            var keysFunc = isFull ?
                (isFlat ? getAllKeysIn : getAllKeys) :
                (isFlat ? keysIn : keys);

            var props = isArr ? undefined : keysFunc(value);
            arrayEach(props || value, function(subValue, key) {
                if (props) {
                    key = subValue;
                    subValue = value[key];
                }
                // Recursively populate clone (susceptible to call stack limits).
                assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
            });
            return result;
        }

        module.exports = baseClone;


        /***/
    }),
    /* 192 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(11);

        var defineProperty = (function() {
            try {
                var func = getNative(Object, 'defineProperty');
                func({}, '', {});
                return func;
            } catch (e) {}
        }());

        module.exports = defineProperty;


        /***/
    }),
    /* 193 */
    /***/
    (function(module, exports, __webpack_require__) {

        var copyObject = __webpack_require__(23),
            keys = __webpack_require__(14);

        /**
         * The base implementation of `_.assign` without support for multiple sources
         * or `customizer` functions.
         *
         * @private
         * @param {Object} object The destination object.
         * @param {Object} source The source object.
         * @returns {Object} Returns `object`.
         */
        function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
        }

        module.exports = baseAssign;


        /***/
    }),
    /* 194 */
    /***/
    (function(module, exports, __webpack_require__) {

        var copyObject = __webpack_require__(23),
            keysIn = __webpack_require__(72);

        /**
         * The base implementation of `_.assignIn` without support for multiple sources
         * or `customizer` functions.
         *
         * @private
         * @param {Object} object The destination object.
         * @param {Object} source The source object.
         * @returns {Object} Returns `object`.
         */
        function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object);
        }

        module.exports = baseAssignIn;


        /***/
    }),
    /* 195 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(8),
            isPrototype = __webpack_require__(31),
            nativeKeysIn = __webpack_require__(196);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         */
        function baseKeysIn(object) {
            if (!isObject(object)) {
                return nativeKeysIn(object);
            }
            var isProto = isPrototype(object),
                result = [];

            for (var key in object) {
                if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
                    result.push(key);
                }
            }
            return result;
        }

        module.exports = baseKeysIn;


        /***/
    }),
    /* 196 */
    /***/
    (function(module, exports) {

        /**
         * This function is like
         * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
         * except that it includes inherited enumerable properties.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         */
        function nativeKeysIn(object) {
            var result = [];
            if (object != null) {
                for (var key in Object(object)) {
                    result.push(key);
                }
            }
            return result;
        }

        module.exports = nativeKeysIn;


        /***/
    }),
    /* 197 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(module) {
            var root = __webpack_require__(5);

            /** Detect free variable `exports`. */
            var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

            /** Detect free variable `module`. */
            var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports;

            /** Built-in value references. */
            var Buffer = moduleExports ? root.Buffer : undefined,
                allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

            /**
             * Creates a clone of  `buffer`.
             *
             * @private
             * @param {Buffer} buffer The buffer to clone.
             * @param {boolean} [isDeep] Specify a deep clone.
             * @returns {Buffer} Returns the cloned buffer.
             */
            function cloneBuffer(buffer, isDeep) {
                if (isDeep) {
                    return buffer.slice();
                }
                var length = buffer.length,
                    result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

                buffer.copy(result);
                return result;
            }

            module.exports = cloneBuffer;

            /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(27)(module)))

        /***/
    }),
    /* 198 */
    /***/
    (function(module, exports) {

        /**
         * Copies the values of `source` to `array`.
         *
         * @private
         * @param {Array} source The array to copy values from.
         * @param {Array} [array=[]] The array to copy values to.
         * @returns {Array} Returns `array`.
         */
        function copyArray(source, array) {
            var index = -1,
                length = source.length;

            array || (array = Array(length));
            while (++index < length) {
                array[index] = source[index];
            }
            return array;
        }

        module.exports = copyArray;


        /***/
    }),
    /* 199 */
    /***/
    (function(module, exports, __webpack_require__) {

        var copyObject = __webpack_require__(23),
            getSymbols = __webpack_require__(37);

        /**
         * Copies own symbols of `source` to `object`.
         *
         * @private
         * @param {Object} source The object to copy symbols from.
         * @param {Object} [object={}] The object to copy symbols to.
         * @returns {Object} Returns `object`.
         */
        function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
        }

        module.exports = copySymbols;


        /***/
    }),
    /* 200 */
    /***/
    (function(module, exports, __webpack_require__) {

        var copyObject = __webpack_require__(23),
            getSymbolsIn = __webpack_require__(73);

        /**
         * Copies own and inherited symbols of `source` to `object`.
         *
         * @private
         * @param {Object} source The object to copy symbols from.
         * @param {Object} [object={}] The object to copy symbols to.
         * @returns {Object} Returns `object`.
         */
        function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object);
        }

        module.exports = copySymbolsIn;


        /***/
    }),
    /* 201 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetAllKeys = __webpack_require__(61),
            getSymbolsIn = __webpack_require__(73),
            keysIn = __webpack_require__(72);

        /**
         * Creates an array of own and inherited enumerable property names and
         * symbols of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names and symbols.
         */
        function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }

        module.exports = getAllKeysIn;


        /***/
    }),
    /* 202 */
    /***/
    (function(module, exports) {

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Initializes an array clone.
         *
         * @private
         * @param {Array} array The array to clone.
         * @returns {Array} Returns the initialized clone.
         */
        function initCloneArray(array) {
            var length = array.length,
                result = new array.constructor(length);

            // Add properties assigned by `RegExp#exec`.
            if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
                result.index = array.index;
                result.input = array.input;
            }
            return result;
        }

        module.exports = initCloneArray;


        /***/
    }),
    /* 203 */
    /***/
    (function(module, exports, __webpack_require__) {

        var cloneArrayBuffer = __webpack_require__(39),
            cloneDataView = __webpack_require__(204),
            cloneRegExp = __webpack_require__(205),
            cloneSymbol = __webpack_require__(206),
            cloneTypedArray = __webpack_require__(207);

        /** `Object#toString` result references. */
        var boolTag = '[object Boolean]',
            dateTag = '[object Date]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            symbolTag = '[object Symbol]';

        var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]',
            float32Tag = '[object Float32Array]',
            float64Tag = '[object Float64Array]',
            int8Tag = '[object Int8Array]',
            int16Tag = '[object Int16Array]',
            int32Tag = '[object Int32Array]',
            uint8Tag = '[object Uint8Array]',
            uint8ClampedTag = '[object Uint8ClampedArray]',
            uint16Tag = '[object Uint16Array]',
            uint32Tag = '[object Uint32Array]';

        /**
         * Initializes an object clone based on its `toStringTag`.
         *
         * **Note:** This function only supports cloning values with tags of
         * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
         *
         * @private
         * @param {Object} object The object to clone.
         * @param {string} tag The `toStringTag` of the object to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the initialized clone.
         */
        function initCloneByTag(object, tag, isDeep) {
            var Ctor = object.constructor;
            switch (tag) {
                case arrayBufferTag:
                    return cloneArrayBuffer(object);

                case boolTag:
                case dateTag:
                    return new Ctor(+object);

                case dataViewTag:
                    return cloneDataView(object, isDeep);

                case float32Tag:
                case float64Tag:
                case int8Tag:
                case int16Tag:
                case int32Tag:
                case uint8Tag:
                case uint8ClampedTag:
                case uint16Tag:
                case uint32Tag:
                    return cloneTypedArray(object, isDeep);

                case mapTag:
                    return new Ctor;

                case numberTag:
                case stringTag:
                    return new Ctor(object);

                case regexpTag:
                    return cloneRegExp(object);

                case setTag:
                    return new Ctor;

                case symbolTag:
                    return cloneSymbol(object);
            }
        }

        module.exports = initCloneByTag;


        /***/
    }),
    /* 204 */
    /***/
    (function(module, exports, __webpack_require__) {

        var cloneArrayBuffer = __webpack_require__(39);

        /**
         * Creates a clone of `dataView`.
         *
         * @private
         * @param {Object} dataView The data view to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned data view.
         */
        function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }

        module.exports = cloneDataView;


        /***/
    }),
    /* 205 */
    /***/
    (function(module, exports) {

        /** Used to match `RegExp` flags from their coerced string values. */
        var reFlags = /\w*$/;

        /**
         * Creates a clone of `regexp`.
         *
         * @private
         * @param {Object} regexp The regexp to clone.
         * @returns {Object} Returns the cloned regexp.
         */
        function cloneRegExp(regexp) {
            var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
            result.lastIndex = regexp.lastIndex;
            return result;
        }

        module.exports = cloneRegExp;


        /***/
    }),
    /* 206 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(13);

        /** Used to convert symbols to primitives and strings. */
        var symbolProto = Symbol ? Symbol.prototype : undefined,
            symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

        /**
         * Creates a clone of the `symbol` object.
         *
         * @private
         * @param {Object} symbol The symbol object to clone.
         * @returns {Object} Returns the cloned symbol object.
         */
        function cloneSymbol(symbol) {
            return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
        }

        module.exports = cloneSymbol;


        /***/
    }),
    /* 207 */
    /***/
    (function(module, exports, __webpack_require__) {

        var cloneArrayBuffer = __webpack_require__(39);

        /**
         * Creates a clone of `typedArray`.
         *
         * @private
         * @param {Object} typedArray The typed array to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned typed array.
         */
        function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }

        module.exports = cloneTypedArray;


        /***/
    }),
    /* 208 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseCreate = __webpack_require__(209),
            getPrototype = __webpack_require__(32),
            isPrototype = __webpack_require__(31);

        /**
         * Initializes an object clone.
         *
         * @private
         * @param {Object} object The object to clone.
         * @returns {Object} Returns the initialized clone.
         */
        function initCloneObject(object) {
            return (typeof object.constructor == 'function' && !isPrototype(object)) ?
                baseCreate(getPrototype(object)) :
                {};
        }

        module.exports = initCloneObject;


        /***/
    }),
    /* 209 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(8);

        /** Built-in value references. */
        var objectCreate = Object.create;

        /**
         * The base implementation of `_.create` without support for assigning
         * properties to the created object.
         *
         * @private
         * @param {Object} proto The object to inherit from.
         * @returns {Object} Returns the new object.
         */
        var baseCreate = (function() {
            function object() {}
            return function(proto) {
                if (!isObject(proto)) {
                    return {};
                }
                if (objectCreate) {
                    return objectCreate(proto);
                }
                object.prototype = proto;
                var result = new object;
                object.prototype = undefined;
                return result;
            };
        }());

        module.exports = baseCreate;


        /***/
    }),
    /* 210 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsMap = __webpack_require__(211),
            baseUnary = __webpack_require__(29),
            nodeUtil = __webpack_require__(30);

        /* Node.js helper references. */
        var nodeIsMap = nodeUtil && nodeUtil.isMap;

        /**
         * Checks if `value` is classified as a `Map` object.
         *
         * @static
         * @memberOf _
         * @since 4.3.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a map, else `false`.
         * @example
         *
         * _.isMap(new Map);
         * // => true
         *
         * _.isMap(new WeakMap);
         * // => false
         */
        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

        module.exports = isMap;


        /***/
    }),
    /* 211 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getTag = __webpack_require__(20),
            isObjectLike = __webpack_require__(7);

        /** `Object#toString` result references. */
        var mapTag = '[object Map]';

        /**
         * The base implementation of `_.isMap` without Node.js optimizations.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a map, else `false`.
         */
        function baseIsMap(value) {
            return isObjectLike(value) && getTag(value) == mapTag;
        }

        module.exports = baseIsMap;


        /***/
    }),
    /* 212 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsSet = __webpack_require__(213),
            baseUnary = __webpack_require__(29),
            nodeUtil = __webpack_require__(30);

        /* Node.js helper references. */
        var nodeIsSet = nodeUtil && nodeUtil.isSet;

        /**
         * Checks if `value` is classified as a `Set` object.
         *
         * @static
         * @memberOf _
         * @since 4.3.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a set, else `false`.
         * @example
         *
         * _.isSet(new Set);
         * // => true
         *
         * _.isSet(new WeakSet);
         * // => false
         */
        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

        module.exports = isSet;


        /***/
    }),
    /* 213 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getTag = __webpack_require__(20),
            isObjectLike = __webpack_require__(7);

        /** `Object#toString` result references. */
        var setTag = '[object Set]';

        /**
         * The base implementation of `_.isSet` without Node.js optimizations.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a set, else `false`.
         */
        function baseIsSet(value) {
            return isObjectLike(value) && getTag(value) == setTag;
        }

        module.exports = baseIsSet;


        /***/
    }),
    /* 214 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.autoprefix = undefined;

        var _forOwn2 = __webpack_require__(25);

        var _forOwn3 = _interopRequireDefault(_forOwn2);

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var transforms = {
            borderRadius: function borderRadius(value) {
                return {
                    msBorderRadius: value,
                    MozBorderRadius: value,
                    OBorderRadius: value,
                    WebkitBorderRadius: value,
                    borderRadius: value
                };
            },
            boxShadow: function boxShadow(value) {
                return {
                    msBoxShadow: value,
                    MozBoxShadow: value,
                    OBoxShadow: value,
                    WebkitBoxShadow: value,
                    boxShadow: value
                };
            },
            userSelect: function userSelect(value) {
                return {
                    WebkitTouchCallout: value,
                    KhtmlUserSelect: value,
                    MozUserSelect: value,
                    msUserSelect: value,
                    WebkitUserSelect: value,
                    userSelect: value
                };
            },

            flex: function flex(value) {
                return {
                    WebkitBoxFlex: value,
                    MozBoxFlex: value,
                    WebkitFlex: value,
                    msFlex: value,
                    flex: value
                };
            },
            flexBasis: function flexBasis(value) {
                return {
                    WebkitFlexBasis: value,
                    flexBasis: value
                };
            },
            justifyContent: function justifyContent(value) {
                return {
                    WebkitJustifyContent: value,
                    justifyContent: value
                };
            },

            transition: function transition(value) {
                return {
                    msTransition: value,
                    MozTransition: value,
                    OTransition: value,
                    WebkitTransition: value,
                    transition: value
                };
            },

            transform: function transform(value) {
                return {
                    msTransform: value,
                    MozTransform: value,
                    OTransform: value,
                    WebkitTransform: value,
                    transform: value
                };
            },
            absolute: function absolute(value) {
                var direction = value && value.split(' ');
                return {
                    position: 'absolute',
                    top: direction && direction[0],
                    right: direction && direction[1],
                    bottom: direction && direction[2],
                    left: direction && direction[3]
                };
            },
            extend: function extend(name, otherElementStyles) {
                var otherStyle = otherElementStyles[name];
                if (otherStyle) {
                    return otherStyle;
                }
                return {
                    'extend': name
                };
            }
        };

        var autoprefix = exports.autoprefix = function autoprefix(elements) {
            var prefixed = {};
            (0, _forOwn3.default)(elements, function(styles, element) {
                var expanded = {};
                (0, _forOwn3.default)(styles, function(value, key) {
                    var transform = transforms[key];
                    if (transform) {
                        expanded = _extends({}, expanded, transform(value));
                    } else {
                        expanded[key] = value;
                    }
                });
                prefixed[element] = expanded;
            });
            return prefixed;
        };

        exports.default = autoprefix;

        /***/
    }),
    /* 215 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.hover = undefined;

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var hover = exports.hover = function hover(Component) {
            var Span = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'span';

            return function(_React$Component) {
                _inherits(Hover, _React$Component);

                function Hover() {
                    var _ref;

                    var _temp, _this, _ret;

                    _classCallCheck(this, Hover);

                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                        args[_key] = arguments[_key];
                    }

                    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Hover.__proto__ || Object.getPrototypeOf(Hover)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
                        hover: false
                    }, _this.handleMouseOver = function() {
                        return _this.setState({
                            hover: true
                        });
                    }, _this.handleMouseOut = function() {
                        return _this.setState({
                            hover: false
                        });
                    }, _this.render = function() {
                        return _react2.default.createElement(
                            Span, {
                                onMouseOver: _this.handleMouseOver,
                                onMouseOut: _this.handleMouseOut
                            },
                            _react2.default.createElement(Component, _extends({}, _this.props, _this.state))
                        );
                    }, _temp), _possibleConstructorReturn(_this, _ret);
                }

                return Hover;
            }(_react2.default.Component);
        };

        exports.default = hover;

        /***/
    }),
    /* 216 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.active = undefined;

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var active = exports.active = function active(Component) {
            var Span = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'span';

            return function(_React$Component) {
                _inherits(Active, _React$Component);

                function Active() {
                    var _ref;

                    var _temp, _this, _ret;

                    _classCallCheck(this, Active);

                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                        args[_key] = arguments[_key];
                    }

                    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Active.__proto__ || Object.getPrototypeOf(Active)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
                        active: false
                    }, _this.handleMouseDown = function() {
                        return _this.setState({
                            active: true
                        });
                    }, _this.handleMouseUp = function() {
                        return _this.setState({
                            active: false
                        });
                    }, _this.render = function() {
                        return _react2.default.createElement(
                            Span, {
                                onMouseDown: _this.handleMouseDown,
                                onMouseUp: _this.handleMouseUp
                            },
                            _react2.default.createElement(Component, _extends({}, _this.props, _this.state))
                        );
                    }, _temp), _possibleConstructorReturn(_this, _ret);
                }

                return Active;
            }(_react2.default.Component);
        };

        exports.default = active;

        /***/
    }),
    /* 217 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var loopable = function loopable(i, length) {
            var props = {};
            var setProp = function setProp(name) {
                var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

                props[name] = value;
            };

            i === 0 && setProp('first-child');
            i === length - 1 && setProp('last-child');
            (i === 0 || i % 2 === 0) && setProp('even');
            Math.abs(i % 2) === 1 && setProp('odd');
            setProp('nth-child', i);

            return props;
        };

        exports.default = loopable;

        /***/
    }),
    /* 218 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Alpha = undefined;

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _alpha = __webpack_require__(219);

        var alpha = _interopRequireWildcard(_alpha);

        var _Checkboard = __webpack_require__(74);

        var _Checkboard2 = _interopRequireDefault(_Checkboard);

        function _interopRequireWildcard(obj) {
            if (obj && obj.__esModule) {
                return obj;
            } else {
                var newObj = {};
                if (obj != null) {
                    for (var key in obj) {
                        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                    }
                }
                newObj.default = obj;
                return newObj;
            }
        }

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var Alpha = exports.Alpha = function(_ref) {
            _inherits(Alpha, _ref);

            function Alpha() {
                var _ref2;

                var _temp, _this, _ret;

                _classCallCheck(this, Alpha);

                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Alpha.__proto__ || Object.getPrototypeOf(Alpha)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e, skip) {
                    var change = alpha.calculateChange(e, skip, _this.props, _this.container);
                    change && _this.props.onChange && _this.props.onChange(change, e);
                }, _this.handleMouseDown = function(e) {
                    _this.handleChange(e, true);
                    window.addEventListener('mousemove', _this.handleChange);
                    window.addEventListener('mouseup', _this.handleMouseUp);
                }, _this.handleMouseUp = function() {
                    _this.unbindEventListeners();
                }, _this.unbindEventListeners = function() {
                    window.removeEventListener('mousemove', _this.handleChange);
                    window.removeEventListener('mouseup', _this.handleMouseUp);
                }, _temp), _possibleConstructorReturn(_this, _ret);
            }

            _createClass(Alpha, [{
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    this.unbindEventListeners();
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this2 = this;

                    var rgb = this.props.rgb;
                    var styles = (0, _reactcss2.default)({
                        'default': {
                            alpha: {
                                absolute: '0px 0px 0px 0px',
                                borderRadius: this.props.radius
                            },
                            checkboard: {
                                absolute: '0px 0px 0px 0px',
                                overflow: 'hidden',
                                borderRadius: this.props.radius
                            },
                            gradient: {
                                absolute: '0px 0px 0px 0px',
                                background: 'linear-gradient(to right, rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ', 0) 0%,\n           rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ', 1) 100%)',
                                boxShadow: this.props.shadow,
                                borderRadius: this.props.radius
                            },
                            container: {
                                position: 'relative',
                                height: '100%',
                                margin: '0 3px'
                            },
                            pointer: {
                                position: 'absolute',
                                left: rgb.a * 100 + '%'
                            },
                            slider: {
                                width: '4px',
                                borderRadius: '1px',
                                height: '8px',
                                boxShadow: '0 0 2px rgba(0, 0, 0, .6)',
                                background: '#fff',
                                marginTop: '1px',
                                transform: 'translateX(-2px)'
                            }
                        },
                        'vertical': {
                            gradient: {
                                background: 'linear-gradient(to bottom, rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ', 0) 0%,\n           rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ', 1) 100%)'
                            },
                            pointer: {
                                left: 0,
                                top: rgb.a * 100 + '%'
                            }
                        },
                        'overwrite': _extends({}, this.props.style)
                    }, {
                        vertical: this.props.direction === 'vertical',
                        overwrite: true
                    });

                    return _react2.default.createElement(
                        'div', {
                            style: styles.alpha
                        },
                        _react2.default.createElement(
                            'div', {
                                style: styles.checkboard
                            },
                            _react2.default.createElement(_Checkboard2.default, {
                                renderers: this.props.renderers
                            })
                        ),
                        _react2.default.createElement('div', {
                            style: styles.gradient
                        }),
                        _react2.default.createElement(
                            'div', {
                                style: styles.container,
                                ref: function ref(container) {
                                    return _this2.container = container;
                                },
                                onMouseDown: this.handleMouseDown,
                                onTouchMove: this.handleChange,
                                onTouchStart: this.handleChange
                            },
                            _react2.default.createElement(
                                'div', {
                                    style: styles.pointer
                                },
                                this.props.pointer ? _react2.default.createElement(this.props.pointer, this.props) : _react2.default.createElement('div', {
                                    style: styles.slider
                                })
                            )
                        )
                    );
                }
            }]);

            return Alpha;
        }(_react.PureComponent || _react.Component);

        exports.default = Alpha;

        /***/
    }),
    /* 219 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var calculateChange = exports.calculateChange = function calculateChange(e, skip, props, container) {
            e.preventDefault();
            var containerWidth = container.clientWidth;
            var containerHeight = container.clientHeight;
            var x = typeof e.pageX === 'number' ? e.pageX : e.touches[0].pageX;
            var y = typeof e.pageY === 'number' ? e.pageY : e.touches[0].pageY;
            var left = x - (container.getBoundingClientRect().left + window.pageXOffset);
            var top = y - (container.getBoundingClientRect().top + window.pageYOffset);

            if (props.direction === 'vertical') {
                var a = void 0;
                if (top < 0) {
                    a = 0;
                } else if (top > containerHeight) {
                    a = 1;
                } else {
                    a = Math.round(top * 100 / containerHeight) / 100;
                }

                if (props.hsl.a !== a) {
                    return {
                        h: props.hsl.h,
                        s: props.hsl.s,
                        l: props.hsl.l,
                        a: a,
                        source: 'rgb'
                    };
                }
            } else {
                var _a = void 0;
                if (left < 0) {
                    _a = 0;
                } else if (left > containerWidth) {
                    _a = 1;
                } else {
                    _a = Math.round(left * 100 / containerWidth) / 100;
                }

                if (props.a !== _a) {
                    return {
                        h: props.hsl.h,
                        s: props.hsl.s,
                        l: props.hsl.l,
                        a: _a,
                        source: 'rgb'
                    };
                }
            }
            return null;
        };

        /***/
    }),
    /* 220 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var checkboardCache = {};

        var render = exports.render = function render(c1, c2, size, serverCanvas) {
            if (typeof document === 'undefined' && !serverCanvas) {
                return null;
            }
            var canvas = serverCanvas ? new serverCanvas() : document.createElement('canvas');
            canvas.width = size * 2;
            canvas.height = size * 2;
            var ctx = canvas.getContext('2d');
            if (!ctx) {
                return null;
            } // If no context can be found, return early.
            ctx.fillStyle = c1;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = c2;
            ctx.fillRect(0, 0, size, size);
            ctx.translate(size, size);
            ctx.fillRect(0, 0, size, size);
            return canvas.toDataURL();
        };

        var get = exports.get = function get(c1, c2, size, serverCanvas) {
            var key = c1 + '-' + c2 + '-' + size + (serverCanvas ? '-server' : '');
            var checkboard = render(c1, c2, size, serverCanvas);

            if (checkboardCache[key]) {
                return checkboardCache[key];
            }
            checkboardCache[key] = checkboard;
            return checkboard;
        };

        /***/
    }),
    /* 221 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.EditableInput = undefined;

        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _defineProperty(obj, key, value) {
            if (key in obj) {
                Object.defineProperty(obj, key, {
                    value: value,
                    enumerable: true,
                    configurable: true,
                    writable: true
                });
            } else {
                obj[key] = value;
            }
            return obj;
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var EditableInput = exports.EditableInput = function(_ref) {
            _inherits(EditableInput, _ref);

            function EditableInput(props) {
                _classCallCheck(this, EditableInput);

                var _this = _possibleConstructorReturn(this, (EditableInput.__proto__ || Object.getPrototypeOf(EditableInput)).call(this));

                _this.handleBlur = function() {
                    if (_this.state.blurValue) {
                        _this.setState({
                            value: _this.state.blurValue,
                            blurValue: null
                        });
                    }
                };

                _this.handleChange = function(e) {
                    if (_this.props.label) {
                        _this.props.onChange && _this.props.onChange(_defineProperty({}, _this.props.label, e.target.value), e);
                    } else {
                        _this.props.onChange && _this.props.onChange(e.target.value, e);
                    }

                    _this.setState({
                        value: e.target.value
                    });
                };

                _this.handleKeyDown = function(e) {
                    // In case `e.target.value` is a percentage remove the `%` character
                    // and update accordingly with a percentage
                    // https://github.com/casesandberg/react-color/issues/383
                    var stringValue = String(e.target.value);
                    var isPercentage = stringValue.indexOf('%') > -1;
                    var number = Number(stringValue.replace(/%/g, ''));
                    if (!isNaN(number)) {
                        var amount = _this.props.arrowOffset || 1;

                        // Up
                        if (e.keyCode === 38) {
                            if (_this.props.label !== null) {
                                _this.props.onChange && _this.props.onChange(_defineProperty({}, _this.props.label, number + amount), e);
                            } else {
                                _this.props.onChange && _this.props.onChange(number + amount, e);
                            }

                            if (isPercentage) {
                                _this.setState({
                                    value: number + amount + '%'
                                });
                            } else {
                                _this.setState({
                                    value: number + amount
                                });
                            }
                        }

                        // Down
                        if (e.keyCode === 40) {
                            if (_this.props.label !== null) {
                                _this.props.onChange && _this.props.onChange(_defineProperty({}, _this.props.label, number - amount), e);
                            } else {
                                _this.props.onChange && _this.props.onChange(number - amount, e);
                            }

                            if (isPercentage) {
                                _this.setState({
                                    value: number - amount + '%'
                                });
                            } else {
                                _this.setState({
                                    value: number - amount
                                });
                            }
                        }
                    }
                };

                _this.handleDrag = function(e) {
                    if (_this.props.dragLabel) {
                        var newValue = Math.round(_this.props.value + e.movementX);
                        if (newValue >= 0 && newValue <= _this.props.dragMax) {
                            _this.props.onChange && _this.props.onChange(_defineProperty({}, _this.props.label, newValue), e);
                        }
                    }
                };

                _this.handleMouseDown = function(e) {
                    if (_this.props.dragLabel) {
                        e.preventDefault();
                        _this.handleDrag(e);
                        window.addEventListener('mousemove', _this.handleDrag);
                        window.addEventListener('mouseup', _this.handleMouseUp);
                    }
                };

                _this.handleMouseUp = function() {
                    _this.unbindEventListeners();
                };

                _this.unbindEventListeners = function() {
                    window.removeEventListener('mousemove', _this.handleDrag);
                    window.removeEventListener('mouseup', _this.handleMouseUp);
                };

                _this.state = {
                    value: String(props.value).toUpperCase(),
                    blurValue: String(props.value).toUpperCase()
                };
                return _this;
            }

            _createClass(EditableInput, [{
                key: 'componentWillReceiveProps',
                value: function componentWillReceiveProps(nextProps) {
                    var input = this.input;
                    if (nextProps.value !== this.state.value) {
                        if (input === document.activeElement) {
                            this.setState({
                                blurValue: String(nextProps.value).toUpperCase()
                            });
                        } else {
                            this.setState({
                                value: String(nextProps.value).toUpperCase(),
                                blurValue: !this.state.blurValue && String(nextProps.value).toUpperCase()
                            });
                        }
                    }
                }
            }, {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    this.unbindEventListeners();
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this2 = this;

                    var styles = (0, _reactcss2.default)({
                        'default': {
                            wrap: {
                                position: 'relative'
                            }
                        },
                        'user-override': {
                            wrap: this.props.style && this.props.style.wrap ? this.props.style.wrap : {},
                            input: this.props.style && this.props.style.input ? this.props.style.input : {},
                            label: this.props.style && this.props.style.label ? this.props.style.label : {}
                        },
                        'dragLabel-true': {
                            label: {
                                cursor: 'ew-resize'
                            }
                        }
                    }, {
                        'user-override': true
                    }, this.props);

                    return _react2.default.createElement(
                        'div', {
                            style: styles.wrap
                        },
                        _react2.default.createElement('input', {
                            style: styles.input,
                            ref: function ref(input) {
                                return _this2.input = input;
                            },
                            value: this.state.value,
                            onKeyDown: this.handleKeyDown,
                            onChange: this.handleChange,
                            onBlur: this.handleBlur,
                            placeholder: this.props.placeholder,
                            spellCheck: 'false'
                        }),
                        this.props.label && !this.props.hideLabel ? _react2.default.createElement(
                            'span', {
                                style: styles.label,
                                onMouseDown: this.handleMouseDown
                            },
                            this.props.label
                        ) : null
                    );
                }
            }]);

            return EditableInput;
        }(_react.PureComponent || _react.Component);

        exports.default = EditableInput;

        /***/
    }),
    /* 222 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Hue = undefined;

        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _hue = __webpack_require__(223);

        var hue = _interopRequireWildcard(_hue);

        function _interopRequireWildcard(obj) {
            if (obj && obj.__esModule) {
                return obj;
            } else {
                var newObj = {};
                if (obj != null) {
                    for (var key in obj) {
                        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                    }
                }
                newObj.default = obj;
                return newObj;
            }
        }

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var Hue = exports.Hue = function(_ref) {
            _inherits(Hue, _ref);

            function Hue() {
                var _ref2;

                var _temp, _this, _ret;

                _classCallCheck(this, Hue);

                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Hue.__proto__ || Object.getPrototypeOf(Hue)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e, skip) {
                    var change = hue.calculateChange(e, skip, _this.props, _this.container);
                    change && _this.props.onChange && _this.props.onChange(change, e);
                }, _this.handleMouseDown = function(e) {
                    _this.handleChange(e, true);
                    window.addEventListener('mousemove', _this.handleChange);
                    window.addEventListener('mouseup', _this.handleMouseUp);
                }, _this.handleMouseUp = function() {
                    _this.unbindEventListeners();
                }, _temp), _possibleConstructorReturn(_this, _ret);
            }

            _createClass(Hue, [{
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    this.unbindEventListeners();
                }
            }, {
                key: 'unbindEventListeners',
                value: function unbindEventListeners() {
                    window.removeEventListener('mousemove', this.handleChange);
                    window.removeEventListener('mouseup', this.handleMouseUp);
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this2 = this;

                    var _props$direction = this.props.direction,
                        direction = _props$direction === undefined ? 'horizontal' : _props$direction;


                    var styles = (0, _reactcss2.default)({
                        'default': {
                            hue: {
                                absolute: '0px 0px 0px 0px',
                                borderRadius: this.props.radius,
                                boxShadow: this.props.shadow
                            },
                            container: {
                                padding: '0 2px',
                                position: 'relative',
                                height: '100%',
                                borderRadius: this.props.radius
                            },
                            pointer: {
                                position: 'absolute',
                                left: this.props.hsl.h * 100 / 360 + '%'
                            },
                            slider: {
                                marginTop: '1px',
                                width: '4px',
                                borderRadius: '1px',
                                height: '8px',
                                boxShadow: '0 0 2px rgba(0, 0, 0, .6)',
                                background: '#fff',
                                transform: 'translateX(-2px)'
                            }
                        },
                        'vertical': {
                            pointer: {
                                left: '0px',
                                top: -(this.props.hsl.h * 100 / 360) + 100 + '%'
                            }
                        }
                    }, {
                        vertical: direction === 'vertical'
                    });

                    return _react2.default.createElement(
                        'div', {
                            style: styles.hue
                        },
                        _react2.default.createElement(
                            'div', {
                                className: 'hue-' + direction,
                                style: styles.container,
                                ref: function ref(container) {
                                    return _this2.container = container;
                                },
                                onMouseDown: this.handleMouseDown,
                                onTouchMove: this.handleChange,
                                onTouchStart: this.handleChange
                            },
                            _react2.default.createElement(
                                'style',
                                null,
                                '\n            .hue-horizontal {\n              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0\n                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to right, #f00 0%, #ff0\n                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n\n            .hue-vertical {\n              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,\n                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,\n                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n          '
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.pointer
                                },
                                this.props.pointer ? _react2.default.createElement(this.props.pointer, this.props) : _react2.default.createElement('div', {
                                    style: styles.slider
                                })
                            )
                        )
                    );
                }
            }]);

            return Hue;
        }(_react.PureComponent || _react.Component);

        exports.default = Hue;

        /***/
    }),
    /* 223 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var calculateChange = exports.calculateChange = function calculateChange(e, skip, props, container) {
            e.preventDefault();
            var containerWidth = container.clientWidth;
            var containerHeight = container.clientHeight;
            var x = typeof e.pageX === 'number' ? e.pageX : e.touches[0].pageX;
            var y = typeof e.pageY === 'number' ? e.pageY : e.touches[0].pageY;
            var left = x - (container.getBoundingClientRect().left + window.pageXOffset);
            var top = y - (container.getBoundingClientRect().top + window.pageYOffset);

            if (props.direction === 'vertical') {
                var h = void 0;
                if (top < 0) {
                    h = 359;
                } else if (top > containerHeight) {
                    h = 0;
                } else {
                    var percent = -(top * 100 / containerHeight) + 100;
                    h = 360 * percent / 100;
                }

                if (props.hsl.h !== h) {
                    return {
                        h: h,
                        s: props.hsl.s,
                        l: props.hsl.l,
                        a: props.hsl.a,
                        source: 'rgb'
                    };
                }
            } else {
                var _h = void 0;
                if (left < 0) {
                    _h = 0;
                } else if (left > containerWidth) {
                    _h = 359;
                } else {
                    var _percent = left * 100 / containerWidth;
                    _h = 360 * _percent / 100;
                }

                if (props.hsl.h !== _h) {
                    return {
                        h: _h,
                        s: props.hsl.s,
                        l: props.hsl.l,
                        a: props.hsl.a,
                        source: 'rgb'
                    };
                }
            }
            return null;
        };

        /***/
    }),
    /* 224 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Raised = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Raised = exports.Raised = function Raised(_ref) {
            var zDepth = _ref.zDepth,
                radius = _ref.radius,
                background = _ref.background,
                children = _ref.children;

            var styles = (0, _reactcss2.default)({
                'default': {
                    wrap: {
                        position: 'relative',
                        display: 'inline-block'
                    },
                    content: {
                        position: 'relative'
                    },
                    bg: {
                        absolute: '0px 0px 0px 0px',
                        boxShadow: '0 ' + zDepth + 'px ' + zDepth * 4 + 'px rgba(0,0,0,.24)',
                        borderRadius: radius,
                        background: background
                    }
                },
                'zDepth-0': {
                    bg: {
                        boxShadow: 'none'
                    }
                },

                'zDepth-1': {
                    bg: {
                        boxShadow: '0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)'
                    }
                },
                'zDepth-2': {
                    bg: {
                        boxShadow: '0 6px 20px rgba(0,0,0,.19), 0 8px 17px rgba(0,0,0,.2)'
                    }
                },
                'zDepth-3': {
                    bg: {
                        boxShadow: '0 17px 50px rgba(0,0,0,.19), 0 12px 15px rgba(0,0,0,.24)'
                    }
                },
                'zDepth-4': {
                    bg: {
                        boxShadow: '0 25px 55px rgba(0,0,0,.21), 0 16px 28px rgba(0,0,0,.22)'
                    }
                },
                'zDepth-5': {
                    bg: {
                        boxShadow: '0 40px 77px rgba(0,0,0,.22), 0 27px 24px rgba(0,0,0,.2)'
                    }
                },
                'square': {
                    bg: {
                        borderRadius: '0'
                    }
                },
                'circle': {
                    bg: {
                        borderRadius: '50%'
                    }
                }
            }, {
                'zDepth-1': zDepth === 1
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.wrap
                },
                _react2.default.createElement('div', {
                    style: styles.bg
                }),
                _react2.default.createElement(
                    'div', {
                        style: styles.content
                    },
                    children
                )
            );
        };

        Raised.propTypes = {
            background: _propTypes2.default.string,
            zDepth: _propTypes2.default.oneOf([0, 1, 2, 3, 4, 5]),
            radius: _propTypes2.default.number
        };

        Raised.defaultProps = {
            background: '#fff',
            zDepth: 1,
            radius: 2
        };

        exports.default = Raised;

        /***/
    }),
    /* 225 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Saturation = undefined;

        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _throttle = __webpack_require__(226);

        var _throttle2 = _interopRequireDefault(_throttle);

        var _saturation = __webpack_require__(229);

        var saturation = _interopRequireWildcard(_saturation);

        function _interopRequireWildcard(obj) {
            if (obj && obj.__esModule) {
                return obj;
            } else {
                var newObj = {};
                if (obj != null) {
                    for (var key in obj) {
                        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                    }
                }
                newObj.default = obj;
                return newObj;
            }
        }

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var Saturation = exports.Saturation = function(_ref) {
            _inherits(Saturation, _ref);

            function Saturation(props) {
                _classCallCheck(this, Saturation);

                var _this = _possibleConstructorReturn(this, (Saturation.__proto__ || Object.getPrototypeOf(Saturation)).call(this, props));

                _this.handleChange = function(e, skip) {
                    _this.props.onChange && _this.throttle(_this.props.onChange, saturation.calculateChange(e, skip, _this.props, _this.container), e);
                };

                _this.handleMouseDown = function(e) {
                    _this.handleChange(e, true);
                    window.addEventListener('mousemove', _this.handleChange);
                    window.addEventListener('mouseup', _this.handleMouseUp);
                };

                _this.handleMouseUp = function() {
                    _this.unbindEventListeners();
                };

                _this.throttle = (0, _throttle2.default)(function(fn, data, e) {
                    fn(data, e);
                }, 50);
                return _this;
            }

            _createClass(Saturation, [{
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    this.unbindEventListeners();
                }
            }, {
                key: 'unbindEventListeners',
                value: function unbindEventListeners() {
                    window.removeEventListener('mousemove', this.handleChange);
                    window.removeEventListener('mouseup', this.handleMouseUp);
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this2 = this;

                    var _ref2 = this.props.style || {},
                        color = _ref2.color,
                        white = _ref2.white,
                        black = _ref2.black,
                        pointer = _ref2.pointer,
                        circle = _ref2.circle;

                    var styles = (0, _reactcss2.default)({
                        'default': {
                            color: {
                                absolute: '0px 0px 0px 0px',
                                background: 'hsl(' + this.props.hsl.h + ',100%, 50%)',
                                borderRadius: this.props.radius
                            },
                            white: {
                                absolute: '0px 0px 0px 0px',
                                borderRadius: this.props.radius
                            },
                            black: {
                                absolute: '0px 0px 0px 0px',
                                boxShadow: this.props.shadow,
                                borderRadius: this.props.radius
                            },
                            pointer: {
                                position: 'absolute',
                                top: -(this.props.hsv.v * 100) + 100 + '%',
                                left: this.props.hsv.s * 100 + '%',
                                cursor: 'default'
                            },
                            circle: {
                                width: '4px',
                                height: '4px',
                                boxShadow: '0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),\n            0 0 1px 2px rgba(0,0,0,.4)',
                                borderRadius: '50%',
                                cursor: 'hand',
                                transform: 'translate(-2px, -2px)'
                            }
                        },
                        'custom': {
                            color: color,
                            white: white,
                            black: black,
                            pointer: pointer,
                            circle: circle
                        }
                    }, {
                        'custom': !!this.props.style
                    });

                    return _react2.default.createElement(
                        'div', {
                            style: styles.color,
                            ref: function ref(container) {
                                return _this2.container = container;
                            },
                            onMouseDown: this.handleMouseDown,
                            onTouchMove: this.handleChange,
                            onTouchStart: this.handleChange
                        },
                        _react2.default.createElement(
                            'style',
                            null,
                            '\n          .saturation-white {\n            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));\n            background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n          }\n          .saturation-black {\n            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));\n            background: linear-gradient(to top, #000, rgba(0,0,0,0));\n          }\n        '
                        ),
                        _react2.default.createElement(
                            'div', {
                                style: styles.white,
                                className: 'saturation-white'
                            },
                            _react2.default.createElement('div', {
                                style: styles.black,
                                className: 'saturation-black'
                            }),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.pointer
                                },
                                this.props.pointer ? _react2.default.createElement(this.props.pointer, this.props) : _react2.default.createElement('div', {
                                    style: styles.circle
                                })
                            )
                        )
                    );
                }
            }]);

            return Saturation;
        }(_react.PureComponent || _react.Component);

        exports.default = Saturation;

        /***/
    }),
    /* 226 */
    /***/
    (function(module, exports, __webpack_require__) {

        var debounce = __webpack_require__(75),
            isObject = __webpack_require__(8);

        /** Error message constants. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /**
         * Creates a throttled function that only invokes `func` at most once per
         * every `wait` milliseconds. The throttled function comes with a `cancel`
         * method to cancel delayed `func` invocations and a `flush` method to
         * immediately invoke them. Provide `options` to indicate whether `func`
         * should be invoked on the leading and/or trailing edge of the `wait`
         * timeout. The `func` is invoked with the last arguments provided to the
         * throttled function. Subsequent calls to the throttled function return the
         * result of the last `func` invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the throttled function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.throttle` and `_.debounce`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to throttle.
         * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=true]
         *  Specify invoking on the leading edge of the timeout.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new throttled function.
         * @example
         *
         * // Avoid excessively updating the position while scrolling.
         * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
         *
         * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
         * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
         * jQuery(element).on('click', throttled);
         *
         * // Cancel the trailing throttled invocation.
         * jQuery(window).on('popstate', throttled.cancel);
         */
        function throttle(func, wait, options) {
            var leading = true,
                trailing = true;

            if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT);
            }
            if (isObject(options)) {
                leading = 'leading' in options ? !!options.leading : leading;
                trailing = 'trailing' in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
                'leading': leading,
                'maxWait': wait,
                'trailing': trailing
            });
        }

        module.exports = throttle;


        /***/
    }),
    /* 227 */
    /***/
    (function(module, exports, __webpack_require__) {

        var root = __webpack_require__(5);

        /**
         * Gets the timestamp of the number of milliseconds that have elapsed since
         * the Unix epoch (1 January 1970 00:00:00 UTC).
         *
         * @static
         * @memberOf _
         * @since 2.4.0
         * @category Date
         * @returns {number} Returns the timestamp.
         * @example
         *
         * _.defer(function(stamp) {
         *   console.log(_.now() - stamp);
         * }, _.now());
         * // => Logs the number of milliseconds it took for the deferred invocation.
         */
        var now = function() {
            return root.Date.now();
        };

        module.exports = now;


        /***/
    }),
    /* 228 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(8),
            isSymbol = __webpack_require__(21);

        /** Used as references for various `Number` constants. */
        var NAN = 0 / 0;

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /**
         * Converts `value` to a number.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to process.
         * @returns {number} Returns the number.
         * @example
         *
         * _.toNumber(3.2);
         * // => 3.2
         *
         * _.toNumber(Number.MIN_VALUE);
         * // => 5e-324
         *
         * _.toNumber(Infinity);
         * // => Infinity
         *
         * _.toNumber('3.2');
         * // => 3.2
         */
        function toNumber(value) {
            if (typeof value == 'number') {
                return value;
            }
            if (isSymbol(value)) {
                return NAN;
            }
            if (isObject(value)) {
                var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
                value = isObject(other) ? (other + '') : other;
            }
            if (typeof value != 'string') {
                return value === 0 ? value : +value;
            }
            value = value.replace(reTrim, '');
            var isBinary = reIsBinary.test(value);
            return (isBinary || reIsOctal.test(value)) ?
                freeParseInt(value.slice(2), isBinary ? 2 : 8) :
                (reIsBadHex.test(value) ? NAN : +value);
        }

        module.exports = toNumber;


        /***/
    }),
    /* 229 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var calculateChange = exports.calculateChange = function calculateChange(e, skip, props, container) {
            e.preventDefault();

            var _container$getBoundin = container.getBoundingClientRect(),
                containerWidth = _container$getBoundin.width,
                containerHeight = _container$getBoundin.height;

            var x = typeof e.pageX === 'number' ? e.pageX : e.touches[0].pageX;
            var y = typeof e.pageY === 'number' ? e.pageY : e.touches[0].pageY;
            var left = x - (container.getBoundingClientRect().left + window.pageXOffset);
            var top = y - (container.getBoundingClientRect().top + window.pageYOffset);

            if (left < 0) {
                left = 0;
            } else if (left > containerWidth) {
                left = containerWidth;
            } else if (top < 0) {
                top = 0;
            } else if (top > containerHeight) {
                top = containerHeight;
            }

            var saturation = left * 100 / containerWidth;
            var bright = -(top * 100 / containerHeight) + 100;

            return {
                h: props.hsl.h,
                s: saturation,
                v: bright,
                a: props.hsl.a,
                source: 'rgb'
            };
        };

        /***/
    }),
    /* 230 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__(231);


        /***/
    }),
    /* 231 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayEach = __webpack_require__(69),
            baseEach = __webpack_require__(68),
            castFunction = __webpack_require__(53),
            isArray = __webpack_require__(4);

        /**
         * Iterates over elements of `collection` and invokes `iteratee` for each element.
         * The iteratee is invoked with three arguments: (value, index|key, collection).
         * Iteratee functions may exit iteration early by explicitly returning `false`.
         *
         * **Note:** As with other "Collections" methods, objects with a "length"
         * property are iterated like arrays. To avoid this behavior use `_.forIn`
         * or `_.forOwn` for object iteration.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @alias each
         * @category Collection
         * @param {Array|Object} collection The collection to iterate over.
         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
         * @returns {Array|Object} Returns `collection`.
         * @see _.forEachRight
         * @example
         *
         * _.forEach([1, 2], function(value) {
         *   console.log(value);
         * });
         * // => Logs `1` then `2`.
         *
         * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
         *   console.log(key);
         * });
         * // => Logs 'a' then 'b' (iteration order is not guaranteed).
         */
        function forEach(collection, iteratee) {
            var func = isArray(collection) ? arrayEach : baseEach;
            return func(collection, castFunction(iteratee));
        }

        module.exports = forEach;


        /***/
    }),
    /* 232 */
    /***/
    (function(module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_RESULT__; // TinyColor v1.4.1
        // https://github.com/bgrins/TinyColor
        // Brian Grinstead, MIT License

        (function(Math) {

            var trimLeft = /^\s+/,
                trimRight = /\s+$/,
                tinyCounter = 0,
                mathRound = Math.round,
                mathMin = Math.min,
                mathMax = Math.max,
                mathRandom = Math.random;

            function tinycolor(color, opts) {

                color = (color) ? color : '';
                opts = opts || {};

                // If input is already a tinycolor, return itself
                if (color instanceof tinycolor) {
                    return color;
                }
                // If we are called as a function, call using new instead
                if (!(this instanceof tinycolor)) {
                    return new tinycolor(color, opts);
                }

                var rgb = inputToRGB(color);
                this._originalInput = color,
                    this._r = rgb.r,
                    this._g = rgb.g,
                    this._b = rgb.b,
                    this._a = rgb.a,
                    this._roundA = mathRound(100 * this._a) / 100,
                    this._format = opts.format || rgb.format;
                this._gradientType = opts.gradientType;

                // Don't let the range of [0,255] come back in [0,1].
                // Potentially lose a little bit of precision here, but will fix issues where
                // .5 gets interpreted as half of the total, instead of half of 1
                // If it was supposed to be 128, this was already taken care of by `inputToRgb`
                if (this._r < 1) {
                    this._r = mathRound(this._r);
                }
                if (this._g < 1) {
                    this._g = mathRound(this._g);
                }
                if (this._b < 1) {
                    this._b = mathRound(this._b);
                }

                this._ok = rgb.ok;
                this._tc_id = tinyCounter++;
            }

            tinycolor.prototype = {
                isDark: function() {
                    return this.getBrightness() < 128;
                },
                isLight: function() {
                    return !this.isDark();
                },
                isValid: function() {
                    return this._ok;
                },
                getOriginalInput: function() {
                    return this._originalInput;
                },
                getFormat: function() {
                    return this._format;
                },
                getAlpha: function() {
                    return this._a;
                },
                getBrightness: function() {
                    //http://www.w3.org/TR/AERT#color-contrast
                    var rgb = this.toRgb();
                    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
                },
                getLuminance: function() {
                    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
                    var rgb = this.toRgb();
                    var RsRGB, GsRGB, BsRGB, R, G, B;
                    RsRGB = rgb.r / 255;
                    GsRGB = rgb.g / 255;
                    BsRGB = rgb.b / 255;

                    if (RsRGB <= 0.03928) {
                        R = RsRGB / 12.92;
                    } else {
                        R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);
                    }
                    if (GsRGB <= 0.03928) {
                        G = GsRGB / 12.92;
                    } else {
                        G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);
                    }
                    if (BsRGB <= 0.03928) {
                        B = BsRGB / 12.92;
                    } else {
                        B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);
                    }
                    return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);
                },
                setAlpha: function(value) {
                    this._a = boundAlpha(value);
                    this._roundA = mathRound(100 * this._a) / 100;
                    return this;
                },
                toHsv: function() {
                    var hsv = rgbToHsv(this._r, this._g, this._b);
                    return {
                        h: hsv.h * 360,
                        s: hsv.s,
                        v: hsv.v,
                        a: this._a
                    };
                },
                toHsvString: function() {
                    var hsv = rgbToHsv(this._r, this._g, this._b);
                    var h = mathRound(hsv.h * 360),
                        s = mathRound(hsv.s * 100),
                        v = mathRound(hsv.v * 100);
                    return (this._a == 1) ?
                        "hsv(" + h + ", " + s + "%, " + v + "%)" :
                        "hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")";
                },
                toHsl: function() {
                    var hsl = rgbToHsl(this._r, this._g, this._b);
                    return {
                        h: hsl.h * 360,
                        s: hsl.s,
                        l: hsl.l,
                        a: this._a
                    };
                },
                toHslString: function() {
                    var hsl = rgbToHsl(this._r, this._g, this._b);
                    var h = mathRound(hsl.h * 360),
                        s = mathRound(hsl.s * 100),
                        l = mathRound(hsl.l * 100);
                    return (this._a == 1) ?
                        "hsl(" + h + ", " + s + "%, " + l + "%)" :
                        "hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")";
                },
                toHex: function(allow3Char) {
                    return rgbToHex(this._r, this._g, this._b, allow3Char);
                },
                toHexString: function(allow3Char) {
                    return '#' + this.toHex(allow3Char);
                },
                toHex8: function(allow4Char) {
                    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
                },
                toHex8String: function(allow4Char) {
                    return '#' + this.toHex8(allow4Char);
                },
                toRgb: function() {
                    return {
                        r: mathRound(this._r),
                        g: mathRound(this._g),
                        b: mathRound(this._b),
                        a: this._a
                    };
                },
                toRgbString: function() {
                    return (this._a == 1) ?
                        "rgb(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" :
                        "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
                },
                toPercentageRgb: function() {
                    return {
                        r: mathRound(bound01(this._r, 255) * 100) + "%",
                        g: mathRound(bound01(this._g, 255) * 100) + "%",
                        b: mathRound(bound01(this._b, 255) * 100) + "%",
                        a: this._a
                    };
                },
                toPercentageRgbString: function() {
                    return (this._a == 1) ?
                        "rgb(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" :
                        "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
                },
                toName: function() {
                    if (this._a === 0) {
                        return "transparent";
                    }

                    if (this._a < 1) {
                        return false;
                    }

                    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
                },
                toFilter: function(secondColor) {
                    var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);
                    var secondHex8String = hex8String;
                    var gradientType = this._gradientType ? "GradientType = 1, " : "";

                    if (secondColor) {
                        var s = tinycolor(secondColor);
                        secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);
                    }

                    return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
                },
                toString: function(format) {
                    var formatSet = !!format;
                    format = format || this._format;

                    var formattedString = false;
                    var hasAlpha = this._a < 1 && this._a >= 0;
                    var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");

                    if (needsAlphaFormat) {
                        // Special case for "transparent", all other non-alpha formats
                        // will return rgba when there is transparency.
                        if (format === "name" && this._a === 0) {
                            return this.toName();
                        }
                        return this.toRgbString();
                    }
                    if (format === "rgb") {
                        formattedString = this.toRgbString();
                    }
                    if (format === "prgb") {
                        formattedString = this.toPercentageRgbString();
                    }
                    if (format === "hex" || format === "hex6") {
                        formattedString = this.toHexString();
                    }
                    if (format === "hex3") {
                        formattedString = this.toHexString(true);
                    }
                    if (format === "hex4") {
                        formattedString = this.toHex8String(true);
                    }
                    if (format === "hex8") {
                        formattedString = this.toHex8String();
                    }
                    if (format === "name") {
                        formattedString = this.toName();
                    }
                    if (format === "hsl") {
                        formattedString = this.toHslString();
                    }
                    if (format === "hsv") {
                        formattedString = this.toHsvString();
                    }

                    return formattedString || this.toHexString();
                },
                clone: function() {
                    return tinycolor(this.toString());
                },

                _applyModification: function(fn, args) {
                    var color = fn.apply(null, [this].concat([].slice.call(args)));
                    this._r = color._r;
                    this._g = color._g;
                    this._b = color._b;
                    this.setAlpha(color._a);
                    return this;
                },
                lighten: function() {
                    return this._applyModification(lighten, arguments);
                },
                brighten: function() {
                    return this._applyModification(brighten, arguments);
                },
                darken: function() {
                    return this._applyModification(darken, arguments);
                },
                desaturate: function() {
                    return this._applyModification(desaturate, arguments);
                },
                saturate: function() {
                    return this._applyModification(saturate, arguments);
                },
                greyscale: function() {
                    return this._applyModification(greyscale, arguments);
                },
                spin: function() {
                    return this._applyModification(spin, arguments);
                },

                _applyCombination: function(fn, args) {
                    return fn.apply(null, [this].concat([].slice.call(args)));
                },
                analogous: function() {
                    return this._applyCombination(analogous, arguments);
                },
                complement: function() {
                    return this._applyCombination(complement, arguments);
                },
                monochromatic: function() {
                    return this._applyCombination(monochromatic, arguments);
                },
                splitcomplement: function() {
                    return this._applyCombination(splitcomplement, arguments);
                },
                triad: function() {
                    return this._applyCombination(triad, arguments);
                },
                tetrad: function() {
                    return this._applyCombination(tetrad, arguments);
                }
            };

            // If input is an object, force 1 into "1.0" to handle ratios properly
            // String input requires "1.0" as input, so 1 will be treated as 1
            tinycolor.fromRatio = function(color, opts) {
                if (typeof color == "object") {
                    var newColor = {};
                    for (var i in color) {
                        if (color.hasOwnProperty(i)) {
                            if (i === "a") {
                                newColor[i] = color[i];
                            } else {
                                newColor[i] = convertToPercentage(color[i]);
                            }
                        }
                    }
                    color = newColor;
                }

                return tinycolor(color, opts);
            };

            // Given a string or object, convert that input to RGB
            // Possible string inputs:
            //
            //     "red"
            //     "#f00" or "f00"
            //     "#ff0000" or "ff0000"
            //     "#ff000000" or "ff000000"
            //     "rgb 255 0 0" or "rgb (255, 0, 0)"
            //     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
            //     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
            //     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
            //     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
            //     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
            //     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
            //
            function inputToRGB(color) {

                var rgb = {
                    r: 0,
                    g: 0,
                    b: 0
                };
                var a = 1;
                var s = null;
                var v = null;
                var l = null;
                var ok = false;
                var format = false;

                if (typeof color == "string") {
                    color = stringInputToObject(color);
                }

                if (typeof color == "object") {
                    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
                        rgb = rgbToRgb(color.r, color.g, color.b);
                        ok = true;
                        format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
                    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
                        s = convertToPercentage(color.s);
                        v = convertToPercentage(color.v);
                        rgb = hsvToRgb(color.h, s, v);
                        ok = true;
                        format = "hsv";
                    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
                        s = convertToPercentage(color.s);
                        l = convertToPercentage(color.l);
                        rgb = hslToRgb(color.h, s, l);
                        ok = true;
                        format = "hsl";
                    }

                    if (color.hasOwnProperty("a")) {
                        a = color.a;
                    }
                }

                a = boundAlpha(a);

                return {
                    ok: ok,
                    format: color.format || format,
                    r: mathMin(255, mathMax(rgb.r, 0)),
                    g: mathMin(255, mathMax(rgb.g, 0)),
                    b: mathMin(255, mathMax(rgb.b, 0)),
                    a: a
                };
            }


            // Conversion Functions
            // --------------------

            // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
            // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>

            // `rgbToRgb`
            // Handle bounds / percentage checking to conform to CSS color spec
            // <http://www.w3.org/TR/css3-color/>
            // *Assumes:* r, g, b in [0, 255] or [0, 1]
            // *Returns:* { r, g, b } in [0, 255]
            function rgbToRgb(r, g, b) {
                return {
                    r: bound01(r, 255) * 255,
                    g: bound01(g, 255) * 255,
                    b: bound01(b, 255) * 255
                };
            }

            // `rgbToHsl`
            // Converts an RGB color value to HSL.
            // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
            // *Returns:* { h, s, l } in [0,1]
            function rgbToHsl(r, g, b) {

                r = bound01(r, 255);
                g = bound01(g, 255);
                b = bound01(b, 255);

                var max = mathMax(r, g, b),
                    min = mathMin(r, g, b);
                var h, s, l = (max + min) / 2;

                if (max == min) {
                    h = s = 0; // achromatic
                } else {
                    var d = max - min;
                    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
                    switch (max) {
                        case r:
                            h = (g - b) / d + (g < b ? 6 : 0);
                            break;
                        case g:
                            h = (b - r) / d + 2;
                            break;
                        case b:
                            h = (r - g) / d + 4;
                            break;
                    }

                    h /= 6;
                }

                return {
                    h: h,
                    s: s,
                    l: l
                };
            }

            // `hslToRgb`
            // Converts an HSL color value to RGB.
            // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
            // *Returns:* { r, g, b } in the set [0, 255]
            function hslToRgb(h, s, l) {
                var r, g, b;

                h = bound01(h, 360);
                s = bound01(s, 100);
                l = bound01(l, 100);

                function hue2rgb(p, q, t) {
                    if (t < 0) t += 1;
                    if (t > 1) t -= 1;
                    if (t < 1 / 6) return p + (q - p) * 6 * t;
                    if (t < 1 / 2) return q;
                    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
                    return p;
                }

                if (s === 0) {
                    r = g = b = l; // achromatic
                } else {
                    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
                    var p = 2 * l - q;
                    r = hue2rgb(p, q, h + 1 / 3);
                    g = hue2rgb(p, q, h);
                    b = hue2rgb(p, q, h - 1 / 3);
                }

                return {
                    r: r * 255,
                    g: g * 255,
                    b: b * 255
                };
            }

            // `rgbToHsv`
            // Converts an RGB color value to HSV
            // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
            // *Returns:* { h, s, v } in [0,1]
            function rgbToHsv(r, g, b) {

                r = bound01(r, 255);
                g = bound01(g, 255);
                b = bound01(b, 255);

                var max = mathMax(r, g, b),
                    min = mathMin(r, g, b);
                var h, s, v = max;

                var d = max - min;
                s = max === 0 ? 0 : d / max;

                if (max == min) {
                    h = 0; // achromatic
                } else {
                    switch (max) {
                        case r:
                            h = (g - b) / d + (g < b ? 6 : 0);
                            break;
                        case g:
                            h = (b - r) / d + 2;
                            break;
                        case b:
                            h = (r - g) / d + 4;
                            break;
                    }
                    h /= 6;
                }
                return {
                    h: h,
                    s: s,
                    v: v
                };
            }

            // `hsvToRgb`
            // Converts an HSV color value to RGB.
            // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
            // *Returns:* { r, g, b } in the set [0, 255]
            function hsvToRgb(h, s, v) {

                h = bound01(h, 360) * 6;
                s = bound01(s, 100);
                v = bound01(v, 100);

                var i = Math.floor(h),
                    f = h - i,
                    p = v * (1 - s),
                    q = v * (1 - f * s),
                    t = v * (1 - (1 - f) * s),
                    mod = i % 6,
                    r = [v, q, p, p, t, v][mod],
                    g = [t, v, v, q, p, p][mod],
                    b = [p, p, t, v, v, q][mod];

                return {
                    r: r * 255,
                    g: g * 255,
                    b: b * 255
                };
            }

            // `rgbToHex`
            // Converts an RGB color to hex
            // Assumes r, g, and b are contained in the set [0, 255]
            // Returns a 3 or 6 character hex
            function rgbToHex(r, g, b, allow3Char) {

                var hex = [
                    pad2(mathRound(r).toString(16)),
                    pad2(mathRound(g).toString(16)),
                    pad2(mathRound(b).toString(16))
                ];

                // Return a 3 character hex if possible
                if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
                    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
                }

                return hex.join("");
            }

            // `rgbaToHex`
            // Converts an RGBA color plus alpha transparency to hex
            // Assumes r, g, b are contained in the set [0, 255] and
            // a in [0, 1]. Returns a 4 or 8 character rgba hex
            function rgbaToHex(r, g, b, a, allow4Char) {

                var hex = [
                    pad2(mathRound(r).toString(16)),
                    pad2(mathRound(g).toString(16)),
                    pad2(mathRound(b).toString(16)),
                    pad2(convertDecimalToHex(a))
                ];

                // Return a 4 character hex if possible
                if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
                    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
                }

                return hex.join("");
            }

            // `rgbaToArgbHex`
            // Converts an RGBA color to an ARGB Hex8 string
            // Rarely used, but required for "toFilter()"
            function rgbaToArgbHex(r, g, b, a) {

                var hex = [
                    pad2(convertDecimalToHex(a)),
                    pad2(mathRound(r).toString(16)),
                    pad2(mathRound(g).toString(16)),
                    pad2(mathRound(b).toString(16))
                ];

                return hex.join("");
            }

            // `equals`
            // Can be called with any tinycolor input
            tinycolor.equals = function(color1, color2) {
                if (!color1 || !color2) {
                    return false;
                }
                return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
            };

            tinycolor.random = function() {
                return tinycolor.fromRatio({
                    r: mathRandom(),
                    g: mathRandom(),
                    b: mathRandom()
                });
            };


            // Modification Functions
            // ----------------------
            // Thanks to less.js for some of the basics here
            // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>

            function desaturate(color, amount) {
                amount = (amount === 0) ? 0 : (amount || 10);
                var hsl = tinycolor(color).toHsl();
                hsl.s -= amount / 100;
                hsl.s = clamp01(hsl.s);
                return tinycolor(hsl);
            }

            function saturate(color, amount) {
                amount = (amount === 0) ? 0 : (amount || 10);
                var hsl = tinycolor(color).toHsl();
                hsl.s += amount / 100;
                hsl.s = clamp01(hsl.s);
                return tinycolor(hsl);
            }

            function greyscale(color) {
                return tinycolor(color).desaturate(100);
            }

            function lighten(color, amount) {
                amount = (amount === 0) ? 0 : (amount || 10);
                var hsl = tinycolor(color).toHsl();
                hsl.l += amount / 100;
                hsl.l = clamp01(hsl.l);
                return tinycolor(hsl);
            }

            function brighten(color, amount) {
                amount = (amount === 0) ? 0 : (amount || 10);
                var rgb = tinycolor(color).toRgb();
                rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));
                rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));
                rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));
                return tinycolor(rgb);
            }

            function darken(color, amount) {
                amount = (amount === 0) ? 0 : (amount || 10);
                var hsl = tinycolor(color).toHsl();
                hsl.l -= amount / 100;
                hsl.l = clamp01(hsl.l);
                return tinycolor(hsl);
            }

            // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
            // Values outside of this range will be wrapped into this range.
            function spin(color, amount) {
                var hsl = tinycolor(color).toHsl();
                var hue = (hsl.h + amount) % 360;
                hsl.h = hue < 0 ? 360 + hue : hue;
                return tinycolor(hsl);
            }

            // Combination Functions
            // ---------------------
            // Thanks to jQuery xColor for some of the ideas behind these
            // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>

            function complement(color) {
                var hsl = tinycolor(color).toHsl();
                hsl.h = (hsl.h + 180) % 360;
                return tinycolor(hsl);
            }

            function triad(color) {
                var hsl = tinycolor(color).toHsl();
                var h = hsl.h;
                return [
                    tinycolor(color),
                    tinycolor({
                        h: (h + 120) % 360,
                        s: hsl.s,
                        l: hsl.l
                    }),
                    tinycolor({
                        h: (h + 240) % 360,
                        s: hsl.s,
                        l: hsl.l
                    })
                ];
            }

            function tetrad(color) {
                var hsl = tinycolor(color).toHsl();
                var h = hsl.h;
                return [
                    tinycolor(color),
                    tinycolor({
                        h: (h + 90) % 360,
                        s: hsl.s,
                        l: hsl.l
                    }),
                    tinycolor({
                        h: (h + 180) % 360,
                        s: hsl.s,
                        l: hsl.l
                    }),
                    tinycolor({
                        h: (h + 270) % 360,
                        s: hsl.s,
                        l: hsl.l
                    })
                ];
            }

            function splitcomplement(color) {
                var hsl = tinycolor(color).toHsl();
                var h = hsl.h;
                return [
                    tinycolor(color),
                    tinycolor({
                        h: (h + 72) % 360,
                        s: hsl.s,
                        l: hsl.l
                    }),
                    tinycolor({
                        h: (h + 216) % 360,
                        s: hsl.s,
                        l: hsl.l
                    })
                ];
            }

            function analogous(color, results, slices) {
                results = results || 6;
                slices = slices || 30;

                var hsl = tinycolor(color).toHsl();
                var part = 360 / slices;
                var ret = [tinycolor(color)];

                for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results;) {
                    hsl.h = (hsl.h + part) % 360;
                    ret.push(tinycolor(hsl));
                }
                return ret;
            }

            function monochromatic(color, results) {
                results = results || 6;
                var hsv = tinycolor(color).toHsv();
                var h = hsv.h,
                    s = hsv.s,
                    v = hsv.v;
                var ret = [];
                var modification = 1 / results;

                while (results--) {
                    ret.push(tinycolor({
                        h: h,
                        s: s,
                        v: v
                    }));
                    v = (v + modification) % 1;
                }

                return ret;
            }

            // Utility Functions
            // ---------------------

            tinycolor.mix = function(color1, color2, amount) {
                amount = (amount === 0) ? 0 : (amount || 50);

                var rgb1 = tinycolor(color1).toRgb();
                var rgb2 = tinycolor(color2).toRgb();

                var p = amount / 100;

                var rgba = {
                    r: ((rgb2.r - rgb1.r) * p) + rgb1.r,
                    g: ((rgb2.g - rgb1.g) * p) + rgb1.g,
                    b: ((rgb2.b - rgb1.b) * p) + rgb1.b,
                    a: ((rgb2.a - rgb1.a) * p) + rgb1.a
                };

                return tinycolor(rgba);
            };


            // Readability Functions
            // ---------------------
            // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)

            // `contrast`
            // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
            tinycolor.readability = function(color1, color2) {
                var c1 = tinycolor(color1);
                var c2 = tinycolor(color2);
                return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
            };

            // `isReadable`
            // Ensure that foreground and background color combinations meet WCAG2 guidelines.
            // The third argument is an optional Object.
            //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
            //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
            // If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.

            // *Example*
            //    tinycolor.isReadable("#000", "#111") => false
            //    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false
            tinycolor.isReadable = function(color1, color2, wcag2) {
                var readability = tinycolor.readability(color1, color2);
                var wcag2Parms, out;

                out = false;

                wcag2Parms = validateWCAG2Parms(wcag2);
                switch (wcag2Parms.level + wcag2Parms.size) {
                    case "AAsmall":
                    case "AAAlarge":
                        out = readability >= 4.5;
                        break;
                    case "AAlarge":
                        out = readability >= 3;
                        break;
                    case "AAAsmall":
                        out = readability >= 7;
                        break;
                }
                return out;

            };

            // `mostReadable`
            // Given a base color and a list of possible foreground or background
            // colors for that base, returns the most readable color.
            // Optionally returns Black or White if the most readable color is unreadable.
            // *Example*
            //    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
            //    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
            //    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
            //    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"
            tinycolor.mostReadable = function(baseColor, colorList, args) {
                var bestColor = null;
                var bestScore = 0;
                var readability;
                var includeFallbackColors, level, size;
                args = args || {};
                includeFallbackColors = args.includeFallbackColors;
                level = args.level;
                size = args.size;

                for (var i = 0; i < colorList.length; i++) {
                    readability = tinycolor.readability(baseColor, colorList[i]);
                    if (readability > bestScore) {
                        bestScore = readability;
                        bestColor = tinycolor(colorList[i]);
                    }
                }

                if (tinycolor.isReadable(baseColor, bestColor, {
                        "level": level,
                        "size": size
                    }) || !includeFallbackColors) {
                    return bestColor;
                } else {
                    args.includeFallbackColors = false;
                    return tinycolor.mostReadable(baseColor, ["#fff", "#000"], args);
                }
            };


            // Big List of Colors
            // ------------------
            // <http://www.w3.org/TR/css3-color/#svg-color>
            var names = tinycolor.names = {
                aliceblue: "f0f8ff",
                antiquewhite: "faebd7",
                aqua: "0ff",
                aquamarine: "7fffd4",
                azure: "f0ffff",
                beige: "f5f5dc",
                bisque: "ffe4c4",
                black: "000",
                blanchedalmond: "ffebcd",
                blue: "00f",
                blueviolet: "8a2be2",
                brown: "a52a2a",
                burlywood: "deb887",
                burntsienna: "ea7e5d",
                cadetblue: "5f9ea0",
                chartreuse: "7fff00",
                chocolate: "d2691e",
                coral: "ff7f50",
                cornflowerblue: "6495ed",
                cornsilk: "fff8dc",
                crimson: "dc143c",
                cyan: "0ff",
                darkblue: "00008b",
                darkcyan: "008b8b",
                darkgoldenrod: "b8860b",
                darkgray: "a9a9a9",
                darkgreen: "006400",
                darkgrey: "a9a9a9",
                darkkhaki: "bdb76b",
                darkmagenta: "8b008b",
                darkolivegreen: "556b2f",
                darkorange: "ff8c00",
                darkorchid: "9932cc",
                darkred: "8b0000",
                darksalmon: "e9967a",
                darkseagreen: "8fbc8f",
                darkslateblue: "483d8b",
                darkslategray: "2f4f4f",
                darkslategrey: "2f4f4f",
                darkturquoise: "00ced1",
                darkviolet: "9400d3",
                deeppink: "ff1493",
                deepskyblue: "00bfff",
                dimgray: "696969",
                dimgrey: "696969",
                dodgerblue: "1e90ff",
                firebrick: "b22222",
                floralwhite: "fffaf0",
                forestgreen: "228b22",
                fuchsia: "f0f",
                gainsboro: "dcdcdc",
                ghostwhite: "f8f8ff",
                gold: "ffd700",
                goldenrod: "daa520",
                gray: "808080",
                green: "008000",
                greenyellow: "adff2f",
                grey: "808080",
                honeydew: "f0fff0",
                hotpink: "ff69b4",
                indianred: "cd5c5c",
                indigo: "4b0082",
                ivory: "fffff0",
                khaki: "f0e68c",
                lavender: "e6e6fa",
                lavenderblush: "fff0f5",
                lawngreen: "7cfc00",
                lemonchiffon: "fffacd",
                lightblue: "add8e6",
                lightcoral: "f08080",
                lightcyan: "e0ffff",
                lightgoldenrodyellow: "fafad2",
                lightgray: "d3d3d3",
                lightgreen: "90ee90",
                lightgrey: "d3d3d3",
                lightpink: "ffb6c1",
                lightsalmon: "ffa07a",
                lightseagreen: "20b2aa",
                lightskyblue: "87cefa",
                lightslategray: "789",
                lightslategrey: "789",
                lightsteelblue: "b0c4de",
                lightyellow: "ffffe0",
                lime: "0f0",
                limegreen: "32cd32",
                linen: "faf0e6",
                magenta: "f0f",
                maroon: "800000",
                mediumaquamarine: "66cdaa",
                mediumblue: "0000cd",
                mediumorchid: "ba55d3",
                mediumpurple: "9370db",
                mediumseagreen: "3cb371",
                mediumslateblue: "7b68ee",
                mediumspringgreen: "00fa9a",
                mediumturquoise: "48d1cc",
                mediumvioletred: "c71585",
                midnightblue: "191970",
                mintcream: "f5fffa",
                mistyrose: "ffe4e1",
                moccasin: "ffe4b5",
                navajowhite: "ffdead",
                navy: "000080",
                oldlace: "fdf5e6",
                olive: "808000",
                olivedrab: "6b8e23",
                orange: "ffa500",
                orangered: "ff4500",
                orchid: "da70d6",
                palegoldenrod: "eee8aa",
                palegreen: "98fb98",
                paleturquoise: "afeeee",
                palevioletred: "db7093",
                papayawhip: "ffefd5",
                peachpuff: "ffdab9",
                peru: "cd853f",
                pink: "ffc0cb",
                plum: "dda0dd",
                powderblue: "b0e0e6",
                purple: "800080",
                rebeccapurple: "663399",
                red: "f00",
                rosybrown: "bc8f8f",
                royalblue: "4169e1",
                saddlebrown: "8b4513",
                salmon: "fa8072",
                sandybrown: "f4a460",
                seagreen: "2e8b57",
                seashell: "fff5ee",
                sienna: "a0522d",
                silver: "c0c0c0",
                skyblue: "87ceeb",
                slateblue: "6a5acd",
                slategray: "708090",
                slategrey: "708090",
                snow: "fffafa",
                springgreen: "00ff7f",
                steelblue: "4682b4",
                tan: "d2b48c",
                teal: "008080",
                thistle: "d8bfd8",
                tomato: "ff6347",
                turquoise: "40e0d0",
                violet: "ee82ee",
                wheat: "f5deb3",
                white: "fff",
                whitesmoke: "f5f5f5",
                yellow: "ff0",
                yellowgreen: "9acd32"
            };

            // Make it easy to access colors via `hexNames[hex]`
            var hexNames = tinycolor.hexNames = flip(names);


            // Utilities
            // ---------

            // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`
            function flip(o) {
                var flipped = {};
                for (var i in o) {
                    if (o.hasOwnProperty(i)) {
                        flipped[o[i]] = i;
                    }
                }
                return flipped;
            }

            // Return a valid alpha value [0,1] with all invalid values being set to 1
            function boundAlpha(a) {
                a = parseFloat(a);

                if (isNaN(a) || a < 0 || a > 1) {
                    a = 1;
                }

                return a;
            }

            // Take input from [0, n] and return it as [0, 1]
            function bound01(n, max) {
                if (isOnePointZero(n)) {
                    n = "100%";
                }

                var processPercent = isPercentage(n);
                n = mathMin(max, mathMax(0, parseFloat(n)));

                // Automatically convert percentage into number
                if (processPercent) {
                    n = parseInt(n * max, 10) / 100;
                }

                // Handle floating point rounding errors
                if ((Math.abs(n - max) < 0.000001)) {
                    return 1;
                }

                // Convert into [0, 1] range if it isn't already
                return (n % max) / parseFloat(max);
            }

            // Force a number between 0 and 1
            function clamp01(val) {
                return mathMin(1, mathMax(0, val));
            }

            // Parse a base-16 hex value into a base-10 integer
            function parseIntFromHex(val) {
                return parseInt(val, 16);
            }

            // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
            // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
            function isOnePointZero(n) {
                return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;
            }

            // Check to see if string passed in is a percentage
            function isPercentage(n) {
                return typeof n === "string" && n.indexOf('%') != -1;
            }

            // Force a hex value to have 2 characters
            function pad2(c) {
                return c.length == 1 ? '0' + c : '' + c;
            }

            // Replace a decimal with it's percentage value
            function convertToPercentage(n) {
                if (n <= 1) {
                    n = (n * 100) + "%";
                }

                return n;
            }

            // Converts a decimal to a hex value
            function convertDecimalToHex(d) {
                return Math.round(parseFloat(d) * 255).toString(16);
            }
            // Converts a hex value to a decimal
            function convertHexToDecimal(h) {
                return (parseIntFromHex(h) / 255);
            }

            var matchers = (function() {

                // <http://www.w3.org/TR/css3-values/#integers>
                var CSS_INTEGER = "[-\\+]?\\d+%?";

                // <http://www.w3.org/TR/css3-values/#number-value>
                var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";

                // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
                var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";

                // Actual matching.
                // Parentheses and commas are optional, but not required.
                // Whitespace can take the place of commas or opening paren
                var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
                var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";

                return {
                    CSS_UNIT: new RegExp(CSS_UNIT),
                    rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
                    rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
                    hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
                    hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
                    hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
                    hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
                    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
                    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
                };
            })();

            // `isValidCSSUnit`
            // Take in a single string / number and check to see if it looks like a CSS unit
            // (see `matchers` above for definition).
            function isValidCSSUnit(color) {
                return !!matchers.CSS_UNIT.exec(color);
            }

            // `stringInputToObject`
            // Permissive string parsing.  Take in a number of formats, and output an object
            // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
            function stringInputToObject(color) {

                color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();
                var named = false;
                if (names[color]) {
                    color = names[color];
                    named = true;
                } else if (color == 'transparent') {
                    return {
                        r: 0,
                        g: 0,
                        b: 0,
                        a: 0,
                        format: "name"
                    };
                }

                // Try to match string input using regular expressions.
                // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
                // Just return an object and let the conversion functions handle that.
                // This way the result will be the same whether the tinycolor is initialized with string or object.
                var match;
                if ((match = matchers.rgb.exec(color))) {
                    return {
                        r: match[1],
                        g: match[2],
                        b: match[3]
                    };
                }
                if ((match = matchers.rgba.exec(color))) {
                    return {
                        r: match[1],
                        g: match[2],
                        b: match[3],
                        a: match[4]
                    };
                }
                if ((match = matchers.hsl.exec(color))) {
                    return {
                        h: match[1],
                        s: match[2],
                        l: match[3]
                    };
                }
                if ((match = matchers.hsla.exec(color))) {
                    return {
                        h: match[1],
                        s: match[2],
                        l: match[3],
                        a: match[4]
                    };
                }
                if ((match = matchers.hsv.exec(color))) {
                    return {
                        h: match[1],
                        s: match[2],
                        v: match[3]
                    };
                }
                if ((match = matchers.hsva.exec(color))) {
                    return {
                        h: match[1],
                        s: match[2],
                        v: match[3],
                        a: match[4]
                    };
                }
                if ((match = matchers.hex8.exec(color))) {
                    return {
                        r: parseIntFromHex(match[1]),
                        g: parseIntFromHex(match[2]),
                        b: parseIntFromHex(match[3]),
                        a: convertHexToDecimal(match[4]),
                        format: named ? "name" : "hex8"
                    };
                }
                if ((match = matchers.hex6.exec(color))) {
                    return {
                        r: parseIntFromHex(match[1]),
                        g: parseIntFromHex(match[2]),
                        b: parseIntFromHex(match[3]),
                        format: named ? "name" : "hex"
                    };
                }
                if ((match = matchers.hex4.exec(color))) {
                    return {
                        r: parseIntFromHex(match[1] + '' + match[1]),
                        g: parseIntFromHex(match[2] + '' + match[2]),
                        b: parseIntFromHex(match[3] + '' + match[3]),
                        a: convertHexToDecimal(match[4] + '' + match[4]),
                        format: named ? "name" : "hex8"
                    };
                }
                if ((match = matchers.hex3.exec(color))) {
                    return {
                        r: parseIntFromHex(match[1] + '' + match[1]),
                        g: parseIntFromHex(match[2] + '' + match[2]),
                        b: parseIntFromHex(match[3] + '' + match[3]),
                        format: named ? "name" : "hex"
                    };
                }

                return false;
            }

            function validateWCAG2Parms(parms) {
                // return valid WCAG2 parms for isReadable.
                // If input parms are invalid, return {"level":"AA", "size":"small"}
                var level, size;
                parms = parms || {
                    "level": "AA",
                    "size": "small"
                };
                level = (parms.level || "AA").toUpperCase();
                size = (parms.size || "small").toLowerCase();
                if (level !== "AA" && level !== "AAA") {
                    level = "AA";
                }
                if (size !== "small" && size !== "large") {
                    size = "small";
                }
                return {
                    "level": level,
                    "size": size
                };
            }

            // Node: Export function
            if (typeof module !== "undefined" && module.exports) {
                module.exports = tinycolor;
            }
            // AMD/requirejs: Define the module
            else if (true) {
                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                        return tinycolor;
                    }.call(exports, __webpack_require__, exports, module),
                    __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            }
            // Browser: Expose to window
            else {
                window.tinycolor = tinycolor;
            }

        })(Math);


        /***/
    }),
    /* 233 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Swatch = undefined;

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _interaction = __webpack_require__(234);

        var _ = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var ENTER = 13;

        var Swatch = exports.Swatch = function Swatch(_ref) {
            var color = _ref.color,
                style = _ref.style,
                _ref$onClick = _ref.onClick,
                onClick = _ref$onClick === undefined ? function() {} : _ref$onClick,
                onHover = _ref.onHover,
                _ref$title = _ref.title,
                title = _ref$title === undefined ? color : _ref$title,
                children = _ref.children,
                focus = _ref.focus,
                _ref$focusStyle = _ref.focusStyle,
                focusStyle = _ref$focusStyle === undefined ? {} : _ref$focusStyle;

            var transparent = color === 'transparent';
            var styles = (0, _reactcss2.default)({
                default: {
                    swatch: _extends({
                        background: color,
                        height: '100%',
                        width: '100%',
                        cursor: 'pointer',
                        position: 'relative',
                        outline: 'none'
                    }, style, focus ? focusStyle : {})
                }
            });

            var handleClick = function handleClick(e) {
                return onClick(color, e);
            };
            var handleKeyDown = function handleKeyDown(e) {
                return e.keyCode === ENTER && onClick(color, e);
            };
            var handleHover = function handleHover(e) {
                return onHover(color, e);
            };

            var optionalEvents = {};
            if (onHover) {
                optionalEvents.onMouseOver = handleHover;
            }

            return _react2.default.createElement(
                'div',
                _extends({
                    style: styles.swatch,
                    onClick: handleClick,
                    title: title,
                    tabIndex: 0,
                    onKeyDown: handleKeyDown
                }, optionalEvents),
                children,
                transparent && _react2.default.createElement(_.Checkboard, {
                    borderRadius: styles.swatch.borderRadius,
                    boxShadow: 'inset 0 0 0 1px rgba(0,0,0,0.1)'
                })
            );
        };

        exports.default = (0, _interaction.handleFocus)(Swatch);

        /***/
    }),
    /* 234 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.handleFocus = undefined;

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        } /* eslint-disable no-invalid-this */


        var handleFocus = exports.handleFocus = function handleFocus(Component) {
            var Span = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'span';
            return function(_React$Component) {
                _inherits(Focus, _React$Component);

                function Focus() {
                    var _ref;

                    var _temp, _this, _ret;

                    _classCallCheck(this, Focus);

                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                        args[_key] = arguments[_key];
                    }

                    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Focus.__proto__ || Object.getPrototypeOf(Focus)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
                        focus: false
                    }, _this.handleFocus = function() {
                        return _this.setState({
                            focus: true
                        });
                    }, _this.handleBlur = function() {
                        return _this.setState({
                            focus: false
                        });
                    }, _temp), _possibleConstructorReturn(_this, _ret);
                }

                _createClass(Focus, [{
                    key: 'render',
                    value: function render() {
                        return _react2.default.createElement(
                            Span, {
                                onFocus: this.handleFocus,
                                onBlur: this.handleBlur
                            },
                            _react2.default.createElement(Component, _extends({}, this.props, this.state))
                        );
                    }
                }]);

                return Focus;
            }(_react2.default.Component);
        };

        /***/
    }),
    /* 235 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.AlphaPointer = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var AlphaPointer = exports.AlphaPointer = function AlphaPointer(_ref) {
            var direction = _ref.direction;

            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        width: '18px',
                        height: '18px',
                        borderRadius: '50%',
                        transform: 'translate(-9px, -1px)',
                        backgroundColor: 'rgb(248, 248, 248)',
                        boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)'
                    }
                },
                'vertical': {
                    picker: {
                        transform: 'translate(-3px, -9px)'
                    }
                }
            }, {
                vertical: direction === 'vertical'
            });

            return _react2.default.createElement('div', {
                style: styles.picker
            });
        };

        exports.default = AlphaPointer;

        /***/
    }),
    /* 236 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Block = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _common = __webpack_require__(2);

        var _BlockSwatches = __webpack_require__(237);

        var _BlockSwatches2 = _interopRequireDefault(_BlockSwatches);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Block = exports.Block = function Block(_ref) {
            var onChange = _ref.onChange,
                onSwatchHover = _ref.onSwatchHover,
                hex = _ref.hex,
                colors = _ref.colors,
                width = _ref.width,
                triangle = _ref.triangle,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var transparent = hex === 'transparent';
            var handleChange = function handleChange(hexCode, e) {
                _color2.default.isValidHex(hexCode) && onChange({
                    hex: hexCode,
                    source: 'hex'
                }, e);
            };

            var styles = (0, _reactcss2.default)({
                'default': {
                    card: {
                        width: width,
                        background: '#fff',
                        boxShadow: '0 1px rgba(0,0,0,.1)',
                        borderRadius: '6px',
                        position: 'relative'
                    },
                    head: {
                        height: '110px',
                        background: hex,
                        borderRadius: '6px 6px 0 0',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        position: 'relative'
                    },
                    body: {
                        padding: '10px'
                    },
                    label: {
                        fontSize: '18px',
                        color: _color2.default.getContrastingColor(hex),
                        position: 'relative'
                    },
                    triangle: {
                        width: '0px',
                        height: '0px',
                        borderStyle: 'solid',
                        borderWidth: '0 10px 10px 10px',
                        borderColor: 'transparent transparent ' + hex + ' transparent',
                        position: 'absolute',
                        top: '-10px',
                        left: '50%',
                        marginLeft: '-10px'
                    },
                    input: {
                        width: '100%',
                        fontSize: '12px',
                        color: '#666',
                        border: '0px',
                        outline: 'none',
                        height: '22px',
                        boxShadow: 'inset 0 0 0 1px #ddd',
                        borderRadius: '4px',
                        padding: '0 7px',
                        boxSizing: 'border-box'
                    }
                },
                'hide-triangle': {
                    triangle: {
                        display: 'none'
                    }
                }
            }, {
                'hide-triangle': triangle === 'hide'
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.card,
                    className: 'block-picker ' + className
                },
                _react2.default.createElement('div', {
                    style: styles.triangle
                }),
                _react2.default.createElement(
                    'div', {
                        style: styles.head
                    },
                    transparent && _react2.default.createElement(_common.Checkboard, {
                        borderRadius: '6px 6px 0 0'
                    }),
                    _react2.default.createElement(
                        'div', {
                            style: styles.label
                        },
                        hex
                    )
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.body
                    },
                    _react2.default.createElement(_BlockSwatches2.default, {
                        colors: colors,
                        onClick: handleChange,
                        onSwatchHover: onSwatchHover
                    }),
                    _react2.default.createElement(_common.EditableInput, {
                        style: {
                            input: styles.input
                        },
                        value: hex,
                        onChange: handleChange
                    })
                )
            );
        };

        Block.propTypes = {
            width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
            colors: _propTypes2.default.arrayOf(_propTypes2.default.string),
            triangle: _propTypes2.default.oneOf(['top', 'hide'])
        };

        Block.defaultProps = {
            width: 170,
            colors: ['#D9E3F0', '#F47373', '#697689', '#37D67A', '#2CCCE4', '#555555', '#dce775', '#ff8a65', '#ba68c8'],
            triangle: 'top'
        };

        exports.default = (0, _common.ColorWrap)(Block);

        /***/
    }),
    /* 237 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.BlockSwatches = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _map = __webpack_require__(9);

        var _map2 = _interopRequireDefault(_map);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var BlockSwatches = exports.BlockSwatches = function BlockSwatches(_ref) {
            var colors = _ref.colors,
                onClick = _ref.onClick,
                onSwatchHover = _ref.onSwatchHover;

            var styles = (0, _reactcss2.default)({
                'default': {
                    swatches: {
                        marginRight: '-10px'
                    },
                    swatch: {
                        width: '22px',
                        height: '22px',
                        float: 'left',
                        marginRight: '10px',
                        marginBottom: '10px',
                        borderRadius: '4px'
                    },
                    clear: {
                        clear: 'both'
                    }
                }
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.swatches
                },
                (0, _map2.default)(colors, function(c) {
                    return _react2.default.createElement(_common.Swatch, {
                        key: c,
                        color: c,
                        style: styles.swatch,
                        onClick: onClick,
                        onHover: onSwatchHover,
                        focusStyle: {
                            boxShadow: '0 0 4px ' + c
                        }
                    });
                }),
                _react2.default.createElement('div', {
                    style: styles.clear
                })
            );
        };

        exports.default = BlockSwatches;

        /***/
    }),
    /* 238 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Circle = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _map = __webpack_require__(9);

        var _map2 = _interopRequireDefault(_map);

        var _materialColors = __webpack_require__(77);

        var material = _interopRequireWildcard(_materialColors);

        var _common = __webpack_require__(2);

        var _CircleSwatch = __webpack_require__(239);

        var _CircleSwatch2 = _interopRequireDefault(_CircleSwatch);

        function _interopRequireWildcard(obj) {
            if (obj && obj.__esModule) {
                return obj;
            } else {
                var newObj = {};
                if (obj != null) {
                    for (var key in obj) {
                        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                    }
                }
                newObj.default = obj;
                return newObj;
            }
        }

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Circle = exports.Circle = function Circle(_ref) {
            var width = _ref.width,
                onChange = _ref.onChange,
                onSwatchHover = _ref.onSwatchHover,
                colors = _ref.colors,
                hex = _ref.hex,
                circleSize = _ref.circleSize,
                circleSpacing = _ref.circleSpacing,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    card: {
                        width: width,
                        display: 'flex',
                        flexWrap: 'wrap',
                        marginRight: -circleSpacing,
                        marginBottom: -circleSpacing
                    }
                }
            });

            var handleChange = function handleChange(hexCode, e) {
                return onChange({
                    hex: hexCode,
                    source: 'hex'
                }, e);
            };

            return _react2.default.createElement(
                'div', {
                    style: styles.card,
                    className: 'circle-picker ' + className
                },
                (0, _map2.default)(colors, function(c) {
                    return _react2.default.createElement(_CircleSwatch2.default, {
                        key: c,
                        color: c,
                        onClick: handleChange,
                        onSwatchHover: onSwatchHover,
                        active: hex === c.toLowerCase(),
                        circleSize: circleSize,
                        circleSpacing: circleSpacing
                    });
                })
            );
        };

        Circle.propTypes = {
            width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
            circleSize: _propTypes2.default.number,
            circleSpacing: _propTypes2.default.number
        };

        Circle.defaultProps = {
            width: 252,
            circleSize: 28,
            circleSpacing: 14,
            colors: [material.red['500'], material.pink['500'], material.purple['500'], material.deepPurple['500'], material.indigo['500'], material.blue['500'], material.lightBlue['500'], material.cyan['500'], material.teal['500'], material.green['500'], material.lightGreen['500'], material.lime['500'], material.yellow['500'], material.amber['500'], material.orange['500'], material.deepOrange['500'], material.brown['500'], material.blueGrey['500']]
        };

        exports.default = (0, _common.ColorWrap)(Circle);

        /***/
    }),
    /* 239 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.CircleSwatch = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var CircleSwatch = exports.CircleSwatch = function CircleSwatch(_ref) {
            var color = _ref.color,
                onClick = _ref.onClick,
                onSwatchHover = _ref.onSwatchHover,
                hover = _ref.hover,
                active = _ref.active,
                circleSize = _ref.circleSize,
                circleSpacing = _ref.circleSpacing;

            var styles = (0, _reactcss2.default)({
                'default': {
                    swatch: {
                        width: circleSize,
                        height: circleSize,
                        marginRight: circleSpacing,
                        marginBottom: circleSpacing,
                        transform: 'scale(1)',
                        transition: '100ms transform ease'
                    },
                    Swatch: {
                        borderRadius: '50%',
                        background: 'transparent',
                        boxShadow: 'inset 0 0 0 ' + circleSize / 2 + 'px ' + color,
                        transition: '100ms box-shadow ease'
                    }
                },
                'hover': {
                    swatch: {
                        transform: 'scale(1.2)'
                    }
                },
                'active': {
                    Swatch: {
                        boxShadow: 'inset 0 0 0 3px ' + color
                    }
                }
            }, {
                hover: hover,
                active: active
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.swatch
                },
                _react2.default.createElement(_common.Swatch, {
                    style: styles.Swatch,
                    color: color,
                    onClick: onClick,
                    onHover: onSwatchHover,
                    focusStyle: {
                        boxShadow: styles.Swatch.boxShadow + ', 0 0 5px ' + color
                    }
                })
            );
        };

        CircleSwatch.defaultProps = {
            circleSize: 28,
            circleSpacing: 14
        };

        exports.default = (0, _reactcss.handleHover)(CircleSwatch);

        /***/
    }),
    /* 240 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Chrome = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        var _ChromeFields = __webpack_require__(241);

        var _ChromeFields2 = _interopRequireDefault(_ChromeFields);

        var _ChromePointer = __webpack_require__(242);

        var _ChromePointer2 = _interopRequireDefault(_ChromePointer);

        var _ChromePointerCircle = __webpack_require__(243);

        var _ChromePointerCircle2 = _interopRequireDefault(_ChromePointerCircle);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Chrome = exports.Chrome = function Chrome(_ref) {
            var onChange = _ref.onChange,
                disableAlpha = _ref.disableAlpha,
                rgb = _ref.rgb,
                hsl = _ref.hsl,
                hsv = _ref.hsv,
                hex = _ref.hex,
                renderers = _ref.renderers,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        background: '#fff',
                        borderRadius: '2px',
                        boxShadow: '0 0 2px rgba(0,0,0,.3), 0 4px 8px rgba(0,0,0,.3)',
                        boxSizing: 'initial',
                        width: '225px',
                        fontFamily: 'Menlo'
                    },
                    saturation: {
                        width: '100%',
                        paddingBottom: '55%',
                        position: 'relative',
                        borderRadius: '2px 2px 0 0',
                        overflow: 'hidden'
                    },
                    Saturation: {
                        radius: '2px 2px 0 0'
                    },
                    body: {
                        padding: '16px 16px 12px'
                    },
                    controls: {
                        display: 'flex'
                    },
                    color: {
                        width: '32px'
                    },
                    swatch: {
                        marginTop: '6px',
                        width: '16px',
                        height: '16px',
                        borderRadius: '8px',
                        position: 'relative',
                        overflow: 'hidden'
                    },
                    active: {
                        absolute: '0px 0px 0px 0px',
                        borderRadius: '8px',
                        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.1)',
                        background: 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + rgb.a + ')',
                        zIndex: '2'
                    },
                    toggles: {
                        flex: '1'
                    },
                    hue: {
                        height: '10px',
                        position: 'relative',
                        marginBottom: '8px'
                    },
                    Hue: {
                        radius: '2px'
                    },
                    alpha: {
                        height: '10px',
                        position: 'relative'
                    },
                    Alpha: {
                        radius: '2px'
                    }
                },
                'disableAlpha': {
                    color: {
                        width: '22px'
                    },
                    alpha: {
                        display: 'none'
                    },
                    hue: {
                        marginBottom: '0px'
                    },
                    swatch: {
                        width: '10px',
                        height: '10px',
                        marginTop: '0px'
                    }
                }
            }, {
                disableAlpha: disableAlpha
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.picker,
                    className: 'chrome-picker ' + className
                },
                _react2.default.createElement(
                    'div', {
                        style: styles.saturation
                    },
                    _react2.default.createElement(_common.Saturation, {
                        style: styles.Saturation,
                        hsl: hsl,
                        hsv: hsv,
                        pointer: _ChromePointerCircle2.default,
                        onChange: onChange
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.body
                    },
                    _react2.default.createElement(
                        'div', {
                            style: styles.controls,
                            className: 'flexbox-fix'
                        },
                        _react2.default.createElement(
                            'div', {
                                style: styles.color
                            },
                            _react2.default.createElement(
                                'div', {
                                    style: styles.swatch
                                },
                                _react2.default.createElement('div', {
                                    style: styles.active
                                }),
                                _react2.default.createElement(_common.Checkboard, {
                                    renderers: renderers
                                })
                            )
                        ),
                        _react2.default.createElement(
                            'div', {
                                style: styles.toggles
                            },
                            _react2.default.createElement(
                                'div', {
                                    style: styles.hue
                                },
                                _react2.default.createElement(_common.Hue, {
                                    style: styles.Hue,
                                    hsl: hsl,
                                    pointer: _ChromePointer2.default,
                                    onChange: onChange
                                })
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.alpha
                                },
                                _react2.default.createElement(_common.Alpha, {
                                    style: styles.Alpha,
                                    rgb: rgb,
                                    hsl: hsl,
                                    pointer: _ChromePointer2.default,
                                    renderers: renderers,
                                    onChange: onChange
                                })
                            )
                        )
                    ),
                    _react2.default.createElement(_ChromeFields2.default, {
                        rgb: rgb,
                        hsl: hsl,
                        hex: hex,
                        onChange: onChange,
                        disableAlpha: disableAlpha
                    })
                )
            );
        };

        Chrome.propTypes = {
            disableAlpha: _propTypes2.default.bool
        };

        Chrome.defaultProps = {
            disableAlpha: false
        };

        exports.default = (0, _common.ColorWrap)(Chrome);

        /***/
    }),
    /* 241 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.ChromeFields = undefined;

        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        } /* eslint-disable react/no-did-mount-set-state, no-param-reassign */

        var ChromeFields = exports.ChromeFields = function(_React$Component) {
            _inherits(ChromeFields, _React$Component);

            function ChromeFields() {
                var _ref;

                var _temp, _this, _ret;

                _classCallCheck(this, ChromeFields);

                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ChromeFields.__proto__ || Object.getPrototypeOf(ChromeFields)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
                    view: ''
                }, _this.toggleViews = function() {
                    if (_this.state.view === 'hex') {
                        _this.setState({
                            view: 'rgb'
                        });
                    } else if (_this.state.view === 'rgb') {
                        _this.setState({
                            view: 'hsl'
                        });
                    } else if (_this.state.view === 'hsl') {
                        if (_this.props.hsl.a === 1) {
                            _this.setState({
                                view: 'hex'
                            });
                        } else {
                            _this.setState({
                                view: 'rgb'
                            });
                        }
                    }
                }, _this.handleChange = function(data, e) {
                    if (data.hex) {
                        _color2.default.isValidHex(data.hex) && _this.props.onChange({
                            hex: data.hex,
                            source: 'hex'
                        }, e);
                    } else if (data.r || data.g || data.b) {
                        _this.props.onChange({
                            r: data.r || _this.props.rgb.r,
                            g: data.g || _this.props.rgb.g,
                            b: data.b || _this.props.rgb.b,
                            source: 'rgb'
                        }, e);
                    } else if (data.a) {
                        if (data.a < 0) {
                            data.a = 0;
                        } else if (data.a > 1) {
                            data.a = 1;
                        }

                        _this.props.onChange({
                            h: _this.props.hsl.h,
                            s: _this.props.hsl.s,
                            l: _this.props.hsl.l,
                            a: Math.round(data.a * 100) / 100,
                            source: 'rgb'
                        }, e);
                    } else if (data.h || data.s || data.l) {
                        _this.props.onChange({
                            h: data.h || _this.props.hsl.h,
                            s: Number(data.s && data.s || _this.props.hsl.s),
                            l: Number(data.l && data.l || _this.props.hsl.l),
                            source: 'hsl'
                        }, e);
                    }
                }, _this.showHighlight = function(e) {
                    e.target.style.background = '#eee';
                }, _this.hideHighlight = function(e) {
                    e.target.style.background = 'transparent';
                }, _temp), _possibleConstructorReturn(_this, _ret);
            }

            _createClass(ChromeFields, [{
                key: 'componentDidMount',
                value: function componentDidMount() {
                    if (this.props.hsl.a === 1 && this.state.view !== 'hex') {
                        this.setState({
                            view: 'hex'
                        });
                    } else if (this.state.view !== 'rgb' && this.state.view !== 'hsl') {
                        this.setState({
                            view: 'rgb'
                        });
                    }
                }
            }, {
                key: 'componentWillReceiveProps',
                value: function componentWillReceiveProps(nextProps) {
                    if (nextProps.hsl.a !== 1 && this.state.view === 'hex') {
                        this.setState({
                            view: 'rgb'
                        });
                    }
                }
            }, {
                key: 'render',
                value: function render() {
                    var _this2 = this;

                    var styles = (0, _reactcss2.default)({
                        'default': {
                            wrap: {
                                paddingTop: '16px',
                                display: 'flex'
                            },
                            fields: {
                                flex: '1',
                                display: 'flex',
                                marginLeft: '-6px'
                            },
                            field: {
                                paddingLeft: '6px',
                                width: '100%'
                            },
                            alpha: {
                                paddingLeft: '6px',
                                width: '100%'
                            },
                            toggle: {
                                width: '32px',
                                textAlign: 'right',
                                position: 'relative'
                            },
                            icon: {
                                marginRight: '-4px',
                                marginTop: '12px',
                                cursor: 'pointer',
                                position: 'relative'
                            },
                            iconHighlight: {
                                position: 'absolute',
                                width: '24px',
                                height: '28px',
                                background: '#eee',
                                borderRadius: '4px',
                                top: '10px',
                                left: '12px',
                                display: 'none'
                            },
                            input: {
                                fontSize: '11px',
                                color: '#333',
                                width: '100%',
                                borderRadius: '2px',
                                border: 'none',
                                boxShadow: 'inset 0 0 0 1px #dadada',
                                height: '21px',
                                textAlign: 'center'
                            },
                            label: {
                                textTransform: 'uppercase',
                                fontSize: '11px',
                                lineHeight: '11px',
                                color: '#969696',
                                textAlign: 'center',
                                display: 'block',
                                marginTop: '12px'
                            },
                            svg: {
                                width: '24px',
                                height: '24px',
                                border: '1px transparent solid',
                                borderRadius: '5px'
                            }
                        },
                        'disableAlpha': {
                            alpha: {
                                display: 'none'
                            }
                        }
                    }, this.props, this.state);

                    var fields = void 0;
                    if (this.state.view === 'hex') {
                        fields = _react2.default.createElement(
                            'div', {
                                style: styles.fields,
                                className: 'flexbox-fix'
                            },
                            _react2.default.createElement(
                                'div', {
                                    style: styles.field
                                },
                                _react2.default.createElement(_common.EditableInput, {
                                    style: {
                                        input: styles.input,
                                        label: styles.label
                                    },
                                    label: 'hex',
                                    value: this.props.hex,
                                    onChange: this.handleChange
                                })
                            )
                        );
                    } else if (this.state.view === 'rgb') {
                        fields = _react2.default.createElement(
                            'div', {
                                style: styles.fields,
                                className: 'flexbox-fix'
                            },
                            _react2.default.createElement(
                                'div', {
                                    style: styles.field
                                },
                                _react2.default.createElement(_common.EditableInput, {
                                    style: {
                                        input: styles.input,
                                        label: styles.label
                                    },
                                    label: 'r',
                                    value: this.props.rgb.r,
                                    onChange: this.handleChange
                                })
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.field
                                },
                                _react2.default.createElement(_common.EditableInput, {
                                    style: {
                                        input: styles.input,
                                        label: styles.label
                                    },
                                    label: 'g',
                                    value: this.props.rgb.g,
                                    onChange: this.handleChange
                                })
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.field
                                },
                                _react2.default.createElement(_common.EditableInput, {
                                    style: {
                                        input: styles.input,
                                        label: styles.label
                                    },
                                    label: 'b',
                                    value: this.props.rgb.b,
                                    onChange: this.handleChange
                                })
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.alpha
                                },
                                _react2.default.createElement(_common.EditableInput, {
                                    style: {
                                        input: styles.input,
                                        label: styles.label
                                    },
                                    label: 'a',
                                    value: this.props.rgb.a,
                                    arrowOffset: 0.01,
                                    onChange: this.handleChange
                                })
                            )
                        );
                    } else if (this.state.view === 'hsl') {
                        fields = _react2.default.createElement(
                            'div', {
                                style: styles.fields,
                                className: 'flexbox-fix'
                            },
                            _react2.default.createElement(
                                'div', {
                                    style: styles.field
                                },
                                _react2.default.createElement(_common.EditableInput, {
                                    style: {
                                        input: styles.input,
                                        label: styles.label
                                    },
                                    label: 'h',
                                    value: Math.round(this.props.hsl.h),
                                    onChange: this.handleChange
                                })
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.field
                                },
                                _react2.default.createElement(_common.EditableInput, {
                                    style: {
                                        input: styles.input,
                                        label: styles.label
                                    },
                                    label: 's',
                                    value: Math.round(this.props.hsl.s * 100) + '%',
                                    onChange: this.handleChange
                                })
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.field
                                },
                                _react2.default.createElement(_common.EditableInput, {
                                    style: {
                                        input: styles.input,
                                        label: styles.label
                                    },
                                    label: 'l',
                                    value: Math.round(this.props.hsl.l * 100) + '%',
                                    onChange: this.handleChange
                                })
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.alpha
                                },
                                _react2.default.createElement(_common.EditableInput, {
                                    style: {
                                        input: styles.input,
                                        label: styles.label
                                    },
                                    label: 'a',
                                    value: this.props.hsl.a,
                                    arrowOffset: 0.01,
                                    onChange: this.handleChange
                                })
                            )
                        );
                    }

                    return _react2.default.createElement(
                        'div', {
                            style: styles.wrap,
                            className: 'flexbox-fix'
                        },
                        fields,
                        _react2.default.createElement(
                            'div', {
                                style: styles.toggle
                            },
                            _react2.default.createElement(
                                'div', {
                                    style: styles.icon,
                                    onClick: this.toggleViews,
                                    ref: function ref(icon) {
                                        return _this2.icon = icon;
                                    }
                                },
                                _react2.default.createElement(
                                    'svg', {
                                        style: styles.svg,
                                        viewBox: '0 0 24 24',
                                        onMouseOver: this.showHighlight,
                                        onMouseEnter: this.showHighlight,
                                        onMouseOut: this.hideHighlight
                                    },
                                    _react2.default.createElement('path', {
                                        ref: function ref(iconUp) {
                                            return _this2.iconUp = iconUp;
                                        },
                                        fill: '#333',
                                        d: 'M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z'
                                    }),
                                    _react2.default.createElement('path', {
                                        ref: function ref(iconDown) {
                                            return _this2.iconDown = iconDown;
                                        },
                                        fill: '#333',
                                        d: 'M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15Z'
                                    })
                                )
                            )
                        )
                    );
                }
            }]);

            return ChromeFields;
        }(_react2.default.Component);

        exports.default = ChromeFields;

        /***/
    }),
    /* 242 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.ChromePointer = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var ChromePointer = exports.ChromePointer = function ChromePointer() {
            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        width: '12px',
                        height: '12px',
                        borderRadius: '6px',
                        transform: 'translate(-6px, -1px)',
                        backgroundColor: 'rgb(248, 248, 248)',
                        boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)'
                    }
                }
            });

            return _react2.default.createElement('div', {
                style: styles.picker
            });
        };

        exports.default = ChromePointer;

        /***/
    }),
    /* 243 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.ChromePointerCircle = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var ChromePointerCircle = exports.ChromePointerCircle = function ChromePointerCircle() {
            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        width: '12px',
                        height: '12px',
                        borderRadius: '6px',
                        boxShadow: 'inset 0 0 0 1px #fff',
                        transform: 'translate(-6px, -6px)'
                    }
                }
            });

            return _react2.default.createElement('div', {
                style: styles.picker
            });
        };

        exports.default = ChromePointerCircle;

        /***/
    }),
    /* 244 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Compact = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _map = __webpack_require__(9);

        var _map2 = _interopRequireDefault(_map);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _common = __webpack_require__(2);

        var _CompactColor = __webpack_require__(245);

        var _CompactColor2 = _interopRequireDefault(_CompactColor);

        var _CompactFields = __webpack_require__(246);

        var _CompactFields2 = _interopRequireDefault(_CompactFields);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Compact = exports.Compact = function Compact(_ref) {
            var onChange = _ref.onChange,
                onSwatchHover = _ref.onSwatchHover,
                colors = _ref.colors,
                hex = _ref.hex,
                rgb = _ref.rgb,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    Compact: {
                        background: '#f6f6f6',
                        radius: '4px'
                    },
                    compact: {
                        paddingTop: '5px',
                        paddingLeft: '5px',
                        boxSizing: 'initial',
                        width: '240px'
                    },
                    clear: {
                        clear: 'both'
                    }
                }
            });

            var handleChange = function handleChange(data, e) {
                if (data.hex) {
                    _color2.default.isValidHex(data.hex) && onChange({
                        hex: data.hex,
                        source: 'hex'
                    }, e);
                } else {
                    onChange(data, e);
                }
            };

            return _react2.default.createElement(
                _common.Raised, {
                    style: styles.Compact
                },
                _react2.default.createElement(
                    'div', {
                        style: styles.compact,
                        className: 'compact-picker ' + className
                    },
                    _react2.default.createElement(
                        'div',
                        null,
                        (0, _map2.default)(colors, function(c) {
                            return _react2.default.createElement(_CompactColor2.default, {
                                key: c,
                                color: c,
                                active: c.toLowerCase() === hex,
                                onClick: handleChange,
                                onSwatchHover: onSwatchHover
                            });
                        }),
                        _react2.default.createElement('div', {
                            style: styles.clear
                        })
                    ),
                    _react2.default.createElement(_CompactFields2.default, {
                        hex: hex,
                        rgb: rgb,
                        onChange: handleChange
                    })
                )
            );
        };

        Compact.propTypes = {
            colors: _propTypes2.default.arrayOf(_propTypes2.default.string)
        };

        Compact.defaultProps = {
            colors: ['#4D4D4D', '#999999', '#FFFFFF', '#F44E3B', '#FE9200', '#FCDC00', '#DBDF00', '#A4DD00', '#68CCCA', '#73D8FF', '#AEA1FF', '#FDA1FF', '#333333', '#808080', '#cccccc', '#D33115', '#E27300', '#FCC400', '#B0BC00', '#68BC00', '#16A5A5', '#009CE0', '#7B64FF', '#FA28FF', '#000000', '#666666', '#B3B3B3', '#9F0500', '#C45100', '#FB9E00', '#808900', '#194D33', '#0C797D', '#0062B1', '#653294', '#AB149E']
        };

        exports.default = (0, _common.ColorWrap)(Compact);

        /***/
    }),
    /* 245 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.CompactColor = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var CompactColor = exports.CompactColor = function CompactColor(_ref) {
            var color = _ref.color,
                _ref$onClick = _ref.onClick,
                onClick = _ref$onClick === undefined ? function() {} : _ref$onClick,
                onSwatchHover = _ref.onSwatchHover,
                active = _ref.active;

            var styles = (0, _reactcss2.default)({
                'default': {
                    color: {
                        background: color,
                        width: '15px',
                        height: '15px',
                        float: 'left',
                        marginRight: '5px',
                        marginBottom: '5px',
                        position: 'relative',
                        cursor: 'pointer'
                    },
                    dot: {
                        absolute: '5px 5px 5px 5px',
                        background: _color2.default.getContrastingColor(color),
                        borderRadius: '50%',
                        opacity: '0'
                    }
                },
                'active': {
                    dot: {
                        opacity: '1'
                    }
                },
                'color-#FFFFFF': {
                    color: {
                        boxShadow: 'inset 0 0 0 1px #ddd'
                    },
                    dot: {
                        background: '#000'
                    }
                },
                'transparent': {
                    dot: {
                        background: '#000'
                    }
                }
            }, {
                active: active,
                'color-#FFFFFF': color === '#FFFFFF',
                'transparent': color === 'transparent'
            });

            return _react2.default.createElement(
                _common.Swatch, {
                    style: styles.color,
                    color: color,
                    onClick: onClick,
                    onHover: onSwatchHover,
                    focusStyle: {
                        boxShadow: '0 0 4px ' + color
                    }
                },
                _react2.default.createElement('div', {
                    style: styles.dot
                })
            );
        };

        exports.default = CompactColor;

        /***/
    }),
    /* 246 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.CompactFields = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var CompactFields = exports.CompactFields = function CompactFields(_ref) {
            var hex = _ref.hex,
                rgb = _ref.rgb,
                onChange = _ref.onChange;

            var styles = (0, _reactcss2.default)({
                'default': {
                    fields: {
                        display: 'flex',
                        paddingBottom: '6px',
                        paddingRight: '5px',
                        position: 'relative'
                    },
                    active: {
                        position: 'absolute',
                        top: '6px',
                        left: '5px',
                        height: '9px',
                        width: '9px',
                        background: hex
                    },
                    HEXwrap: {
                        flex: '6',
                        position: 'relative'
                    },
                    HEXinput: {
                        width: '80%',
                        padding: '0px',
                        paddingLeft: '20%',
                        border: 'none',
                        outline: 'none',
                        background: 'none',
                        fontSize: '12px',
                        color: '#333',
                        height: '16px'
                    },
                    HEXlabel: {
                        display: 'none'
                    },
                    RGBwrap: {
                        flex: '3',
                        position: 'relative'
                    },
                    RGBinput: {
                        width: '70%',
                        padding: '0px',
                        paddingLeft: '30%',
                        border: 'none',
                        outline: 'none',
                        background: 'none',
                        fontSize: '12px',
                        color: '#333',
                        height: '16px'
                    },
                    RGBlabel: {
                        position: 'absolute',
                        top: '3px',
                        left: '0px',
                        lineHeight: '16px',
                        textTransform: 'uppercase',
                        fontSize: '12px',
                        color: '#999'
                    }
                }
            });

            var handleChange = function handleChange(data, e) {
                if (data.r || data.g || data.b) {
                    onChange({
                        r: data.r || rgb.r,
                        g: data.g || rgb.g,
                        b: data.b || rgb.b,
                        source: 'rgb'
                    }, e);
                } else {
                    onChange({
                        hex: data.hex,
                        source: 'hex'
                    }, e);
                }
            };

            return _react2.default.createElement(
                'div', {
                    style: styles.fields,
                    className: 'flexbox-fix'
                },
                _react2.default.createElement('div', {
                    style: styles.active
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.HEXwrap,
                        input: styles.HEXinput,
                        label: styles.HEXlabel
                    },
                    label: 'hex',
                    value: hex,
                    onChange: handleChange
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.RGBwrap,
                        input: styles.RGBinput,
                        label: styles.RGBlabel
                    },
                    label: 'r',
                    value: rgb.r,
                    onChange: handleChange
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.RGBwrap,
                        input: styles.RGBinput,
                        label: styles.RGBlabel
                    },
                    label: 'g',
                    value: rgb.g,
                    onChange: handleChange
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.RGBwrap,
                        input: styles.RGBinput,
                        label: styles.RGBlabel
                    },
                    label: 'b',
                    value: rgb.b,
                    onChange: handleChange
                })
            );
        };

        exports.default = CompactFields;

        /***/
    }),
    /* 247 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Github = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _map = __webpack_require__(9);

        var _map2 = _interopRequireDefault(_map);

        var _common = __webpack_require__(2);

        var _GithubSwatch = __webpack_require__(248);

        var _GithubSwatch2 = _interopRequireDefault(_GithubSwatch);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Github = exports.Github = function Github(_ref) {
            var width = _ref.width,
                colors = _ref.colors,
                onChange = _ref.onChange,
                onSwatchHover = _ref.onSwatchHover,
                triangle = _ref.triangle,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    card: {
                        width: width,
                        background: '#fff',
                        border: '1px solid rgba(0,0,0,0.2)',
                        boxShadow: '0 3px 12px rgba(0,0,0,0.15)',
                        borderRadius: '4px',
                        position: 'relative',
                        padding: '5px',
                        display: 'flex',
                        flexWrap: 'wrap'
                    },
                    triangle: {
                        position: 'absolute',
                        border: '7px solid transparent',
                        borderBottomColor: '#fff'
                    },
                    triangleShadow: {
                        position: 'absolute',
                        border: '8px solid transparent',
                        borderBottomColor: 'rgba(0,0,0,0.15)'
                    }
                },
                'hide-triangle': {
                    triangle: {
                        display: 'none'
                    },
                    triangleShadow: {
                        display: 'none'
                    }
                },
                'top-left-triangle': {
                    triangle: {
                        top: '-14px',
                        left: '10px'
                    },
                    triangleShadow: {
                        top: '-16px',
                        left: '9px'
                    }
                },
                'top-right-triangle': {
                    triangle: {
                        top: '-14px',
                        right: '10px'
                    },
                    triangleShadow: {
                        top: '-16px',
                        right: '9px'
                    }
                },
                'bottom-left-triangle': {
                    triangle: {
                        top: '35px',
                        left: '10px',
                        transform: 'rotate(180deg)'
                    },
                    triangleShadow: {
                        top: '37px',
                        left: '9px',
                        transform: 'rotate(180deg)'
                    }
                },
                'bottom-right-triangle': {
                    triangle: {
                        top: '35px',
                        right: '10px',
                        transform: 'rotate(180deg)'
                    },
                    triangleShadow: {
                        top: '37px',
                        right: '9px',
                        transform: 'rotate(180deg)'
                    }
                }
            }, {
                'hide-triangle': triangle === 'hide',
                'top-left-triangle': triangle === 'top-left',
                'top-right-triangle': triangle === 'top-right',
                'bottom-left-triangle': triangle == 'bottom-left',
                'bottom-right-triangle': triangle === 'bottom-right'
            });

            var handleChange = function handleChange(hex, e) {
                return onChange({
                    hex: hex,
                    source: 'hex'
                }, e);
            };

            return _react2.default.createElement(
                'div', {
                    style: styles.card,
                    className: 'github-picker ' + className
                },
                _react2.default.createElement('div', {
                    style: styles.triangleShadow
                }),
                _react2.default.createElement('div', {
                    style: styles.triangle
                }),
                (0, _map2.default)(colors, function(c) {
                    return _react2.default.createElement(_GithubSwatch2.default, {
                        color: c,
                        key: c,
                        onClick: handleChange,
                        onSwatchHover: onSwatchHover
                    });
                })
            );
        };

        Github.propTypes = {
            width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
            colors: _propTypes2.default.arrayOf(_propTypes2.default.string),
            triangle: _propTypes2.default.oneOf(['hide', 'top-left', 'top-right', 'bottom-left', 'bottom-right'])
        };

        Github.defaultProps = {
            width: 200,
            colors: ['#B80000', '#DB3E00', '#FCCB00', '#008B02', '#006B76', '#1273DE', '#004DCF', '#5300EB', '#EB9694', '#FAD0C3', '#FEF3BD', '#C1E1C5', '#BEDADC', '#C4DEF6', '#BED3F3', '#D4C4FB'],
            triangle: 'top-left'
        };

        exports.default = (0, _common.ColorWrap)(Github);

        /***/
    }),
    /* 248 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.GithubSwatch = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var GithubSwatch = exports.GithubSwatch = function GithubSwatch(_ref) {
            var hover = _ref.hover,
                color = _ref.color,
                onClick = _ref.onClick,
                onSwatchHover = _ref.onSwatchHover;

            var hoverSwatch = {
                position: 'relative',
                zIndex: '2',
                outline: '2px solid #fff',
                boxShadow: '0 0 5px 2px rgba(0,0,0,0.25)'
            };

            var styles = (0, _reactcss2.default)({
                'default': {
                    swatch: {
                        width: '25px',
                        height: '25px',
                        fontSize: '0'
                    }
                },
                'hover': {
                    swatch: hoverSwatch
                }
            }, {
                hover: hover
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.swatch
                },
                _react2.default.createElement(_common.Swatch, {
                    color: color,
                    onClick: onClick,
                    onHover: onSwatchHover,
                    focusStyle: hoverSwatch
                })
            );
        };

        exports.default = (0, _reactcss.handleHover)(GithubSwatch);

        /***/
    }),
    /* 249 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.HuePicker = undefined;

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        var _HuePointer = __webpack_require__(250);

        var _HuePointer2 = _interopRequireDefault(_HuePointer);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var HuePicker = exports.HuePicker = function HuePicker(_ref) {
            var width = _ref.width,
                height = _ref.height,
                onChange = _ref.onChange,
                hsl = _ref.hsl,
                direction = _ref.direction,
                pointer = _ref.pointer,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        position: 'relative',
                        width: width,
                        height: height
                    },
                    hue: {
                        radius: '2px'
                    }
                }
            });

            // Overwrite to provide pure hue color
            var handleChange = function handleChange(data) {
                return onChange({
                    a: 1,
                    h: data.h,
                    l: 0.5,
                    s: 1
                });
            };

            return _react2.default.createElement(
                'div', {
                    style: styles.picker,
                    className: 'hue-picker ' + className
                },
                _react2.default.createElement(_common.Hue, _extends({}, styles.hue, {
                    hsl: hsl,
                    pointer: pointer,
                    onChange: handleChange,
                    direction: direction
                }))
            );
        };

        HuePicker.defaultProps = {
            width: '316px',
            height: '16px',
            direction: 'horizontal',
            pointer: _HuePointer2.default
        };

        exports.default = (0, _common.ColorWrap)(HuePicker);

        /***/
    }),
    /* 250 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.SliderPointer = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var SliderPointer = exports.SliderPointer = function SliderPointer(_ref) {
            var direction = _ref.direction;

            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        width: '18px',
                        height: '18px',
                        borderRadius: '50%',
                        transform: 'translate(-9px, -1px)',
                        backgroundColor: 'rgb(248, 248, 248)',
                        boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)'
                    }
                },
                'vertical': {
                    picker: {
                        transform: 'translate(-3px, -9px)'
                    }
                }
            }, {
                vertical: direction === 'vertical'
            });

            return _react2.default.createElement('div', {
                style: styles.picker
            });
        };

        exports.default = SliderPointer;

        /***/
    }),
    /* 251 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Material = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Material = exports.Material = function Material(_ref) {
            var onChange = _ref.onChange,
                hex = _ref.hex,
                rgb = _ref.rgb,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    material: {
                        width: '98px',
                        height: '98px',
                        padding: '16px',
                        fontFamily: 'Roboto'
                    },
                    HEXwrap: {
                        position: 'relative'
                    },
                    HEXinput: {
                        width: '100%',
                        marginTop: '12px',
                        fontSize: '15px',
                        color: '#333',
                        padding: '0px',
                        border: '0px',
                        borderBottom: '2px solid ' + hex,
                        outline: 'none',
                        height: '30px'
                    },
                    HEXlabel: {
                        position: 'absolute',
                        top: '0px',
                        left: '0px',
                        fontSize: '11px',
                        color: '#999999',
                        textTransform: 'capitalize'
                    },
                    Hex: {
                        style: {}
                    },
                    RGBwrap: {
                        position: 'relative'
                    },
                    RGBinput: {
                        width: '100%',
                        marginTop: '12px',
                        fontSize: '15px',
                        color: '#333',
                        padding: '0px',
                        border: '0px',
                        borderBottom: '1px solid #eee',
                        outline: 'none',
                        height: '30px'
                    },
                    RGBlabel: {
                        position: 'absolute',
                        top: '0px',
                        left: '0px',
                        fontSize: '11px',
                        color: '#999999',
                        textTransform: 'capitalize'
                    },
                    split: {
                        display: 'flex',
                        marginRight: '-10px',
                        paddingTop: '11px'
                    },
                    third: {
                        flex: '1',
                        paddingRight: '10px'
                    }
                }
            });

            var handleChange = function handleChange(data, e) {
                if (data.hex) {
                    _color2.default.isValidHex(data.hex) && onChange({
                        hex: data.hex,
                        source: 'hex'
                    }, e);
                } else if (data.r || data.g || data.b) {
                    onChange({
                        r: data.r || rgb.r,
                        g: data.g || rgb.g,
                        b: data.b || rgb.b,
                        source: 'rgb'
                    }, e);
                }
            };

            return _react2.default.createElement(
                _common.Raised,
                null,
                _react2.default.createElement(
                    'div', {
                        style: styles.material,
                        className: 'material-picker ' + className
                    },
                    _react2.default.createElement(_common.EditableInput, {
                        style: {
                            wrap: styles.HEXwrap,
                            input: styles.HEXinput,
                            label: styles.HEXlabel
                        },
                        label: 'hex',
                        value: hex,
                        onChange: handleChange
                    }),
                    _react2.default.createElement(
                        'div', {
                            style: styles.split,
                            className: 'flexbox-fix'
                        },
                        _react2.default.createElement(
                            'div', {
                                style: styles.third
                            },
                            _react2.default.createElement(_common.EditableInput, {
                                style: {
                                    wrap: styles.RGBwrap,
                                    input: styles.RGBinput,
                                    label: styles.RGBlabel
                                },
                                label: 'r',
                                value: rgb.r,
                                onChange: handleChange
                            })
                        ),
                        _react2.default.createElement(
                            'div', {
                                style: styles.third
                            },
                            _react2.default.createElement(_common.EditableInput, {
                                style: {
                                    wrap: styles.RGBwrap,
                                    input: styles.RGBinput,
                                    label: styles.RGBlabel
                                },
                                label: 'g',
                                value: rgb.g,
                                onChange: handleChange
                            })
                        ),
                        _react2.default.createElement(
                            'div', {
                                style: styles.third
                            },
                            _react2.default.createElement(_common.EditableInput, {
                                style: {
                                    wrap: styles.RGBwrap,
                                    input: styles.RGBinput,
                                    label: styles.RGBlabel
                                },
                                label: 'b',
                                value: rgb.b,
                                onChange: handleChange
                            })
                        )
                    )
                )
            );
        };

        exports.default = (0, _common.ColorWrap)(Material);

        /***/
    }),
    /* 252 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Photoshop = undefined;

        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        var _PhotoshopFields = __webpack_require__(253);

        var _PhotoshopFields2 = _interopRequireDefault(_PhotoshopFields);

        var _PhotoshopPointerCircle = __webpack_require__(254);

        var _PhotoshopPointerCircle2 = _interopRequireDefault(_PhotoshopPointerCircle);

        var _PhotoshopPointer = __webpack_require__(255);

        var _PhotoshopPointer2 = _interopRequireDefault(_PhotoshopPointer);

        var _PhotoshopButton = __webpack_require__(256);

        var _PhotoshopButton2 = _interopRequireDefault(_PhotoshopButton);

        var _PhotoshopPreviews = __webpack_require__(257);

        var _PhotoshopPreviews2 = _interopRequireDefault(_PhotoshopPreviews);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var Photoshop = exports.Photoshop = function(_React$Component) {
            _inherits(Photoshop, _React$Component);

            function Photoshop(props) {
                _classCallCheck(this, Photoshop);

                var _this = _possibleConstructorReturn(this, (Photoshop.__proto__ || Object.getPrototypeOf(Photoshop)).call(this));

                _this.state = {
                    currentColor: props.hex
                };
                return _this;
            }

            _createClass(Photoshop, [{
                key: 'render',
                value: function render() {
                    var _props$className = this.props.className,
                        className = _props$className === undefined ? '' : _props$className;

                    var styles = (0, _reactcss2.default)({
                        'default': {
                            picker: {
                                background: '#DCDCDC',
                                borderRadius: '4px',
                                boxShadow: '0 0 0 1px rgba(0,0,0,.25), 0 8px 16px rgba(0,0,0,.15)',
                                boxSizing: 'initial',
                                width: '513px'
                            },
                            head: {
                                backgroundImage: 'linear-gradient(-180deg, #F0F0F0 0%, #D4D4D4 100%)',
                                borderBottom: '1px solid #B1B1B1',
                                boxShadow: 'inset 0 1px 0 0 rgba(255,255,255,.2), inset 0 -1px 0 0 rgba(0,0,0,.02)',
                                height: '23px',
                                lineHeight: '24px',
                                borderRadius: '4px 4px 0 0',
                                fontSize: '13px',
                                color: '#4D4D4D',
                                textAlign: 'center'
                            },
                            body: {
                                padding: '15px 15px 0',
                                display: 'flex'
                            },
                            saturation: {
                                width: '256px',
                                height: '256px',
                                position: 'relative',
                                border: '2px solid #B3B3B3',
                                borderBottom: '2px solid #F0F0F0',
                                overflow: 'hidden'
                            },
                            hue: {
                                position: 'relative',
                                height: '256px',
                                width: '19px',
                                marginLeft: '10px',
                                border: '2px solid #B3B3B3',
                                borderBottom: '2px solid #F0F0F0'
                            },
                            controls: {
                                width: '180px',
                                marginLeft: '10px'
                            },
                            top: {
                                display: 'flex'
                            },
                            previews: {
                                width: '60px'
                            },
                            actions: {
                                flex: '1',
                                marginLeft: '20px'
                            }
                        }
                    });

                    return _react2.default.createElement(
                        'div', {
                            style: styles.picker,
                            className: 'photoshop-picker ' + className
                        },
                        _react2.default.createElement(
                            'div', {
                                style: styles.head
                            },
                            this.props.header
                        ),
                        _react2.default.createElement(
                            'div', {
                                style: styles.body,
                                className: 'flexbox-fix'
                            },
                            _react2.default.createElement(
                                'div', {
                                    style: styles.saturation
                                },
                                _react2.default.createElement(_common.Saturation, {
                                    hsl: this.props.hsl,
                                    hsv: this.props.hsv,
                                    pointer: _PhotoshopPointerCircle2.default,
                                    onChange: this.props.onChange
                                })
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.hue
                                },
                                _react2.default.createElement(_common.Hue, {
                                    direction: 'vertical',
                                    hsl: this.props.hsl,
                                    pointer: _PhotoshopPointer2.default,
                                    onChange: this.props.onChange
                                })
                            ),
                            _react2.default.createElement(
                                'div', {
                                    style: styles.controls
                                },
                                _react2.default.createElement(
                                    'div', {
                                        style: styles.top,
                                        className: 'flexbox-fix'
                                    },
                                    _react2.default.createElement(
                                        'div', {
                                            style: styles.previews
                                        },
                                        _react2.default.createElement(_PhotoshopPreviews2.default, {
                                            rgb: this.props.rgb,
                                            currentColor: this.state.currentColor
                                        })
                                    ),
                                    _react2.default.createElement(
                                        'div', {
                                            style: styles.actions
                                        },
                                        _react2.default.createElement(_PhotoshopButton2.default, {
                                            label: 'OK',
                                            onClick: this.props.onAccept,
                                            active: true
                                        }),
                                        _react2.default.createElement(_PhotoshopButton2.default, {
                                            label: 'Cancel',
                                            onClick: this.props.onCancel
                                        }),
                                        _react2.default.createElement(_PhotoshopFields2.default, {
                                            onChange: this.props.onChange,
                                            rgb: this.props.rgb,
                                            hsv: this.props.hsv,
                                            hex: this.props.hex
                                        })
                                    )
                                )
                            )
                        )
                    );
                }
            }]);

            return Photoshop;
        }(_react2.default.Component);

        Photoshop.propTypes = {
            header: _propTypes2.default.string
        };

        Photoshop.defaultProps = {
            header: 'Color Picker'
        };

        exports.default = (0, _common.ColorWrap)(Photoshop);

        /***/
    }),
    /* 253 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.PhotoshopPicker = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var PhotoshopPicker = exports.PhotoshopPicker = function PhotoshopPicker(_ref) {
            var onChange = _ref.onChange,
                rgb = _ref.rgb,
                hsv = _ref.hsv,
                hex = _ref.hex;

            var styles = (0, _reactcss2.default)({
                'default': {
                    fields: {
                        paddingTop: '5px',
                        paddingBottom: '9px',
                        width: '80px',
                        position: 'relative'
                    },
                    divider: {
                        height: '5px'
                    },
                    RGBwrap: {
                        position: 'relative'
                    },
                    RGBinput: {
                        marginLeft: '40%',
                        width: '40%',
                        height: '18px',
                        border: '1px solid #888888',
                        boxShadow: 'inset 0 1px 1px rgba(0,0,0,.1), 0 1px 0 0 #ECECEC',
                        marginBottom: '5px',
                        fontSize: '13px',
                        paddingLeft: '3px',
                        marginRight: '10px'
                    },
                    RGBlabel: {
                        left: '0px',
                        width: '34px',
                        textTransform: 'uppercase',
                        fontSize: '13px',
                        height: '18px',
                        lineHeight: '22px',
                        position: 'absolute'
                    },
                    HEXwrap: {
                        position: 'relative'
                    },
                    HEXinput: {
                        marginLeft: '20%',
                        width: '80%',
                        height: '18px',
                        border: '1px solid #888888',
                        boxShadow: 'inset 0 1px 1px rgba(0,0,0,.1), 0 1px 0 0 #ECECEC',
                        marginBottom: '6px',
                        fontSize: '13px',
                        paddingLeft: '3px'
                    },
                    HEXlabel: {
                        position: 'absolute',
                        top: '0px',
                        left: '0px',
                        width: '14px',
                        textTransform: 'uppercase',
                        fontSize: '13px',
                        height: '18px',
                        lineHeight: '22px'
                    },
                    fieldSymbols: {
                        position: 'absolute',
                        top: '5px',
                        right: '-7px',
                        fontSize: '13px'
                    },
                    symbol: {
                        height: '20px',
                        lineHeight: '22px',
                        paddingBottom: '7px'
                    }
                }
            });

            var handleChange = function handleChange(data, e) {
                if (data['#']) {
                    _color2.default.isValidHex(data['#']) && onChange({
                        hex: data['#'],
                        source: 'hex'
                    }, e);
                } else if (data.r || data.g || data.b) {
                    onChange({
                        r: data.r || rgb.r,
                        g: data.g || rgb.g,
                        b: data.b || rgb.b,
                        source: 'rgb'
                    }, e);
                } else if (data.h || data.s || data.v) {
                    onChange({
                        h: data.h || hsv.h,
                        s: data.s || hsv.s,
                        v: data.v || hsv.v,
                        source: 'hsv'
                    }, e);
                }
            };

            return _react2.default.createElement(
                'div', {
                    style: styles.fields
                },
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.RGBwrap,
                        input: styles.RGBinput,
                        label: styles.RGBlabel
                    },
                    label: 'h',
                    value: Math.round(hsv.h),
                    onChange: handleChange
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.RGBwrap,
                        input: styles.RGBinput,
                        label: styles.RGBlabel
                    },
                    label: 's',
                    value: Math.round(hsv.s * 100),
                    onChange: handleChange
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.RGBwrap,
                        input: styles.RGBinput,
                        label: styles.RGBlabel
                    },
                    label: 'v',
                    value: Math.round(hsv.v * 100),
                    onChange: handleChange
                }),
                _react2.default.createElement('div', {
                    style: styles.divider
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.RGBwrap,
                        input: styles.RGBinput,
                        label: styles.RGBlabel
                    },
                    label: 'r',
                    value: rgb.r,
                    onChange: handleChange
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.RGBwrap,
                        input: styles.RGBinput,
                        label: styles.RGBlabel
                    },
                    label: 'g',
                    value: rgb.g,
                    onChange: handleChange
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.RGBwrap,
                        input: styles.RGBinput,
                        label: styles.RGBlabel
                    },
                    label: 'b',
                    value: rgb.b,
                    onChange: handleChange
                }),
                _react2.default.createElement('div', {
                    style: styles.divider
                }),
                _react2.default.createElement(_common.EditableInput, {
                    style: {
                        wrap: styles.HEXwrap,
                        input: styles.HEXinput,
                        label: styles.HEXlabel
                    },
                    label: '#',
                    value: hex.replace('#', ''),
                    onChange: handleChange
                }),
                _react2.default.createElement(
                    'div', {
                        style: styles.fieldSymbols
                    },
                    _react2.default.createElement(
                        'div', {
                            style: styles.symbol
                        },
                        '\xB0'
                    ),
                    _react2.default.createElement(
                        'div', {
                            style: styles.symbol
                        },
                        '%'
                    ),
                    _react2.default.createElement(
                        'div', {
                            style: styles.symbol
                        },
                        '%'
                    )
                )
            );
        };

        exports.default = PhotoshopPicker;

        /***/
    }),
    /* 254 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.PhotoshopPointerCircle = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var PhotoshopPointerCircle = exports.PhotoshopPointerCircle = function PhotoshopPointerCircle(_ref) {
            var hsl = _ref.hsl;

            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        width: '12px',
                        height: '12px',
                        borderRadius: '6px',
                        boxShadow: 'inset 0 0 0 1px #fff',
                        transform: 'translate(-6px, -6px)'
                    }
                },
                'black-outline': {
                    picker: {
                        boxShadow: 'inset 0 0 0 1px #000'
                    }
                }
            }, {
                'black-outline': hsl.l > 0.5
            });

            return _react2.default.createElement('div', {
                style: styles.picker
            });
        };

        exports.default = PhotoshopPointerCircle;

        /***/
    }),
    /* 255 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.PhotoshopPointerCircle = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var PhotoshopPointerCircle = exports.PhotoshopPointerCircle = function PhotoshopPointerCircle() {
            var styles = (0, _reactcss2.default)({
                'default': {
                    triangle: {
                        width: 0,
                        height: 0,
                        borderStyle: 'solid',
                        borderWidth: '4px 0 4px 6px',
                        borderColor: 'transparent transparent transparent #fff',
                        position: 'absolute',
                        top: '1px',
                        left: '1px'
                    },
                    triangleBorder: {
                        width: 0,
                        height: 0,
                        borderStyle: 'solid',
                        borderWidth: '5px 0 5px 8px',
                        borderColor: 'transparent transparent transparent #555'
                    },

                    left: {
                        Extend: 'triangleBorder',
                        transform: 'translate(-13px, -4px)'
                    },
                    leftInside: {
                        Extend: 'triangle',
                        transform: 'translate(-8px, -5px)'
                    },

                    right: {
                        Extend: 'triangleBorder',
                        transform: 'translate(20px, -14px) rotate(180deg)'
                    },
                    rightInside: {
                        Extend: 'triangle',
                        transform: 'translate(-8px, -5px)'
                    }
                }
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.pointer
                },
                _react2.default.createElement(
                    'div', {
                        style: styles.left
                    },
                    _react2.default.createElement('div', {
                        style: styles.leftInside
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.right
                    },
                    _react2.default.createElement('div', {
                        style: styles.rightInside
                    })
                )
            );
        };

        exports.default = PhotoshopPointerCircle;

        /***/
    }),
    /* 256 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.PhotoshopBotton = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var PhotoshopBotton = exports.PhotoshopBotton = function PhotoshopBotton(_ref) {
            var onClick = _ref.onClick,
                label = _ref.label,
                children = _ref.children,
                active = _ref.active;

            var styles = (0, _reactcss2.default)({
                'default': {
                    button: {
                        backgroundImage: 'linear-gradient(-180deg, #FFFFFF 0%, #E6E6E6 100%)',
                        border: '1px solid #878787',
                        borderRadius: '2px',
                        height: '20px',
                        boxShadow: '0 1px 0 0 #EAEAEA',
                        fontSize: '14px',
                        color: '#000',
                        lineHeight: '20px',
                        textAlign: 'center',
                        marginBottom: '10px',
                        cursor: 'pointer'
                    }
                },
                'active': {
                    button: {
                        boxShadow: '0 0 0 1px #878787'
                    }
                }
            }, {
                active: active
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.button,
                    onClick: onClick
                },
                label || children
            );
        };

        exports.default = PhotoshopBotton;

        /***/
    }),
    /* 257 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.PhotoshopPreviews = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var PhotoshopPreviews = exports.PhotoshopPreviews = function PhotoshopPreviews(_ref) {
            var rgb = _ref.rgb,
                currentColor = _ref.currentColor;

            var styles = (0, _reactcss2.default)({
                'default': {
                    swatches: {
                        border: '1px solid #B3B3B3',
                        borderBottom: '1px solid #F0F0F0',
                        marginBottom: '2px',
                        marginTop: '1px'
                    },
                    new: {
                        height: '34px',
                        background: 'rgb(' + rgb.r + ',' + rgb.g + ', ' + rgb.b + ')',
                        boxShadow: 'inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 1px 0 #000'
                    },
                    current: {
                        height: '34px',
                        background: currentColor,
                        boxShadow: 'inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 -1px 0 #000'
                    },
                    label: {
                        fontSize: '14px',
                        color: '#000',
                        textAlign: 'center'
                    }
                }
            });

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div', {
                        style: styles.label
                    },
                    'new'
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.swatches
                    },
                    _react2.default.createElement('div', {
                        style: styles.new
                    }),
                    _react2.default.createElement('div', {
                        style: styles.current
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.label
                    },
                    'current'
                )
            );
        };

        exports.default = PhotoshopPreviews;

        /***/
    }),
    /* 258 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Sketch = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        var _SketchFields = __webpack_require__(259);

        var _SketchFields2 = _interopRequireDefault(_SketchFields);

        var _SketchPresetColors = __webpack_require__(260);

        var _SketchPresetColors2 = _interopRequireDefault(_SketchPresetColors);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Sketch = exports.Sketch = function Sketch(_ref) {
            var width = _ref.width,
                rgb = _ref.rgb,
                hex = _ref.hex,
                hsv = _ref.hsv,
                hsl = _ref.hsl,
                onChange = _ref.onChange,
                onSwatchHover = _ref.onSwatchHover,
                disableAlpha = _ref.disableAlpha,
                presetColors = _ref.presetColors,
                renderers = _ref.renderers,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        width: width,
                        padding: '10px 10px 0',
                        boxSizing: 'initial',
                        background: '#fff',
                        borderRadius: '4px',
                        boxShadow: '0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)'
                    },
                    saturation: {
                        width: '100%',
                        paddingBottom: '75%',
                        position: 'relative',
                        overflow: 'hidden'
                    },
                    Saturation: {
                        radius: '3px',
                        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
                    },
                    controls: {
                        display: 'flex'
                    },
                    sliders: {
                        padding: '4px 0',
                        flex: '1'
                    },
                    color: {
                        width: '24px',
                        height: '24px',
                        position: 'relative',
                        marginTop: '4px',
                        marginLeft: '4px',
                        borderRadius: '3px'
                    },
                    activeColor: {
                        absolute: '0px 0px 0px 0px',
                        borderRadius: '2px',
                        background: 'rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ',' + rgb.a + ')',
                        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
                    },
                    hue: {
                        position: 'relative',
                        height: '10px',
                        overflow: 'hidden'
                    },
                    Hue: {
                        radius: '2px',
                        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
                    },

                    alpha: {
                        position: 'relative',
                        height: '10px',
                        marginTop: '4px',
                        overflow: 'hidden'
                    },
                    Alpha: {
                        radius: '2px',
                        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
                    }
                },
                'disableAlpha': {
                    color: {
                        height: '10px'
                    },
                    hue: {
                        height: '10px'
                    },
                    alpha: {
                        display: 'none'
                    }
                }
            }, {
                disableAlpha: disableAlpha
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.picker,
                    className: 'sketch-picker ' + className
                },
                _react2.default.createElement(
                    'div', {
                        style: styles.saturation
                    },
                    _react2.default.createElement(_common.Saturation, {
                        style: styles.Saturation,
                        hsl: hsl,
                        hsv: hsv,
                        onChange: onChange
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.controls,
                        className: 'flexbox-fix'
                    },
                    _react2.default.createElement(
                        'div', {
                            style: styles.sliders
                        },
                        _react2.default.createElement(
                            'div', {
                                style: styles.hue
                            },
                            _react2.default.createElement(_common.Hue, {
                                style: styles.Hue,
                                hsl: hsl,
                                onChange: onChange
                            })
                        ),
                        _react2.default.createElement(
                            'div', {
                                style: styles.alpha
                            },
                            _react2.default.createElement(_common.Alpha, {
                                style: styles.Alpha,
                                rgb: rgb,
                                hsl: hsl,
                                renderers: renderers,
                                onChange: onChange
                            })
                        )
                    ),
                    _react2.default.createElement(
                        'div', {
                            style: styles.color
                        },
                        _react2.default.createElement(_common.Checkboard, null),
                        _react2.default.createElement('div', {
                            style: styles.activeColor
                        })
                    )
                ),
                _react2.default.createElement(_SketchFields2.default, {
                    rgb: rgb,
                    hsl: hsl,
                    hex: hex,
                    onChange: onChange,
                    disableAlpha: disableAlpha
                }),
                _react2.default.createElement(_SketchPresetColors2.default, {
                    colors: presetColors,
                    onClick: onChange,
                    onSwatchHover: onSwatchHover
                })
            );
        };

        Sketch.propTypes = {
            disableAlpha: _propTypes2.default.bool,
            width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
        };

        Sketch.defaultProps = {
            disableAlpha: false,
            width: 200,
            presetColors: ['#D0021B', '#F5A623', '#F8E71C', '#8B572A', '#7ED321', '#417505', '#BD10E0', '#9013FE', '#4A90E2', '#50E3C2', '#B8E986', '#000000', '#4A4A4A', '#9B9B9B', '#FFFFFF']
        };

        exports.default = (0, _common.ColorWrap)(Sketch);

        /***/
    }),
    /* 259 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.SketchFields = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        /* eslint-disable no-param-reassign */

        var SketchFields = exports.SketchFields = function SketchFields(_ref) {
            var onChange = _ref.onChange,
                rgb = _ref.rgb,
                hsl = _ref.hsl,
                hex = _ref.hex,
                disableAlpha = _ref.disableAlpha;

            var styles = (0, _reactcss2.default)({
                'default': {
                    fields: {
                        display: 'flex',
                        paddingTop: '4px'
                    },
                    single: {
                        flex: '1',
                        paddingLeft: '6px'
                    },
                    alpha: {
                        flex: '1',
                        paddingLeft: '6px'
                    },
                    double: {
                        flex: '2'
                    },
                    input: {
                        width: '80%',
                        padding: '4px 10% 3px',
                        border: 'none',
                        boxShadow: 'inset 0 0 0 1px #ccc',
                        fontSize: '11px'
                    },
                    label: {
                        display: 'block',
                        textAlign: 'center',
                        fontSize: '11px',
                        color: '#222',
                        paddingTop: '3px',
                        paddingBottom: '4px',
                        textTransform: 'capitalize'
                    }
                },
                'disableAlpha': {
                    alpha: {
                        display: 'none'
                    }
                }
            }, {
                disableAlpha: disableAlpha
            });

            var handleChange = function handleChange(data, e) {
                if (data.hex) {
                    _color2.default.isValidHex(data.hex) && onChange({
                        hex: data.hex,
                        source: 'hex'
                    }, e);
                } else if (data.r || data.g || data.b) {
                    onChange({
                        r: data.r || rgb.r,
                        g: data.g || rgb.g,
                        b: data.b || rgb.b,
                        a: rgb.a,
                        source: 'rgb'
                    }, e);
                } else if (data.a) {
                    if (data.a < 0) {
                        data.a = 0;
                    } else if (data.a > 100) {
                        data.a = 100;
                    }

                    data.a /= 100;
                    onChange({
                        h: hsl.h,
                        s: hsl.s,
                        l: hsl.l,
                        a: data.a,
                        source: 'rgb'
                    }, e);
                }
            };

            return _react2.default.createElement(
                'div', {
                    style: styles.fields,
                    className: 'flexbox-fix'
                },
                _react2.default.createElement(
                    'div', {
                        style: styles.double
                    },
                    _react2.default.createElement(_common.EditableInput, {
                        style: {
                            input: styles.input,
                            label: styles.label
                        },
                        label: 'hex',
                        value: hex.replace('#', ''),
                        onChange: handleChange
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.single
                    },
                    _react2.default.createElement(_common.EditableInput, {
                        style: {
                            input: styles.input,
                            label: styles.label
                        },
                        label: 'r',
                        value: rgb.r,
                        onChange: handleChange,
                        dragLabel: 'true',
                        dragMax: '255'
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.single
                    },
                    _react2.default.createElement(_common.EditableInput, {
                        style: {
                            input: styles.input,
                            label: styles.label
                        },
                        label: 'g',
                        value: rgb.g,
                        onChange: handleChange,
                        dragLabel: 'true',
                        dragMax: '255'
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.single
                    },
                    _react2.default.createElement(_common.EditableInput, {
                        style: {
                            input: styles.input,
                            label: styles.label
                        },
                        label: 'b',
                        value: rgb.b,
                        onChange: handleChange,
                        dragLabel: 'true',
                        dragMax: '255'
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.alpha
                    },
                    _react2.default.createElement(_common.EditableInput, {
                        style: {
                            input: styles.input,
                            label: styles.label
                        },
                        label: 'a',
                        value: Math.round(rgb.a * 100),
                        onChange: handleChange,
                        dragLabel: 'true',
                        dragMax: '100'
                    })
                )
            );
        };

        exports.default = SketchFields;

        /***/
    }),
    /* 260 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.SketchPresetColors = undefined;

        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
            return target;
        };

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var SketchPresetColors = exports.SketchPresetColors = function SketchPresetColors(_ref) {
            var colors = _ref.colors,
                _ref$onClick = _ref.onClick,
                onClick = _ref$onClick === undefined ? function() {} : _ref$onClick,
                onSwatchHover = _ref.onSwatchHover;

            var styles = (0, _reactcss2.default)({
                'default': {
                    colors: {
                        margin: '0 -10px',
                        padding: '10px 0 0 10px',
                        borderTop: '1px solid #eee',
                        display: 'flex',
                        flexWrap: 'wrap',
                        position: 'relative'
                    },
                    swatchWrap: {
                        width: '16px',
                        height: '16px',
                        margin: '0 10px 10px 0'
                    },
                    swatch: {
                        borderRadius: '3px',
                        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15)'
                    }
                },
                'no-presets': {
                    colors: {
                        display: 'none'
                    }
                }
            }, {
                'no-presets': !colors || !colors.length
            });

            var handleClick = function handleClick(hex, e) {
                onClick({
                    hex: hex,
                    source: 'hex'
                }, e);
            };

            return _react2.default.createElement(
                'div', {
                    style: styles.colors,
                    className: 'flexbox-fix'
                },
                colors.map(function(colorObjOrString) {
                    var c = typeof colorObjOrString === 'string' ? {
                        color: colorObjOrString
                    } : colorObjOrString;
                    var key = '' + c.color + (c.title || '');
                    return _react2.default.createElement(
                        'div', {
                            key: key,
                            style: styles.swatchWrap
                        },
                        _react2.default.createElement(_common.Swatch, _extends({}, c, {
                            style: styles.swatch,
                            onClick: handleClick,
                            onHover: onSwatchHover,
                            focusStyle: {
                                boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ' + c.color
                            }
                        }))
                    );
                })
            );
        };

        SketchPresetColors.propTypes = {
            colors: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
                color: _propTypes2.default.string,
                title: _propTypes2.default.string
            })])).isRequired
        };

        exports.default = SketchPresetColors;

        /***/
    }),
    /* 261 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Slider = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _common = __webpack_require__(2);

        var _SliderSwatches = __webpack_require__(262);

        var _SliderSwatches2 = _interopRequireDefault(_SliderSwatches);

        var _SliderPointer = __webpack_require__(264);

        var _SliderPointer2 = _interopRequireDefault(_SliderPointer);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Slider = exports.Slider = function Slider(_ref) {
            var hsl = _ref.hsl,
                onChange = _ref.onChange,
                pointer = _ref.pointer,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    hue: {
                        height: '12px',
                        position: 'relative'
                    },
                    Hue: {
                        radius: '2px'
                    }
                }
            });

            return _react2.default.createElement(
                'div', {
                    className: 'slider-picker ' + className
                },
                _react2.default.createElement(
                    'div', {
                        style: styles.hue
                    },
                    _react2.default.createElement(_common.Hue, {
                        style: styles.Hue,
                        hsl: hsl,
                        pointer: pointer,
                        onChange: onChange
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.swatches
                    },
                    _react2.default.createElement(_SliderSwatches2.default, {
                        hsl: hsl,
                        onClick: onChange
                    })
                )
            );
        };

        Slider.defaultProps = {
            pointer: _SliderPointer2.default
        };

        exports.default = (0, _common.ColorWrap)(Slider);

        /***/
    }),
    /* 262 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.SliderSwatches = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _SliderSwatch = __webpack_require__(263);

        var _SliderSwatch2 = _interopRequireDefault(_SliderSwatch);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var SliderSwatches = exports.SliderSwatches = function SliderSwatches(_ref) {
            var onClick = _ref.onClick,
                hsl = _ref.hsl;

            var styles = (0, _reactcss2.default)({
                'default': {
                    swatches: {
                        marginTop: '20px'
                    },
                    swatch: {
                        boxSizing: 'border-box',
                        width: '20%',
                        paddingRight: '1px',
                        float: 'left'
                    },
                    clear: {
                        clear: 'both'
                    }
                }
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.swatches
                },
                _react2.default.createElement(
                    'div', {
                        style: styles.swatch
                    },
                    _react2.default.createElement(_SliderSwatch2.default, {
                        hsl: hsl,
                        offset: '.80',
                        active: Math.round(hsl.l * 100) / 100 === 0.80 && Math.round(hsl.s * 100) / 100 === 0.50,
                        onClick: onClick,
                        first: true
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.swatch
                    },
                    _react2.default.createElement(_SliderSwatch2.default, {
                        hsl: hsl,
                        offset: '.65',
                        active: Math.round(hsl.l * 100) / 100 === 0.65 && Math.round(hsl.s * 100) / 100 === 0.50,
                        onClick: onClick
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.swatch
                    },
                    _react2.default.createElement(_SliderSwatch2.default, {
                        hsl: hsl,
                        offset: '.50',
                        active: Math.round(hsl.l * 100) / 100 === 0.50 && Math.round(hsl.s * 100) / 100 === 0.50,
                        onClick: onClick
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.swatch
                    },
                    _react2.default.createElement(_SliderSwatch2.default, {
                        hsl: hsl,
                        offset: '.35',
                        active: Math.round(hsl.l * 100) / 100 === 0.35 && Math.round(hsl.s * 100) / 100 === 0.50,
                        onClick: onClick
                    })
                ),
                _react2.default.createElement(
                    'div', {
                        style: styles.swatch
                    },
                    _react2.default.createElement(_SliderSwatch2.default, {
                        hsl: hsl,
                        offset: '.20',
                        active: Math.round(hsl.l * 100) / 100 === 0.20 && Math.round(hsl.s * 100) / 100 === 0.50,
                        onClick: onClick,
                        last: true
                    })
                ),
                _react2.default.createElement('div', {
                    style: styles.clear
                })
            );
        };

        exports.default = SliderSwatches;

        /***/
    }),
    /* 263 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.SliderSwatch = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var SliderSwatch = exports.SliderSwatch = function SliderSwatch(_ref) {
            var hsl = _ref.hsl,
                offset = _ref.offset,
                _ref$onClick = _ref.onClick,
                onClick = _ref$onClick === undefined ? function() {} : _ref$onClick,
                active = _ref.active,
                first = _ref.first,
                last = _ref.last;

            var styles = (0, _reactcss2.default)({
                'default': {
                    swatch: {
                        height: '12px',
                        background: 'hsl(' + hsl.h + ', 50%, ' + offset * 100 + '%)',
                        cursor: 'pointer'
                    }
                },
                'first': {
                    swatch: {
                        borderRadius: '2px 0 0 2px'
                    }
                },
                'last': {
                    swatch: {
                        borderRadius: '0 2px 2px 0'
                    }
                },
                'active': {
                    swatch: {
                        transform: 'scaleY(1.8)',
                        borderRadius: '3.6px/2px'
                    }
                }
            }, {
                active: active,
                first: first,
                last: last
            });

            var handleClick = function handleClick(e) {
                return onClick({
                    h: hsl.h,
                    s: 0.5,
                    l: offset,
                    source: 'hsl'
                }, e);
            };

            return _react2.default.createElement('div', {
                style: styles.swatch,
                onClick: handleClick
            });
        };

        exports.default = SliderSwatch;

        /***/
    }),
    /* 264 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.SliderPointer = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var SliderPointer = exports.SliderPointer = function SliderPointer() {
            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        width: '14px',
                        height: '14px',
                        borderRadius: '6px',
                        transform: 'translate(-7px, -1px)',
                        backgroundColor: 'rgb(248, 248, 248)',
                        boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)'
                    }
                }
            });

            return _react2.default.createElement('div', {
                style: styles.picker
            });
        };

        exports.default = SliderPointer;

        /***/
    }),
    /* 265 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Swatches = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _map = __webpack_require__(9);

        var _map2 = _interopRequireDefault(_map);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _materialColors = __webpack_require__(77);

        var material = _interopRequireWildcard(_materialColors);

        var _common = __webpack_require__(2);

        var _SwatchesGroup = __webpack_require__(266);

        var _SwatchesGroup2 = _interopRequireDefault(_SwatchesGroup);

        function _interopRequireWildcard(obj) {
            if (obj && obj.__esModule) {
                return obj;
            } else {
                var newObj = {};
                if (obj != null) {
                    for (var key in obj) {
                        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                    }
                }
                newObj.default = obj;
                return newObj;
            }
        }

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Swatches = exports.Swatches = function Swatches(_ref) {
            var width = _ref.width,
                height = _ref.height,
                onChange = _ref.onChange,
                onSwatchHover = _ref.onSwatchHover,
                colors = _ref.colors,
                hex = _ref.hex,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    picker: {
                        width: width,
                        height: height
                    },
                    overflow: {
                        height: height,
                        overflowY: 'scroll'
                    },
                    body: {
                        padding: '16px 0 6px 16px'
                    },
                    clear: {
                        clear: 'both'
                    }
                }
            });

            var handleChange = function handleChange(data, e) {
                _color2.default.isValidHex(data) && onChange({
                    hex: data,
                    source: 'hex'
                }, e);
            };

            return _react2.default.createElement(
                'div', {
                    style: styles.picker,
                    className: 'swatches-picker ' + className
                },
                _react2.default.createElement(
                    _common.Raised,
                    null,
                    _react2.default.createElement(
                        'div', {
                            style: styles.overflow
                        },
                        _react2.default.createElement(
                            'div', {
                                style: styles.body
                            },
                            (0, _map2.default)(colors, function(group) {
                                return _react2.default.createElement(_SwatchesGroup2.default, {
                                    key: group.toString(),
                                    group: group,
                                    active: hex,
                                    onClick: handleChange,
                                    onSwatchHover: onSwatchHover
                                });
                            }),
                            _react2.default.createElement('div', {
                                style: styles.clear
                            })
                        )
                    )
                )
            );
        };

        Swatches.propTypes = {
            width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
            height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
            colors: _propTypes2.default.arrayOf(_propTypes2.default.arrayOf(_propTypes2.default.string))

            /* eslint-disable max-len */
        };
        Swatches.defaultProps = {
            width: 320,
            height: 240,
            colors: [
                [material.red['900'], material.red['700'], material.red['500'], material.red['300'], material.red['100']],
                [material.pink['900'], material.pink['700'], material.pink['500'], material.pink['300'], material.pink['100']],
                [material.purple['900'], material.purple['700'], material.purple['500'], material.purple['300'], material.purple['100']],
                [material.deepPurple['900'], material.deepPurple['700'], material.deepPurple['500'], material.deepPurple['300'], material.deepPurple['100']],
                [material.indigo['900'], material.indigo['700'], material.indigo['500'], material.indigo['300'], material.indigo['100']],
                [material.blue['900'], material.blue['700'], material.blue['500'], material.blue['300'], material.blue['100']],
                [material.lightBlue['900'], material.lightBlue['700'], material.lightBlue['500'], material.lightBlue['300'], material.lightBlue['100']],
                [material.cyan['900'], material.cyan['700'], material.cyan['500'], material.cyan['300'], material.cyan['100']],
                [material.teal['900'], material.teal['700'], material.teal['500'], material.teal['300'], material.teal['100']],
                ['#194D33', material.green['700'], material.green['500'], material.green['300'], material.green['100']],
                [material.lightGreen['900'], material.lightGreen['700'], material.lightGreen['500'], material.lightGreen['300'], material.lightGreen['100']],
                [material.lime['900'], material.lime['700'], material.lime['500'], material.lime['300'], material.lime['100']],
                [material.yellow['900'], material.yellow['700'], material.yellow['500'], material.yellow['300'], material.yellow['100']],
                [material.amber['900'], material.amber['700'], material.amber['500'], material.amber['300'], material.amber['100']],
                [material.orange['900'], material.orange['700'], material.orange['500'], material.orange['300'], material.orange['100']],
                [material.deepOrange['900'], material.deepOrange['700'], material.deepOrange['500'], material.deepOrange['300'], material.deepOrange['100']],
                [material.brown['900'], material.brown['700'], material.brown['500'], material.brown['300'], material.brown['100']],
                [material.blueGrey['900'], material.blueGrey['700'], material.blueGrey['500'], material.blueGrey['300'], material.blueGrey['100']],
                ['#000000', '#525252', '#969696', '#D9D9D9', '#FFFFFF']
            ]
        };

        exports.default = (0, _common.ColorWrap)(Swatches);

        /***/
    }),
    /* 266 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.SwatchesGroup = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _map = __webpack_require__(9);

        var _map2 = _interopRequireDefault(_map);

        var _SwatchesColor = __webpack_require__(267);

        var _SwatchesColor2 = _interopRequireDefault(_SwatchesColor);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var SwatchesGroup = exports.SwatchesGroup = function SwatchesGroup(_ref) {
            var onClick = _ref.onClick,
                onSwatchHover = _ref.onSwatchHover,
                group = _ref.group,
                active = _ref.active;

            var styles = (0, _reactcss2.default)({
                'default': {
                    group: {
                        paddingBottom: '10px',
                        width: '40px',
                        float: 'left',
                        marginRight: '10px'
                    }
                }
            });

            return _react2.default.createElement(
                'div', {
                    style: styles.group
                },
                (0, _map2.default)(group, function(color, i) {
                    return _react2.default.createElement(_SwatchesColor2.default, {
                        key: color,
                        color: color,
                        active: color.toLowerCase() === active,
                        first: i === 0,
                        last: i === group.length - 1,
                        onClick: onClick,
                        onSwatchHover: onSwatchHover
                    });
                })
            );
        };

        exports.default = SwatchesGroup;

        /***/
    }),
    /* 267 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.SwatchesColor = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var SwatchesColor = exports.SwatchesColor = function SwatchesColor(_ref) {
            var color = _ref.color,
                _ref$onClick = _ref.onClick,
                onClick = _ref$onClick === undefined ? function() {} : _ref$onClick,
                onSwatchHover = _ref.onSwatchHover,
                first = _ref.first,
                last = _ref.last,
                active = _ref.active;

            var styles = (0, _reactcss2.default)({
                'default': {
                    color: {
                        width: '40px',
                        height: '24px',
                        cursor: 'pointer',
                        background: color,
                        marginBottom: '1px'
                    },
                    check: {
                        fill: _color2.default.getContrastingColor(color),
                        marginLeft: '8px',
                        display: 'none'
                    }
                },
                'first': {
                    color: {
                        overflow: 'hidden',
                        borderRadius: '2px 2px 0 0'
                    }
                },
                'last': {
                    color: {
                        overflow: 'hidden',
                        borderRadius: '0 0 2px 2px'
                    }
                },
                'active': {
                    check: {
                        display: 'block'
                    }
                },
                'color-#FFFFFF': {
                    color: {
                        boxShadow: 'inset 0 0 0 1px #ddd'
                    },
                    check: {
                        fill: '#333'
                    }
                },
                'transparent': {
                    check: {
                        fill: '#333'
                    }
                }
            }, {
                first: first,
                last: last,
                active: active,
                'color-#FFFFFF': color === '#FFFFFF',
                'transparent': color === 'transparent'
            });

            return _react2.default.createElement(
                _common.Swatch, {
                    color: color,
                    style: styles.color,
                    onClick: onClick,
                    onHover: onSwatchHover,
                    focusStyle: {
                        boxShadow: '0 0 4px ' + color
                    }
                },
                _react2.default.createElement(
                    'div', {
                        style: styles.check
                    },
                    _react2.default.createElement(
                        'svg', {
                            style: {
                                width: '24px',
                                height: '24px'
                            },
                            viewBox: '0 0 24 24'
                        },
                        _react2.default.createElement('path', {
                            d: 'M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z'
                        })
                    )
                )
            );
        };

        exports.default = SwatchesColor;

        /***/
    }),
    /* 268 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Twitter = undefined;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(3);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactcss = __webpack_require__(1);

        var _reactcss2 = _interopRequireDefault(_reactcss);

        var _map = __webpack_require__(9);

        var _map2 = _interopRequireDefault(_map);

        var _color = __webpack_require__(6);

        var _color2 = _interopRequireDefault(_color);

        var _common = __webpack_require__(2);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var Twitter = exports.Twitter = function Twitter(_ref) {
            var onChange = _ref.onChange,
                onSwatchHover = _ref.onSwatchHover,
                hex = _ref.hex,
                colors = _ref.colors,
                width = _ref.width,
                triangle = _ref.triangle,
                _ref$className = _ref.className,
                className = _ref$className === undefined ? '' : _ref$className;

            var styles = (0, _reactcss2.default)({
                'default': {
                    card: {
                        width: width,
                        background: '#fff',
                        border: '0 solid rgba(0,0,0,0.25)',
                        boxShadow: '0 1px 4px rgba(0,0,0,0.25)',
                        borderRadius: '4px',
                        position: 'relative'
                    },
                    body: {
                        padding: '15px 9px 9px 15px'
                    },
                    label: {
                        fontSize: '18px',
                        color: '#fff'
                    },
                    triangle: {
                        width: '0px',
                        height: '0px',
                        borderStyle: 'solid',
                        borderWidth: '0 9px 10px 9px',
                        borderColor: 'transparent transparent #fff transparent',
                        position: 'absolute'
                    },
                    triangleShadow: {
                        width: '0px',
                        height: '0px',
                        borderStyle: 'solid',
                        borderWidth: '0 9px 10px 9px',
                        borderColor: 'transparent transparent rgba(0,0,0,.1) transparent',
                        position: 'absolute'
                    },
                    hash: {
                        background: '#F0F0F0',
                        height: '30px',
                        width: '30px',
                        borderRadius: '4px 0 0 4px',
                        float: 'left',
                        color: '#98A1A4',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center'
                    },
                    input: {
                        width: '100px',
                        fontSize: '14px',
                        color: '#666',
                        border: '0px',
                        outline: 'none',
                        height: '28px',
                        boxShadow: 'inset 0 0 0 1px #F0F0F0',
                        boxSizing: 'content-box',
                        borderRadius: '0 4px 4px 0',
                        float: 'left',
                        paddingLeft: '8px'
                    },
                    swatch: {
                        width: '30px',
                        height: '30px',
                        float: 'left',
                        borderRadius: '4px',
                        margin: '0 6px 6px 0'
                    },
                    clear: {
                        clear: 'both'
                    }
                },
                'hide-triangle': {
                    triangle: {
                        display: 'none'
                    },
                    triangleShadow: {
                        display: 'none'
                    }
                },
                'top-left-triangle': {
                    triangle: {
                        top: '-10px',
                        left: '12px'
                    },
                    triangleShadow: {
                        top: '-11px',
                        left: '12px'
                    }
                },
                'top-right-triangle': {
                    triangle: {
                        top: '-10px',
                        right: '12px'
                    },
                    triangleShadow: {
                        top: '-11px',
                        right: '12px'
                    }
                }
            }, {
                'hide-triangle': triangle === 'hide',
                'top-left-triangle': triangle === 'top-left',
                'top-right-triangle': triangle === 'top-right'
            });

            var handleChange = function handleChange(hexcode, e) {
                _color2.default.isValidHex(hexcode) && onChange({
                    hex: hexcode,
                    source: 'hex'
                }, e);
            };

            return _react2.default.createElement(
                'div', {
                    style: styles.card,
                    className: 'twitter-picker ' + className
                },
                _react2.default.createElement('div', {
                    style: styles.triangleShadow
                }),
                _react2.default.createElement('div', {
                    style: styles.triangle
                }),
                _react2.default.createElement(
                    'div', {
                        style: styles.body
                    },
                    (0, _map2.default)(colors, function(c, i) {
                        return _react2.default.createElement(_common.Swatch, {
                            key: i,
                            color: c,
                            hex: c,
                            style: styles.swatch,
                            onClick: handleChange,
                            onHover: onSwatchHover,
                            focusStyle: {
                                boxShadow: '0 0 4px ' + c
                            }
                        });
                    }),
                    _react2.default.createElement(
                        'div', {
                            style: styles.hash
                        },
                        '#'
                    ),
                    _react2.default.createElement(_common.EditableInput, {
                        style: {
                            input: styles.input
                        },
                        value: hex.replace('#', ''),
                        onChange: handleChange
                    }),
                    _react2.default.createElement('div', {
                        style: styles.clear
                    })
                )
            );
        };

        Twitter.propTypes = {
            width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
            triangle: _propTypes2.default.oneOf(['hide', 'top-left', 'top-right']),
            colors: _propTypes2.default.arrayOf(_propTypes2.default.string)
        };

        Twitter.defaultProps = {
            width: 276,
            colors: ['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'],
            triangle: 'top-left'
        };

        exports.default = (0, _common.ColorWrap)(Twitter);

        /***/
    }),
    /* 269 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return bellData;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return formalData;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "d", function() {
            return periodData;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "c", function() {
            return formalPeriodData;
        });
        var bellData = {
            1: { //Monday
                "08:45": "the start of school",
                "09:59": "the end of period 1",
                "10:50": "the end of period 2",
                "11:06": "the end of recess",
                "11:57": "the end of period 3",
                "12:48": "the end of period 4",
                "13:28": "the end of lunch",
                "14:19": "the end of period 5",
                "15:10": "the end of school"
            },
            2: { //Tuesday
                "08:45": "the start of school",
                "09:47": "the end of period 1",
                "10:38": "the end of period 2",
                "10:54": "the end of recess",
                "11:45": "the end of period 3",
                "12:36": "the end of period 4",
                "13:22": "the end of lunch",
                "14:16": "the end of period 5",
                "15:10": "the end of school"
            },
            3: { //Wednesday
                "08:45": "the start of school",
                "09:49": "the end of period 1",
                "10:42": "the end of period 2",
                "10:58": "the end of recess",
                "11:51": "the end of period 3",
                "12:44": "the end of period 4",
                "13:24": "the end of lunch",
                "14:17": "the end of period 5",
                "15:10": "the end of school"
            },
            4: { //Thursday
                "08:45": "the start of school",
                "09:54": "the end of period 1",
                "10:46": "the end of period 2",
                "11:02": "the end of recess",
                "11:54": "the end of period 3",
                "12:46": "the end of period 4",
                "13:26": "the end of lunch",
                "14:18": "the end of school",
                "15:10": "3:10"
            },
            5: { //Friday
                "08:45": "the start of school",
                "09:48": "the end of period 1",
                "10:40": "the end of period 2",
                "11:02": "the end of recess",
                "11:54": "the end of period 3",
                "12:46": "the end of period 4",
                "13:26": "the end of lunch",
                "14:18": "the end of period 5",
                "15:10": "the end of school"
            }
        };
        var formalData = {
            "08:45": "the start of school",
            "10:19": "the end of period 1",
            "11:06": "the end of period 2",
            "11:22": "the end of Recess",
            "12:09": "the end of period 3",
            "12:56": "the end of period 4",
            "13:36": "the end of Lunch",
            "14:23": "the end of period 5",
            "15:10": "the end of school" // PERIOD DATA --------------------------
        };
        var periodData = {
            1: { // Monday
                "09:59": 1,
                "10:50": 2,
                "11:57": 3,
                "12:48": 4,
                "14:19": 5,
                "15:10": 6
            },
            2: { // Tuesday
                "09:47": 1,
                "10:38": 2,
                "11:45": 3,
                "12:36": 4,
                "14:16": 5,
                "15:10": 6
            },
            3: {
                "09:49": 1,
                "10:42": 2,
                "11:51": 3,
                "12:44": 4,
                "14:17": 5,
                "15:10": 6
            },
            4: {
                "09:54": 1,
                "10:46": 2,
                "11:54": 3,
                "12:46": 4,
                "14:18": 5
            },
            5: {
                "09:48": 1,
                "10:40": 2,
                "11:54": 3,
                "12:46": 4,
                "14:18": 5,
                "15:10": 6
            }
        };
        var formalPeriodData = {
            "10:19": 1,
            "11:06": 2,
            "12:09": 3,
            "12:56": 4,
            "14:23": 5,
            "15:10": 6
        };

        /***/
    }),
    /* 270 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (immutable) */
        __webpack_exports__["a"] = parseIcal;
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_ical_js__ = __webpack_require__(271);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_ical_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_ical_js__);
        var amountOfDays = 10;

        function parseIcal(file, onFinish) {
            var outputData = {};
            var reader = new FileReader();
            reader.onload = function(e) {
                var data = e.target.result;
                var JCAL = __WEBPACK_IMPORTED_MODULE_0_ical_js___default.a.parse(data);
                var calData = JCAL[2];
                var prevDay = -1;
                var dayCount = 0;
                var classes = [];
                for (var i = 0; i < calData.length && dayCount <= amountOfDays; i++) {
                    var currentSection = calData[i];
                    var currentData = currentSection[1];
                    var classRaw = currentData[5][3];
                    var classEndOnly = classRaw.split(':')[1];
                    var currClass = classEndOnly;
                    var len = currClass.length;
                    if (currClass[len - 3] === "Y" && currClass[len - 2] === "r") {
                        currClass = currClass.substring(0, len - 4); // Chop off Yr9 from the end
                    } else if (currClass[len - 4] === "Y" && currClass[len - 3] === "r") {
                        currClass = currClass.substring(0, len - 5); // Chop off Yr10 from the end
                    }
                    if (currClass[0] === " ") {
                        currClass = currClass.substring(1, len); // Chop whitespace from start
                    }
                    var currRoomRaw = currentData[6][3];
                    var currRoom = currRoomRaw;
                    if (currRoom.substring(0, 5) === "Room:") { // Clip room from the start.
                        currRoom = currRoom.substring(6, currRoom.length);
                    }
                    var period = currentData[4][3].split(/\r?\n/)[1]; // Clip "Period: " from the start...
                    if (period.substring(0, 7) === "Period:") {
                        period = period.substring(8, period.length);
                    }
                    var currDate = new Date(currentData[0][3]);
                    var currDay = currDate.getDay();
                    if (currDay !== prevDay) {
                        dayCount += 1;
                        if (dayCount > amountOfDays) {
                            break; // We are out of days
                        }
                    }
                    if (classes.indexOf(currClass) < 0) { // We don't have this class in our list.
                        classes.push(currClass);
                    }
                    var currWeekId = dayCount < 6 ? 0 : 1;
                    if (!outputData[currWeekId]) {
                        outputData[currWeekId] = {};
                    }
                    if (!outputData[currWeekId][currDay]) {
                        outputData[currWeekId][currDay] = {};
                    }
                    outputData[currWeekId][currDay][period] = {
                        class: classes.indexOf(currClass),
                        room: currRoom
                    };
                    prevDay = currDay;
                }
                onFinish({
                    bodyData: outputData,
                    classes: classes
                });
            };
            reader.readAsText(file);
        }

        /***/
    }),
    /* 271 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /* istanbul ignore next */
        /* jshint ignore:start */
        if (true) {
            // CommonJS, where exports may be different each time.
            ICAL = module.exports;
        } else if (typeof ICAL !== 'object') { /* istanbul ignore next */
            /** @ignore */
            this.ICAL = {};
        }
        /* jshint ignore:end */


        /**
         * The number of characters before iCalendar line folding should occur
         * @type {Number}
         * @default 75
         */
        ICAL.foldLength = 75;


        /**
         * The character(s) to be used for a newline. The default value is provided by
         * rfc5545.
         * @type {String}
         * @default "\r\n"
         */
        ICAL.newLineChar = '\r\n';


        /**
         * Helper functions used in various places within ical.js
         * @namespace
         */
        ICAL.helpers = {
            /**
             * Checks if the given type is of the number type and also NaN.
             *
             * @param {Number} number     The number to check
             * @return {Boolean}          True, if the number is strictly NaN
             */
            isStrictlyNaN: function(number) {
                return typeof(number) === 'number' && isNaN(number);
            },

            /**
             * Parses a string value that is expected to be an integer, when the valid is
             * not an integer throws a decoration error.
             *
             * @param {String} string     Raw string input
             * @return {Number}           Parsed integer
             */
            strictParseInt: function(string) {
                var result = parseInt(string, 10);

                if (ICAL.helpers.isStrictlyNaN(result)) {
                    throw new Error(
                        'Could not extract integer from "' + string + '"'
                    );
                }

                return result;
            },

            /**
             * Creates or returns a class instance of a given type with the initialization
             * data if the data is not already an instance of the given type.
             *
             * @example
             * var time = new ICAL.Time(...);
             * var result = ICAL.helpers.formatClassType(time, ICAL.Time);
             *
             * (result instanceof ICAL.Time)
             * // => true
             *
             * result = ICAL.helpers.formatClassType({}, ICAL.Time);
             * (result isntanceof ICAL.Time)
             * // => true
             *
             *
             * @param {Object} data       object initialization data
             * @param {Object} type       object type (like ICAL.Time)
             * @return {?}                An instance of the found type.
             */
            formatClassType: function formatClassType(data, type) {
                if (typeof(data) === 'undefined') {
                    return undefined;
                }

                if (data instanceof type) {
                    return data;
                }
                return new type(data);
            },

            /**
             * Identical to indexOf but will only match values when they are not preceded
             * by a backslash character.
             *
             * @param {String} buffer         String to search
             * @param {String} search         Value to look for
             * @param {Number} pos            Start position
             * @return {Number}               The position, or -1 if not found
             */
            unescapedIndexOf: function(buffer, search, pos) {
                while ((pos = buffer.indexOf(search, pos)) !== -1) {
                    if (pos > 0 && buffer[pos - 1] === '\\') {
                        pos += 1;
                    } else {
                        return pos;
                    }
                }
                return -1;
            },

            /**
             * Find the index for insertion using binary search.
             *
             * @param {Array} list            The list to search
             * @param {?} seekVal             The value to insert
             * @param {function(?,?)} cmpfunc The comparison func, that can
             *                                  compare two seekVals
             * @return {Number}               The insert position
             */
            binsearchInsert: function(list, seekVal, cmpfunc) {
                if (!list.length)
                    return 0;

                var low = 0,
                    high = list.length - 1,
                    mid, cmpval;

                while (low <= high) {
                    mid = low + Math.floor((high - low) / 2);
                    cmpval = cmpfunc(seekVal, list[mid]);

                    if (cmpval < 0)
                        high = mid - 1;
                    else if (cmpval > 0)
                        low = mid + 1;
                    else
                        break;
                }

                if (cmpval < 0)
                    return mid; // insertion is displacing, so use mid outright.
                else if (cmpval > 0)
                    return mid + 1;
                else
                    return mid;
            },

            /**
             * Convenience function for debug output
             * @private
             */
            dumpn: /* istanbul ignore next */ function() {
                if (!ICAL.debug) {
                    return;
                }

                if (typeof(console) !== 'undefined' && 'log' in console) {
                    ICAL.helpers.dumpn = function consoleDumpn(input) {
                        console.log(input);
                    };
                } else {
                    ICAL.helpers.dumpn = function geckoDumpn(input) {
                        dump(input + '\n');
                    };
                }

                ICAL.helpers.dumpn(arguments[0]);
            },

            /**
             * Clone the passed object or primitive. By default a shallow clone will be
             * executed.
             *
             * @param {*} aSrc            The thing to clone
             * @param {Boolean=} aDeep    If true, a deep clone will be performed
             * @return {*}                The copy of the thing
             */
            clone: function(aSrc, aDeep) {
                if (!aSrc || typeof aSrc != "object") {
                    return aSrc;
                } else if (aSrc instanceof Date) {
                    return new Date(aSrc.getTime());
                } else if ("clone" in aSrc) {
                    return aSrc.clone();
                } else if (Array.isArray(aSrc)) {
                    var arr = [];
                    for (var i = 0; i < aSrc.length; i++) {
                        arr.push(aDeep ? ICAL.helpers.clone(aSrc[i], true) : aSrc[i]);
                    }
                    return arr;
                } else {
                    var obj = {};
                    for (var name in aSrc) {
                        // uses prototype method to allow use of Object.create(null);
                        /* istanbul ignore else */
                        if (Object.prototype.hasOwnProperty.call(aSrc, name)) {
                            if (aDeep) {
                                obj[name] = ICAL.helpers.clone(aSrc[name], true);
                            } else {
                                obj[name] = aSrc[name];
                            }
                        }
                    }
                    return obj;
                }
            },

            /**
             * Performs iCalendar line folding. A line ending character is inserted and
             * the next line begins with a whitespace.
             *
             * @example
             * SUMMARY:This line will be fold
             *  ed right in the middle of a word.
             *
             * @param {String} aLine      The line to fold
             * @return {String}           The folded line
             */
            foldline: function foldline(aLine) {
                var result = "";
                var line = aLine || "";

                while (line.length) {
                    result += ICAL.newLineChar + " " + line.substr(0, ICAL.foldLength);
                    line = line.substr(ICAL.foldLength);
                }
                return result.substr(ICAL.newLineChar.length + 1);
            },

            /**
             * Pads the given string or number with zeros so it will have at least two
             * characters.
             *
             * @param {String|Number} data    The string or number to pad
             * @return {String}               The number padded as a string
             */
            pad2: function pad(data) {
                if (typeof(data) !== 'string') {
                    // handle fractions.
                    if (typeof(data) === 'number') {
                        data = parseInt(data);
                    }
                    data = String(data);
                }

                var len = data.length;

                switch (len) {
                    case 0:
                        return '00';
                    case 1:
                        return '0' + data;
                    default:
                        return data;
                }
            },

            /**
             * Truncates the given number, correctly handling negative numbers.
             *
             * @param {Number} number     The number to truncate
             * @return {Number}           The truncated number
             */
            trunc: function trunc(number) {
                return (number < 0 ? Math.ceil(number) : Math.floor(number));
            },

            /**
             * Poor-man's cross-browser inheritance for JavaScript. Doesn't support all
             * the features, but enough for our usage.
             *
             * @param {Function} base     The base class constructor function.
             * @param {Function} child    The child class constructor function.
             * @param {Object} extra      Extends the prototype with extra properties
             *                              and methods
             */
            inherits: function(base, child, extra) {
                function F() {}
                F.prototype = base.prototype;
                child.prototype = new F();

                if (extra) {
                    ICAL.helpers.extend(extra, child.prototype);
                }
            },

            /**
             * Poor-man's cross-browser object extension. Doesn't support all the
             * features, but enough for our usage. Note that the target's properties are
             * not overwritten with the source properties.
             *
             * @example
             * var child = ICAL.helpers.extend(parent, {
             *   "bar": 123
             * });
             *
             * @param {Object} source     The object to extend
             * @param {Object} target     The object to extend with
             * @return {Object}           Returns the target.
             */
            extend: function(source, target) {
                for (var key in source) {
                    var descr = Object.getOwnPropertyDescriptor(source, key);
                    if (descr && !Object.getOwnPropertyDescriptor(target, key)) {
                        Object.defineProperty(target, key, descr);
                    }
                }
                return target;
            }
        };
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */

        /** @namespace ICAL */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.design = (function() {
            'use strict';

            var FROM_ICAL_NEWLINE = /\\\\|\\;|\\,|\\[Nn]/g;
            var TO_ICAL_NEWLINE = /\\|;|,|\n/g;
            var FROM_VCARD_NEWLINE = /\\\\|\\,|\\[Nn]/g;
            var TO_VCARD_NEWLINE = /\\|,|\n/g;

            function createTextType(fromNewline, toNewline) {
                var result = {
                    matches: /.*/,

                    fromICAL: function(aValue, structuredEscape) {
                        return replaceNewline(aValue, fromNewline, structuredEscape);
                    },

                    toICAL: function(aValue, structuredEscape) {
                        var regEx = toNewline;
                        if (structuredEscape)
                            regEx = new RegExp(regEx.source + '|' + structuredEscape);
                        return aValue.replace(regEx, function(str) {
                            switch (str) {
                                case "\\":
                                    return "\\\\";
                                case ";":
                                    return "\\;";
                                case ",":
                                    return "\\,";
                                case "\n":
                                    return "\\n";
                                    /* istanbul ignore next */
                                default:
                                    return str;
                            }
                        });
                    }
                };
                return result;
            }

            // default types used multiple times
            var DEFAULT_TYPE_TEXT = {
                defaultType: "text"
            };
            var DEFAULT_TYPE_TEXT_MULTI = {
                defaultType: "text",
                multiValue: ","
            };
            var DEFAULT_TYPE_TEXT_STRUCTURED = {
                defaultType: "text",
                structuredValue: ";"
            };
            var DEFAULT_TYPE_INTEGER = {
                defaultType: "integer"
            };
            var DEFAULT_TYPE_DATETIME_DATE = {
                defaultType: "date-time",
                allowedTypes: ["date-time", "date"]
            };
            var DEFAULT_TYPE_DATETIME = {
                defaultType: "date-time"
            };
            var DEFAULT_TYPE_URI = {
                defaultType: "uri"
            };
            var DEFAULT_TYPE_UTCOFFSET = {
                defaultType: "utc-offset"
            };
            var DEFAULT_TYPE_RECUR = {
                defaultType: "recur"
            };
            var DEFAULT_TYPE_DATE_ANDOR_TIME = {
                defaultType: "date-and-or-time",
                allowedTypes: ["date-time", "date", "text"]
            };

            function replaceNewlineReplace(string) {
                switch (string) {
                    case "\\\\":
                        return "\\";
                    case "\\;":
                        return ";";
                    case "\\,":
                        return ",";
                    case "\\n":
                    case "\\N":
                        return "\n";
                        /* istanbul ignore next */
                    default:
                        return string;
                }
            }

            function replaceNewline(value, newline, structuredEscape) {
                // avoid regex when possible.
                if (value.indexOf('\\') === -1) {
                    return value;
                }
                if (structuredEscape)
                    newline = new RegExp(newline.source + '|\\\\' + structuredEscape);
                return value.replace(newline, replaceNewlineReplace);
            }

            var commonProperties = {
                "categories": DEFAULT_TYPE_TEXT_MULTI,
                "url": DEFAULT_TYPE_URI,
                "version": DEFAULT_TYPE_TEXT,
                "uid": DEFAULT_TYPE_TEXT
            };

            var commonValues = {
                "boolean": {
                    values: ["TRUE", "FALSE"],

                    fromICAL: function(aValue) {
                        switch (aValue) {
                            case 'TRUE':
                                return true;
                            case 'FALSE':
                                return false;
                            default:
                                //TODO: parser warning
                                return false;
                        }
                    },

                    toICAL: function(aValue) {
                        if (aValue) {
                            return 'TRUE';
                        }
                        return 'FALSE';
                    }

                },
                float: {
                    matches: /^[+-]?\d+\.\d+$/,

                    fromICAL: function(aValue) {
                        var parsed = parseFloat(aValue);
                        if (ICAL.helpers.isStrictlyNaN(parsed)) {
                            // TODO: parser warning
                            return 0.0;
                        }
                        return parsed;
                    },

                    toICAL: function(aValue) {
                        return String(aValue);
                    }
                },
                integer: {
                    fromICAL: function(aValue) {
                        var parsed = parseInt(aValue);
                        if (ICAL.helpers.isStrictlyNaN(parsed)) {
                            return 0;
                        }
                        return parsed;
                    },

                    toICAL: function(aValue) {
                        return String(aValue);
                    }
                },
                "utc-offset": {
                    toICAL: function(aValue) {
                        if (aValue.length < 7) {
                            // no seconds
                            // -0500
                            return aValue.substr(0, 3) +
                                aValue.substr(4, 2);
                        } else {
                            // seconds
                            // -050000
                            return aValue.substr(0, 3) +
                                aValue.substr(4, 2) +
                                aValue.substr(7, 2);
                        }
                    },

                    fromICAL: function(aValue) {
                        if (aValue.length < 6) {
                            // no seconds
                            // -05:00
                            return aValue.substr(0, 3) + ':' +
                                aValue.substr(3, 2);
                        } else {
                            // seconds
                            // -05:00:00
                            return aValue.substr(0, 3) + ':' +
                                aValue.substr(3, 2) + ':' +
                                aValue.substr(5, 2);
                        }
                    },

                    decorate: function(aValue) {
                        return ICAL.UtcOffset.fromString(aValue);
                    },

                    undecorate: function(aValue) {
                        return aValue.toString();
                    }
                }
            };

            var icalParams = {
                // Although the syntax is DQUOTE uri DQUOTE, I don't think we should
                // enfoce anything aside from it being a valid content line.
                //
                // At least some params require - if multi values are used - DQUOTEs
                // for each of its values - e.g. delegated-from="uri1","uri2"
                // To indicate this, I introduced the new k/v pair
                // multiValueSeparateDQuote: true
                //
                // "ALTREP": { ... },

                // CN just wants a param-value
                // "CN": { ... }

                "cutype": {
                    values: ["INDIVIDUAL", "GROUP", "RESOURCE", "ROOM", "UNKNOWN"],
                    allowXName: true,
                    allowIanaToken: true
                },

                "delegated-from": {
                    valueType: "cal-address",
                    multiValue: ",",
                    multiValueSeparateDQuote: true
                },
                "delegated-to": {
                    valueType: "cal-address",
                    multiValue: ",",
                    multiValueSeparateDQuote: true
                },
                // "DIR": { ... }, // See ALTREP
                "encoding": {
                    values: ["8BIT", "BASE64"]
                },
                // "FMTTYPE": { ... }, // See ALTREP
                "fbtype": {
                    values: ["FREE", "BUSY", "BUSY-UNAVAILABLE", "BUSY-TENTATIVE"],
                    allowXName: true,
                    allowIanaToken: true
                },
                // "LANGUAGE": { ... }, // See ALTREP
                "member": {
                    valueType: "cal-address",
                    multiValue: ",",
                    multiValueSeparateDQuote: true
                },
                "partstat": {
                    // TODO These values are actually different per-component
                    values: ["NEEDS-ACTION", "ACCEPTED", "DECLINED", "TENTATIVE",
                        "DELEGATED", "COMPLETED", "IN-PROCESS"
                    ],
                    allowXName: true,
                    allowIanaToken: true
                },
                "range": {
                    values: ["THISLANDFUTURE"]
                },
                "related": {
                    values: ["START", "END"]
                },
                "reltype": {
                    values: ["PARENT", "CHILD", "SIBLING"],
                    allowXName: true,
                    allowIanaToken: true
                },
                "role": {
                    values: ["REQ-PARTICIPANT", "CHAIR",
                        "OPT-PARTICIPANT", "NON-PARTICIPANT"
                    ],
                    allowXName: true,
                    allowIanaToken: true
                },
                "rsvp": {
                    values: ["TRUE", "FALSE"]
                },
                "sent-by": {
                    valueType: "cal-address"
                },
                "tzid": {
                    matches: /^\//
                },
                "value": {
                    // since the value here is a 'type' lowercase is used.
                    values: ["binary", "boolean", "cal-address", "date", "date-time",
                        "duration", "float", "integer", "period", "recur", "text",
                        "time", "uri", "utc-offset"
                    ],
                    allowXName: true,
                    allowIanaToken: true
                }
            };

            // When adding a value here, be sure to add it to the parameter types!
            var icalValues = ICAL.helpers.extend(commonValues, {
                text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),

                uri: {
                    // TODO
                    /* ... */
                },

                "binary": {
                    decorate: function(aString) {
                        return ICAL.Binary.fromString(aString);
                    },

                    undecorate: function(aBinary) {
                        return aBinary.toString();
                    }
                },
                "cal-address": {
                    // needs to be an uri
                },
                "date": {
                    decorate: function(aValue, aProp) {
                        return ICAL.Time.fromDateString(aValue, aProp);
                    },

                    /**
                     * undecorates a time object.
                     */
                    undecorate: function(aValue) {
                        return aValue.toString();
                    },

                    fromICAL: function(aValue) {
                        // from: 20120901
                        // to: 2012-09-01
                        return aValue.substr(0, 4) + '-' +
                            aValue.substr(4, 2) + '-' +
                            aValue.substr(6, 2);
                    },

                    toICAL: function(aValue) {
                        // from: 2012-09-01
                        // to: 20120901

                        if (aValue.length > 11) {
                            //TODO: serialize warning?
                            return aValue;
                        }

                        return aValue.substr(0, 4) +
                            aValue.substr(5, 2) +
                            aValue.substr(8, 2);
                    }
                },
                "date-time": {
                    fromICAL: function(aValue) {
                        // from: 20120901T130000
                        // to: 2012-09-01T13:00:00
                        var result = aValue.substr(0, 4) + '-' +
                            aValue.substr(4, 2) + '-' +
                            aValue.substr(6, 2) + 'T' +
                            aValue.substr(9, 2) + ':' +
                            aValue.substr(11, 2) + ':' +
                            aValue.substr(13, 2);

                        if (aValue[15] && aValue[15] === 'Z') {
                            result += 'Z';
                        }

                        return result;
                    },

                    toICAL: function(aValue) {
                        // from: 2012-09-01T13:00:00
                        // to: 20120901T130000

                        if (aValue.length < 19) {
                            // TODO: error
                            return aValue;
                        }

                        var result = aValue.substr(0, 4) +
                            aValue.substr(5, 2) +
                            // grab the (DDTHH) segment
                            aValue.substr(8, 5) +
                            // MM
                            aValue.substr(14, 2) +
                            // SS
                            aValue.substr(17, 2);

                        if (aValue[19] && aValue[19] === 'Z') {
                            result += 'Z';
                        }

                        return result;
                    },

                    decorate: function(aValue, aProp) {
                        return ICAL.Time.fromDateTimeString(aValue, aProp);
                    },

                    undecorate: function(aValue) {
                        return aValue.toString();
                    }
                },
                duration: {
                    decorate: function(aValue) {
                        return ICAL.Duration.fromString(aValue);
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    }
                },
                period: {

                    fromICAL: function(string) {
                        var parts = string.split('/');
                        parts[0] = icalValues['date-time'].fromICAL(parts[0]);

                        if (!ICAL.Duration.isValueString(parts[1])) {
                            parts[1] = icalValues['date-time'].fromICAL(parts[1]);
                        }

                        return parts;
                    },

                    toICAL: function(parts) {
                        parts[0] = icalValues['date-time'].toICAL(parts[0]);

                        if (!ICAL.Duration.isValueString(parts[1])) {
                            parts[1] = icalValues['date-time'].toICAL(parts[1]);
                        }

                        return parts.join("/");
                    },

                    decorate: function(aValue, aProp) {
                        return ICAL.Period.fromJSON(aValue, aProp);
                    },

                    undecorate: function(aValue) {
                        return aValue.toJSON();
                    }
                },
                recur: {
                    fromICAL: function(string) {
                        return ICAL.Recur._stringToData(string, true);
                    },

                    toICAL: function(data) {
                        var str = "";
                        for (var k in data) {
                            /* istanbul ignore if */
                            if (!Object.prototype.hasOwnProperty.call(data, k)) {
                                continue;
                            }
                            var val = data[k];
                            if (k == "until") {
                                if (val.length > 10) {
                                    val = icalValues['date-time'].toICAL(val);
                                } else {
                                    val = icalValues.date.toICAL(val);
                                }
                            } else if (k == "wkst") {
                                if (typeof val === 'number') {
                                    val = ICAL.Recur.numericDayToIcalDay(val);
                                }
                            } else if (Array.isArray(val)) {
                                val = val.join(",");
                            }
                            str += k.toUpperCase() + "=" + val + ";";
                        }
                        return str.substr(0, str.length - 1);
                    },

                    decorate: function decorate(aValue) {
                        return ICAL.Recur.fromData(aValue);
                    },

                    undecorate: function(aRecur) {
                        return aRecur.toJSON();
                    }
                },

                time: {
                    fromICAL: function(aValue) {
                        // from: MMHHSS(Z)?
                        // to: HH:MM:SS(Z)?
                        if (aValue.length < 6) {
                            // TODO: parser exception?
                            return aValue;
                        }

                        // HH::MM::SSZ?
                        var result = aValue.substr(0, 2) + ':' +
                            aValue.substr(2, 2) + ':' +
                            aValue.substr(4, 2);

                        if (aValue[6] === 'Z') {
                            result += 'Z';
                        }

                        return result;
                    },

                    toICAL: function(aValue) {
                        // from: HH:MM:SS(Z)?
                        // to: MMHHSS(Z)?
                        if (aValue.length < 8) {
                            //TODO: error
                            return aValue;
                        }

                        var result = aValue.substr(0, 2) +
                            aValue.substr(3, 2) +
                            aValue.substr(6, 2);

                        if (aValue[8] === 'Z') {
                            result += 'Z';
                        }

                        return result;
                    }
                }
            });

            var icalProperties = ICAL.helpers.extend(commonProperties, {

                "action": DEFAULT_TYPE_TEXT,
                "attach": {
                    defaultType: "uri"
                },
                "attendee": {
                    defaultType: "cal-address"
                },
                "calscale": DEFAULT_TYPE_TEXT,
                "class": DEFAULT_TYPE_TEXT,
                "comment": DEFAULT_TYPE_TEXT,
                "completed": DEFAULT_TYPE_DATETIME,
                "contact": DEFAULT_TYPE_TEXT,
                "created": DEFAULT_TYPE_DATETIME,
                "description": DEFAULT_TYPE_TEXT,
                "dtend": DEFAULT_TYPE_DATETIME_DATE,
                "dtstamp": DEFAULT_TYPE_DATETIME,
                "dtstart": DEFAULT_TYPE_DATETIME_DATE,
                "due": DEFAULT_TYPE_DATETIME_DATE,
                "duration": {
                    defaultType: "duration"
                },
                "exdate": {
                    defaultType: "date-time",
                    allowedTypes: ["date-time", "date"],
                    multiValue: ','
                },
                "exrule": DEFAULT_TYPE_RECUR,
                "freebusy": {
                    defaultType: "period",
                    multiValue: ","
                },
                "geo": {
                    defaultType: "float",
                    structuredValue: ";"
                },
                "last-modified": DEFAULT_TYPE_DATETIME,
                "location": DEFAULT_TYPE_TEXT,
                "method": DEFAULT_TYPE_TEXT,
                "organizer": {
                    defaultType: "cal-address"
                },
                "percent-complete": DEFAULT_TYPE_INTEGER,
                "priority": DEFAULT_TYPE_INTEGER,
                "prodid": DEFAULT_TYPE_TEXT,
                "related-to": DEFAULT_TYPE_TEXT,
                "repeat": DEFAULT_TYPE_INTEGER,
                "rdate": {
                    defaultType: "date-time",
                    allowedTypes: ["date-time", "date", "period"],
                    multiValue: ',',
                    detectType: function(string) {
                        if (string.indexOf('/') !== -1) {
                            return 'period';
                        }
                        return (string.indexOf('T') === -1) ? 'date' : 'date-time';
                    }
                },
                "recurrence-id": DEFAULT_TYPE_DATETIME_DATE,
                "resources": DEFAULT_TYPE_TEXT_MULTI,
                "request-status": DEFAULT_TYPE_TEXT_STRUCTURED,
                "rrule": DEFAULT_TYPE_RECUR,
                "sequence": DEFAULT_TYPE_INTEGER,
                "status": DEFAULT_TYPE_TEXT,
                "summary": DEFAULT_TYPE_TEXT,
                "transp": DEFAULT_TYPE_TEXT,
                "trigger": {
                    defaultType: "duration",
                    allowedTypes: ["duration", "date-time"]
                },
                "tzoffsetfrom": DEFAULT_TYPE_UTCOFFSET,
                "tzoffsetto": DEFAULT_TYPE_UTCOFFSET,
                "tzurl": DEFAULT_TYPE_URI,
                "tzid": DEFAULT_TYPE_TEXT,
                "tzname": DEFAULT_TYPE_TEXT
            });

            // When adding a value here, be sure to add it to the parameter types!
            var vcardValues = ICAL.helpers.extend(commonValues, {
                text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),
                uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),

                date: {
                    decorate: function(aValue) {
                        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, "date");
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    },
                    fromICAL: function(aValue) {
                        if (aValue.length == 8) {
                            return icalValues.date.fromICAL(aValue);
                        } else if (aValue[0] == '-' && aValue.length == 6) {
                            return aValue.substr(0, 4) + '-' + aValue.substr(4);
                        } else {
                            return aValue;
                        }
                    },
                    toICAL: function(aValue) {
                        if (aValue.length == 10) {
                            return icalValues.date.toICAL(aValue);
                        } else if (aValue[0] == '-' && aValue.length == 7) {
                            return aValue.substr(0, 4) + aValue.substr(5);
                        } else {
                            return aValue;
                        }
                    }
                },

                time: {
                    decorate: function(aValue) {
                        return ICAL.VCardTime.fromDateAndOrTimeString("T" + aValue, "time");
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    },
                    fromICAL: function(aValue) {
                        var splitzone = vcardValues.time._splitZone(aValue, true);
                        var zone = splitzone[0],
                            value = splitzone[1];

                        //console.log("SPLIT: ",splitzone);

                        if (value.length == 6) {
                            value = value.substr(0, 2) + ':' +
                                value.substr(2, 2) + ':' +
                                value.substr(4, 2);
                        } else if (value.length == 4 && value[0] != '-') {
                            value = value.substr(0, 2) + ':' + value.substr(2, 2);
                        } else if (value.length == 5) {
                            value = value.substr(0, 3) + ':' + value.substr(3, 2);
                        }

                        if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {
                            zone = zone.substr(0, 3) + ':' + zone.substr(3);
                        }

                        return value + zone;
                    },

                    toICAL: function(aValue) {
                        var splitzone = vcardValues.time._splitZone(aValue);
                        var zone = splitzone[0],
                            value = splitzone[1];

                        if (value.length == 8) {
                            value = value.substr(0, 2) +
                                value.substr(3, 2) +
                                value.substr(6, 2);
                        } else if (value.length == 5 && value[0] != '-') {
                            value = value.substr(0, 2) + value.substr(3, 2);
                        } else if (value.length == 6) {
                            value = value.substr(0, 3) + value.substr(4, 2);
                        }

                        if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {
                            zone = zone.substr(0, 3) + zone.substr(4);
                        }

                        return value + zone;
                    },

                    _splitZone: function(aValue, isFromIcal) {
                        var lastChar = aValue.length - 1;
                        var signChar = aValue.length - (isFromIcal ? 5 : 6);
                        var sign = aValue[signChar];
                        var zone, value;

                        if (aValue[lastChar] == 'Z') {
                            zone = aValue[lastChar];
                            value = aValue.substr(0, lastChar);
                        } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {
                            zone = aValue.substr(signChar);
                            value = aValue.substr(0, signChar);
                        } else {
                            zone = "";
                            value = aValue;
                        }

                        return [zone, value];
                    }
                },

                "date-time": {
                    decorate: function(aValue) {
                        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, "date-time");
                    },

                    undecorate: function(aValue) {
                        return aValue.toString();
                    },

                    fromICAL: function(aValue) {
                        return vcardValues['date-and-or-time'].fromICAL(aValue);
                    },

                    toICAL: function(aValue) {
                        return vcardValues['date-and-or-time'].toICAL(aValue);
                    }
                },

                "date-and-or-time": {
                    decorate: function(aValue) {
                        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, "date-and-or-time");
                    },

                    undecorate: function(aValue) {
                        return aValue.toString();
                    },

                    fromICAL: function(aValue) {
                        var parts = aValue.split('T');
                        return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') +
                            (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');
                    },

                    toICAL: function(aValue) {
                        var parts = aValue.split('T');
                        return vcardValues.date.toICAL(parts[0]) +
                            (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');

                    }
                },
                timestamp: icalValues['date-time'],
                "language-tag": {
                    matches: /^[a-zA-Z0-9\-]+$/ // Could go with a more strict regex here
                }
            });

            var vcardParams = {
                "type": {
                    valueType: "text",
                    multiValue: ","
                },
                "value": {
                    // since the value here is a 'type' lowercase is used.
                    values: ["text", "uri", "date", "time", "date-time", "date-and-or-time",
                        "timestamp", "boolean", "integer", "float", "utc-offset",
                        "language-tag"
                    ],
                    allowXName: true,
                    allowIanaToken: true
                }
            };

            var vcardProperties = ICAL.helpers.extend(commonProperties, {
                "adr": {
                    defaultType: "text",
                    structuredValue: ";",
                    multiValue: ","
                },
                "anniversary": DEFAULT_TYPE_DATE_ANDOR_TIME,
                "bday": DEFAULT_TYPE_DATE_ANDOR_TIME,
                "caladruri": DEFAULT_TYPE_URI,
                "caluri": DEFAULT_TYPE_URI,
                "clientpidmap": DEFAULT_TYPE_TEXT_STRUCTURED,
                "email": DEFAULT_TYPE_TEXT,
                "fburl": DEFAULT_TYPE_URI,
                "fn": DEFAULT_TYPE_TEXT,
                "gender": DEFAULT_TYPE_TEXT_STRUCTURED,
                "geo": DEFAULT_TYPE_URI,
                "impp": DEFAULT_TYPE_URI,
                "key": DEFAULT_TYPE_URI,
                "kind": DEFAULT_TYPE_TEXT,
                "lang": {
                    defaultType: "language-tag"
                },
                "logo": DEFAULT_TYPE_URI,
                "member": DEFAULT_TYPE_URI,
                "n": {
                    defaultType: "text",
                    structuredValue: ";",
                    multiValue: ","
                },
                "nickname": DEFAULT_TYPE_TEXT_MULTI,
                "note": DEFAULT_TYPE_TEXT,
                "org": {
                    defaultType: "text",
                    structuredValue: ";"
                },
                "photo": DEFAULT_TYPE_URI,
                "related": DEFAULT_TYPE_URI,
                "rev": {
                    defaultType: "timestamp"
                },
                "role": DEFAULT_TYPE_TEXT,
                "sound": DEFAULT_TYPE_URI,
                "source": DEFAULT_TYPE_URI,
                "tel": {
                    defaultType: "uri",
                    allowedTypes: ["uri", "text"]
                },
                "title": DEFAULT_TYPE_TEXT,
                "tz": {
                    defaultType: "text",
                    allowedTypes: ["text", "utc-offset", "uri"]
                },
                "xml": DEFAULT_TYPE_TEXT
            });

            var vcard3Values = ICAL.helpers.extend(commonValues, {
                binary: icalValues.binary,
                date: vcardValues.date,
                "date-time": vcardValues["date-time"],
                "phone-number": {
                    // TODO
                    /* ... */
                },
                uri: icalValues.uri,
                text: icalValues.text,
                time: icalValues.time,
                vcard: icalValues.text,
                "utc-offset": {
                    toICAL: function(aValue) {
                        return aValue.substr(0, 7);
                    },

                    fromICAL: function(aValue) {
                        return aValue.substr(0, 7);
                    },

                    decorate: function(aValue) {
                        return ICAL.UtcOffset.fromString(aValue);
                    },

                    undecorate: function(aValue) {
                        return aValue.toString();
                    }
                }
            });

            var vcard3Params = {
                "type": {
                    valueType: "text",
                    multiValue: ","
                },
                "value": {
                    // since the value here is a 'type' lowercase is used.
                    values: ["text", "uri", "date", "date-time", "phone-number", "time",
                        "boolean", "integer", "float", "utc-offset", "vcard", "binary"
                    ],
                    allowXName: true,
                    allowIanaToken: true
                }
            };

            var vcard3Properties = ICAL.helpers.extend(commonProperties, {
                fn: DEFAULT_TYPE_TEXT,
                n: {
                    defaultType: "text",
                    structuredValue: ";",
                    multiValue: ","
                },
                nickname: DEFAULT_TYPE_TEXT_MULTI,
                photo: {
                    defaultType: "binary",
                    allowedTypes: ["binary", "uri"]
                },
                bday: {
                    defaultType: "date-time",
                    allowedTypes: ["date-time", "date"],
                    detectType: function(string) {
                        return (string.indexOf('T') === -1) ? 'date' : 'date-time';
                    }
                },

                adr: {
                    defaultType: "text",
                    structuredValue: ";",
                    multiValue: ","
                },
                label: DEFAULT_TYPE_TEXT,

                tel: {
                    defaultType: "phone-number"
                },
                email: DEFAULT_TYPE_TEXT,
                mailer: DEFAULT_TYPE_TEXT,

                tz: {
                    defaultType: "utc-offset",
                    allowedTypes: ["utc-offset", "text"]
                },
                geo: {
                    defaultType: "float",
                    structuredValue: ";"
                },

                title: DEFAULT_TYPE_TEXT,
                role: DEFAULT_TYPE_TEXT,
                logo: {
                    defaultType: "binary",
                    allowedTypes: ["binary", "uri"]
                },
                agent: {
                    defaultType: "vcard",
                    allowedTypes: ["vcard", "text", "uri"]
                },
                org: DEFAULT_TYPE_TEXT_STRUCTURED,

                note: DEFAULT_TYPE_TEXT_MULTI,
                prodid: DEFAULT_TYPE_TEXT,
                rev: {
                    defaultType: "date-time",
                    allowedTypes: ["date-time", "date"],
                    detectType: function(string) {
                        return (string.indexOf('T') === -1) ? 'date' : 'date-time';
                    }
                },
                "sort-string": DEFAULT_TYPE_TEXT,
                sound: {
                    defaultType: "binary",
                    allowedTypes: ["binary", "uri"]
                },

                class: DEFAULT_TYPE_TEXT,
                key: {
                    defaultType: "binary",
                    allowedTypes: ["binary", "text"]
                }
            });

            /**
             * iCalendar design set
             * @type {ICAL.design.designSet}
             */
            var icalSet = {
                value: icalValues,
                param: icalParams,
                property: icalProperties
            };

            /**
             * vCard 4.0 design set
             * @type {ICAL.design.designSet}
             */
            var vcardSet = {
                value: vcardValues,
                param: vcardParams,
                property: vcardProperties
            };

            /**
             * vCard 3.0 design set
             * @type {ICAL.design.designSet}
             */
            var vcard3Set = {
                value: vcard3Values,
                param: vcard3Params,
                property: vcard3Properties
            };

            /**
             * The design data, used by the parser to determine types for properties and
             * other metadata needed to produce correct jCard/jCal data.
             *
             * @alias ICAL.design
             * @namespace
             */
            var design = {
                /**
                 * A designSet describes value, parameter and property data. It is used by
                 * ther parser and stringifier in components and properties to determine they
                 * should be represented.
                 *
                 * @typedef {Object} designSet
                 * @memberOf ICAL.design
                 * @property {Object} value       Definitions for value types, keys are type names
                 * @property {Object} param       Definitions for params, keys are param names
                 * @property {Object} property    Defintions for properties, keys are property names
                 */


                /**
                 * The default set for new properties and components if none is specified.
                 * @type {ICAL.design.designSet}
                 */
                defaultSet: icalSet,

                /**
                 * The default type for unknown properties
                 * @type {String}
                 */
                defaultType: 'unknown',

                /**
                 * Holds the design set for known top-level components
                 *
                 * @type {Object}
                 * @property {ICAL.design.designSet} vcard       vCard VCARD
                 * @property {ICAL.design.designSet} vevent      iCalendar VEVENT
                 * @property {ICAL.design.designSet} vtodo       iCalendar VTODO
                 * @property {ICAL.design.designSet} vjournal    iCalendar VJOURNAL
                 * @property {ICAL.design.designSet} valarm      iCalendar VALARM
                 * @property {ICAL.design.designSet} vtimezone   iCalendar VTIMEZONE
                 * @property {ICAL.design.designSet} daylight    iCalendar DAYLIGHT
                 * @property {ICAL.design.designSet} standard    iCalendar STANDARD
                 *
                 * @example
                 * var propertyName = 'fn';
                 * var componentDesign = ICAL.design.components.vcard;
                 * var propertyDetails = componentDesign.property[propertyName];
                 * if (propertyDetails.defaultType == 'text') {
                 *   // Yep, sure is...
                 * }
                 */
                components: {
                    vcard: vcardSet,
                    vcard3: vcard3Set,
                    vevent: icalSet,
                    vtodo: icalSet,
                    vjournal: icalSet,
                    valarm: icalSet,
                    vtimezone: icalSet,
                    daylight: icalSet,
                    standard: icalSet
                },


                /**
                 * The design set for iCalendar (rfc5545/rfc7265) components.
                 * @type {ICAL.design.designSet}
                 */
                icalendar: icalSet,

                /**
                 * The design set for vCard (rfc6350/rfc7095) components.
                 * @type {ICAL.design.designSet}
                 */
                vcard: vcardSet,

                /**
                 * The design set for vCard (rfc2425/rfc2426/rfc7095) components.
                 * @type {ICAL.design.designSet}
                 */
                vcard3: vcard3Set,

                /**
                 * Gets the design set for the given component name.
                 *
                 * @param {String} componentName        The name of the component
                 * @return {ICAL.design.designSet}      The design set for the component
                 */
                getDesignSet: function(componentName) {
                    var isInDesign = componentName && componentName in design.components;
                    return isInDesign ? design.components[componentName] : design.defaultSet;
                }
            };

            return design;
        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * Contains various functions to convert jCal and jCard data back into
         * iCalendar and vCard.
         * @namespace
         */
        ICAL.stringify = (function() {
            'use strict';

            var LINE_ENDING = '\r\n';
            var DEFAULT_VALUE_TYPE = 'unknown';

            var design = ICAL.design;
            var helpers = ICAL.helpers;

            /**
             * Convert a full jCal/jCard array into a iCalendar/vCard string.
             *
             * @function ICAL.stringify
             * @variation function
             * @param {Array} jCal    The jCal/jCard document
             * @return {String}       The stringified iCalendar/vCard document
             */
            function stringify(jCal) {
                if (typeof jCal[0] == "string") {
                    // This is a single component
                    jCal = [jCal];
                }

                var i = 0;
                var len = jCal.length;
                var result = '';

                for (; i < len; i++) {
                    result += stringify.component(jCal[i]) + LINE_ENDING;
                }

                return result;
            }

            /**
             * Converts an jCal component array into a ICAL string.
             * Recursive will resolve sub-components.
             *
             * Exact component/property order is not saved all
             * properties will come before subcomponents.
             *
             * @function ICAL.stringify.component
             * @param {Array} component
             *        jCal/jCard fragment of a component
             * @param {ICAL.design.designSet} designSet
             *        The design data to use for this component
             * @return {String}       The iCalendar/vCard string
             */
            stringify.component = function(component, designSet) {
                var name = component[0].toUpperCase();
                var result = 'BEGIN:' + name + LINE_ENDING;

                var props = component[1];
                var propIdx = 0;
                var propLen = props.length;

                var designSetName = component[0];
                // rfc6350 requires that in vCard 4.0 the first component is the VERSION
                // component with as value 4.0, note that 3.0 does not have this requirement.
                if (designSetName === 'vcard' && component[1].length > 0 &&
                    !(component[1][0][0] === "version" && component[1][0][3] === "4.0")) {
                    designSetName = "vcard3";
                }
                designSet = designSet || design.getDesignSet(designSetName);

                for (; propIdx < propLen; propIdx++) {
                    result += stringify.property(props[propIdx], designSet) + LINE_ENDING;
                }

                var comps = component[2];
                var compIdx = 0;
                var compLen = comps.length;

                for (; compIdx < compLen; compIdx++) {
                    result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;
                }

                result += 'END:' + name;
                return result;
            };

            /**
             * Converts a single jCal/jCard property to a iCalendar/vCard string.
             *
             * @function ICAL.stringify.property
             * @param {Array} property
             *        jCal/jCard property array
             * @param {ICAL.design.designSet} designSet
             *        The design data to use for this property
             * @param {Boolean} noFold
             *        If true, the line is not folded
             * @return {String}       The iCalendar/vCard string
             */
            stringify.property = function(property, designSet, noFold) {
                var name = property[0].toUpperCase();
                var jsName = property[0];
                var params = property[1];

                var line = name;

                var paramName;
                for (paramName in params) {
                    var value = params[paramName];

                    /* istanbul ignore else */
                    if (params.hasOwnProperty(paramName)) {
                        var multiValue = (paramName in designSet.param) && designSet.param[paramName].multiValue;
                        if (multiValue && Array.isArray(value)) {
                            if (designSet.param[paramName].multiValueSeparateDQuote) {
                                multiValue = '"' + multiValue + '"';
                            }
                            value = value.map(stringify._rfc6868Unescape);
                            value = stringify.multiValue(value, multiValue, "unknown", null, designSet);
                        } else {
                            value = stringify._rfc6868Unescape(value);
                        }


                        line += ';' + paramName.toUpperCase();
                        line += '=' + stringify.propertyValue(value);
                    }
                }

                if (property.length === 3) {
                    // If there are no values, we must assume a blank value
                    return line + ':';
                }

                var valueType = property[2];

                if (!designSet) {
                    designSet = design.defaultSet;
                }

                var propDetails;
                var multiValue = false;
                var structuredValue = false;
                var isDefault = false;

                if (jsName in designSet.property) {
                    propDetails = designSet.property[jsName];

                    if ('multiValue' in propDetails) {
                        multiValue = propDetails.multiValue;
                    }

                    if (('structuredValue' in propDetails) && Array.isArray(property[3])) {
                        structuredValue = propDetails.structuredValue;
                    }

                    if ('defaultType' in propDetails) {
                        if (valueType === propDetails.defaultType) {
                            isDefault = true;
                        }
                    } else {
                        if (valueType === DEFAULT_VALUE_TYPE) {
                            isDefault = true;
                        }
                    }
                } else {
                    if (valueType === DEFAULT_VALUE_TYPE) {
                        isDefault = true;
                    }
                }

                // push the VALUE property if type is not the default
                // for the current property.
                if (!isDefault) {
                    // value will never contain ;/:/, so we don't escape it here.
                    line += ';VALUE=' + valueType.toUpperCase();
                }

                line += ':';

                if (multiValue && structuredValue) {
                    line += stringify.multiValue(
                        property[3], structuredValue, valueType, multiValue, designSet, structuredValue
                    );
                } else if (multiValue) {
                    line += stringify.multiValue(
                        property.slice(3), multiValue, valueType, null, designSet, false
                    );
                } else if (structuredValue) {
                    line += stringify.multiValue(
                        property[3], structuredValue, valueType, null, designSet, structuredValue
                    );
                } else {
                    line += stringify.value(property[3], valueType, designSet, false);
                }

                return noFold ? line : ICAL.helpers.foldline(line);
            };

            /**
             * Handles escaping of property values that may contain:
             *
             *    COLON (:), SEMICOLON (;), or COMMA (,)
             *
             * If any of the above are present the result is wrapped
             * in double quotes.
             *
             * @function ICAL.stringify.propertyValue
             * @param {String} value      Raw property value
             * @return {String}           Given or escaped value when needed
             */
            stringify.propertyValue = function(value) {

                if ((helpers.unescapedIndexOf(value, ',') === -1) &&
                    (helpers.unescapedIndexOf(value, ':') === -1) &&
                    (helpers.unescapedIndexOf(value, ';') === -1)) {

                    return value;
                }

                return '"' + value + '"';
            };

            /**
             * Converts an array of ical values into a single
             * string based on a type and a delimiter value (like ",").
             *
             * @function ICAL.stringify.multiValue
             * @param {Array} values      List of values to convert
             * @param {String} delim      Used to join the values (",", ";", ":")
             * @param {String} type       Lowecase ical value type
             *        (like boolean, date-time, etc..)
             * @param {?String} innerMulti If set, each value will again be processed
             *        Used for structured values
             * @param {ICAL.design.designSet} designSet
             *        The design data to use for this property
             *
             * @return {String}           iCalendar/vCard string for value
             */
            stringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {
                var result = '';
                var len = values.length;
                var i = 0;

                for (; i < len; i++) {
                    if (innerMulti && Array.isArray(values[i])) {
                        result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);
                    } else {
                        result += stringify.value(values[i], type, designSet, structuredValue);
                    }

                    if (i !== (len - 1)) {
                        result += delim;
                    }
                }

                return result;
            };

            /**
             * Processes a single ical value runs the associated "toICAL" method from the
             * design value type if available to convert the value.
             *
             * @function ICAL.stringify.value
             * @param {String|Number} value       A formatted value
             * @param {String} type               Lowercase iCalendar/vCard value type
             *  (like boolean, date-time, etc..)
             * @return {String}                   iCalendar/vCard value for single value
             */
            stringify.value = function(value, type, designSet, structuredValue) {
                if (type in designSet.value && 'toICAL' in designSet.value[type]) {
                    return designSet.value[type].toICAL(value, structuredValue);
                }
                return value;
            };

            /**
             * Internal helper for rfc6868. Exposing this on ICAL.stringify so that
             * hackers can disable the rfc6868 parsing if the really need to.
             *
             * @param {String} val        The value to unescape
             * @return {String}           The escaped value
             */
            stringify._rfc6868Unescape = function(val) {
                return val.replace(/[\n^"]/g, function(x) {
                    return RFC6868_REPLACE_MAP[x];
                });
            };
            var RFC6868_REPLACE_MAP = {
                '"': "^'",
                "\n": "^n",
                "^": "^^"
            };

            return stringify;
        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * Contains various functions to parse iCalendar and vCard data.
         * @namespace
         */
        ICAL.parse = (function() {
            'use strict';

            var CHAR = /[^ \t]/;
            var MULTIVALUE_DELIMITER = ',';
            var VALUE_DELIMITER = ':';
            var PARAM_DELIMITER = ';';
            var PARAM_NAME_DELIMITER = '=';
            var DEFAULT_VALUE_TYPE = 'unknown';
            var DEFAULT_PARAM_TYPE = 'text';

            var design = ICAL.design;
            var helpers = ICAL.helpers;

            /**
             * An error that occurred during parsing.
             *
             * @param {String} message        The error message
             * @memberof ICAL.parse
             * @extends {Error}
             * @class
             */
            function ParserError(message) {
                this.message = message;
                this.name = 'ParserError';

                try {
                    throw new Error();
                } catch (e) {
                    if (e.stack) {
                        var split = e.stack.split('\n');
                        split.shift();
                        this.stack = split.join('\n');
                    }
                }
            }

            ParserError.prototype = Error.prototype;

            /**
             * Parses iCalendar or vCard data into a raw jCal object. Consult
             * documentation on the {@tutorial layers|layers of parsing} for more
             * details.
             *
             * @function ICAL.parse
             * @variation function
             * @todo Fix the API to be more clear on the return type
             * @param {String} input      The string data to parse
             * @return {Object|Object[]}  A single jCal object, or an array thereof
             */
            function parser(input) {
                var state = {};
                var root = state.component = [];

                state.stack = [root];

                parser._eachLine(input, function(err, line) {
                    parser._handleContentLine(line, state);
                });


                // when there are still items on the stack
                // throw a fatal error, a component was not closed
                // correctly in that case.
                if (state.stack.length > 1) {
                    throw new ParserError(
                        'invalid ical body. component began but did not end'
                    );
                }

                state = null;

                return (root.length == 1 ? root[0] : root);
            }

            /**
             * Parse an iCalendar property value into the jCal for a single property
             *
             * @function ICAL.parse.property
             * @param {String} str
             *   The iCalendar property string to parse
             * @param {ICAL.design.designSet=} designSet
             *   The design data to use for this property
             * @return {Object}
             *   The jCal Object containing the property
             */
            parser.property = function(str, designSet) {
                var state = {
                    component: [
                        [],
                        []
                    ],
                    designSet: designSet || design.defaultSet
                };
                parser._handleContentLine(str, state);
                return state.component[1][0];
            };

            /**
             * Convenience method to parse a component. You can use ICAL.parse() directly
             * instead.
             *
             * @function ICAL.parse.component
             * @see ICAL.parse(function)
             * @param {String} str    The iCalendar component string to parse
             * @return {Object}       The jCal Object containing the component
             */
            parser.component = function(str) {
                return parser(str);
            };

            // classes & constants
            parser.ParserError = ParserError;

            /**
             * The state for parsing content lines from an iCalendar/vCard string.
             *
             * @private
             * @memberof ICAL.parse
             * @typedef {Object} parserState
             * @property {ICAL.design.designSet} designSet    The design set to use for parsing
             * @property {ICAL.Component[]} stack             The stack of components being processed
             * @property {ICAL.Component} component           The currently active component
             */


            /**
             * Handles a single line of iCalendar/vCard, updating the state.
             *
             * @private
             * @function ICAL.parse._handleContentLine
             * @param {String} line               The content line to process
             * @param {ICAL.parse.parserState}    The current state of the line parsing
             */
            parser._handleContentLine = function(line, state) {
                // break up the parts of the line
                var valuePos = line.indexOf(VALUE_DELIMITER);
                var paramPos = line.indexOf(PARAM_DELIMITER);

                var lastParamIndex;
                var lastValuePos;

                // name of property or begin/end
                var name;
                var value;
                // params is only overridden if paramPos !== -1.
                // we can't do params = params || {} later on
                // because it sacrifices ops.
                var params = {};

                /**
                 * Different property cases
                 *
                 *
                 * 1. RRULE:FREQ=foo
                 *    // FREQ= is not a param but the value
                 *
                 * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;
                 *    // ROLE= is a param because : has not happened yet
                 */
                // when the parameter delimiter is after the
                // value delimiter then its not a parameter.

                if ((paramPos !== -1 && valuePos !== -1)) {
                    // when the parameter delimiter is after the
                    // value delimiter then its not a parameter.
                    if (paramPos > valuePos) {
                        paramPos = -1;
                    }
                }

                var parsedParams;
                if (paramPos !== -1) {
                    name = line.substring(0, paramPos).toLowerCase();
                    parsedParams = parser._parseParameters(line.substring(paramPos), 0, state.designSet);
                    if (parsedParams[2] == -1) {
                        throw new ParserError("Invalid parameters in '" + line + "'");
                    }
                    params = parsedParams[0];
                    lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos;
                    if ((lastValuePos =
                            line.substring(lastParamIndex).indexOf(VALUE_DELIMITER)) !== -1) {
                        value = line.substring(lastParamIndex + lastValuePos + 1);
                    } else {
                        throw new ParserError("Missing parameter value in '" + line + "'");
                    }
                } else if (valuePos !== -1) {
                    // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)
                    name = line.substring(0, valuePos).toLowerCase();
                    value = line.substring(valuePos + 1);

                    if (name === 'begin') {
                        var newComponent = [value.toLowerCase(), [],
                            []
                        ];
                        if (state.stack.length === 1) {
                            state.component.push(newComponent);
                        } else {
                            state.component[2].push(newComponent);
                        }
                        state.stack.push(state.component);
                        state.component = newComponent;
                        if (!state.designSet) {
                            state.designSet = design.getDesignSet(state.component[0]);
                        }
                        return;
                    } else if (name === 'end') {
                        state.component = state.stack.pop();
                        return;
                    }
                    // If its not begin/end, then this is a property with an empty value,
                    // which should be considered valid.
                } else {
                    /**
                     * Invalid line.
                     * The rational to throw an error is we will
                     * never be certain that the rest of the file
                     * is sane and its unlikely that we can serialize
                     * the result correctly either.
                     */
                    throw new ParserError(
                        'invalid line (no token ";" or ":") "' + line + '"'
                    );
                }

                var valueType;
                var multiValue = false;
                var structuredValue = false;
                var propertyDetails;

                if (name in state.designSet.property) {
                    propertyDetails = state.designSet.property[name];

                    if ('multiValue' in propertyDetails) {
                        multiValue = propertyDetails.multiValue;
                    }

                    if ('structuredValue' in propertyDetails) {
                        structuredValue = propertyDetails.structuredValue;
                    }

                    if (value && 'detectType' in propertyDetails) {
                        valueType = propertyDetails.detectType(value);
                    }
                }

                // attempt to determine value
                if (!valueType) {
                    if (!('value' in params)) {
                        if (propertyDetails) {
                            valueType = propertyDetails.defaultType;
                        } else {
                            valueType = DEFAULT_VALUE_TYPE;
                        }
                    } else {
                        // possible to avoid this?
                        valueType = params.value.toLowerCase();
                    }
                }

                delete params.value;

                /**
                 * Note on `var result` juggling:
                 *
                 * I observed that building the array in pieces has adverse
                 * effects on performance, so where possible we inline the creation.
                 * Its a little ugly but resulted in ~2000 additional ops/sec.
                 */

                var result;
                if (multiValue && structuredValue) {
                    value = parser._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);
                    result = [name, params, valueType, value];
                } else if (multiValue) {
                    result = [name, params, valueType];
                    parser._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);
                } else if (structuredValue) {
                    value = parser._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);
                    result = [name, params, valueType, value];
                } else {
                    value = parser._parseValue(value, valueType, state.designSet, false);
                    result = [name, params, valueType, value];
                }
                // rfc6350 requires that in vCard 4.0 the first component is the VERSION
                // component with as value 4.0, note that 3.0 does not have this requirement.
                if (state.component[0] === 'vcard' && state.component[1].length === 0 &&
                    !(name === 'version' && value === '4.0')) {
                    state.designSet = design.getDesignSet("vcard3");
                }
                state.component[1].push(result);
            };

            /**
             * Parse a value from the raw value into the jCard/jCal value.
             *
             * @private
             * @function ICAL.parse._parseValue
             * @param {String} value          Original value
             * @param {String} type           Type of value
             * @param {Object} designSet      The design data to use for this value
             * @return {Object} varies on type
             */
            parser._parseValue = function(value, type, designSet, structuredValue) {
                if (type in designSet.value && 'fromICAL' in designSet.value[type]) {
                    return designSet.value[type].fromICAL(value, structuredValue);
                }
                return value;
            };

            /**
             * Parse parameters from a string to object.
             *
             * @function ICAL.parse._parseParameters
             * @private
             * @param {String} line           A single unfolded line
             * @param {Numeric} start         Position to start looking for properties
             * @param {Object} designSet      The design data to use for this property
             * @return {Object} key/value pairs
             */
            parser._parseParameters = function(line, start, designSet) {
                var lastParam = start;
                var pos = 0;
                var delim = PARAM_NAME_DELIMITER;
                var result = {};
                var name, lcname;
                var value, valuePos = -1;
                var type, multiValue, mvdelim;

                // find the next '=' sign
                // use lastParam and pos to find name
                // check if " is used if so get value from "->"
                // then increment pos to find next ;

                while ((pos !== false) &&
                    (pos = helpers.unescapedIndexOf(line, delim, pos + 1)) !== -1) {

                    name = line.substr(lastParam + 1, pos - lastParam - 1);
                    if (name.length == 0) {
                        throw new ParserError("Empty parameter name in '" + line + "'");
                    }
                    lcname = name.toLowerCase();

                    if (lcname in designSet.param && designSet.param[lcname].valueType) {
                        type = designSet.param[lcname].valueType;
                    } else {
                        type = DEFAULT_PARAM_TYPE;
                    }

                    if (lcname in designSet.param) {
                        multiValue = designSet.param[lcname].multiValue;
                        if (designSet.param[lcname].multiValueSeparateDQuote) {
                            mvdelim = parser._rfc6868Escape('"' + multiValue + '"');
                        }
                    }

                    var nextChar = line[pos + 1];
                    if (nextChar === '"') {
                        valuePos = pos + 2;
                        pos = helpers.unescapedIndexOf(line, '"', valuePos);
                        if (multiValue && pos != -1) {
                            var extendedValue = true;
                            while (extendedValue) {
                                if (line[pos + 1] == multiValue && line[pos + 2] == '"') {
                                    pos = helpers.unescapedIndexOf(line, '"', pos + 3);
                                } else {
                                    extendedValue = false;
                                }
                            }
                        }
                        if (pos === -1) {
                            throw new ParserError(
                                'invalid line (no matching double quote) "' + line + '"'
                            );
                        }
                        value = line.substr(valuePos, pos - valuePos);
                        lastParam = helpers.unescapedIndexOf(line, PARAM_DELIMITER, pos);
                        if (lastParam === -1) {
                            pos = false;
                        }
                    } else {
                        valuePos = pos + 1;

                        // move to next ";"
                        var nextPos = helpers.unescapedIndexOf(line, PARAM_DELIMITER, valuePos);
                        var propValuePos = helpers.unescapedIndexOf(line, VALUE_DELIMITER, valuePos);
                        if (propValuePos !== -1 && nextPos > propValuePos) {
                            // this is a delimiter in the property value, let's stop here
                            nextPos = propValuePos;
                            pos = false;
                        } else if (nextPos === -1) {
                            // no ";"
                            if (propValuePos === -1) {
                                nextPos = line.length;
                            } else {
                                nextPos = propValuePos;
                            }
                            pos = false;
                        } else {
                            lastParam = nextPos;
                            pos = nextPos;
                        }

                        value = line.substr(valuePos, nextPos - valuePos);
                    }

                    value = parser._rfc6868Escape(value);
                    if (multiValue) {
                        var delimiter = mvdelim || multiValue;
                        result[lcname] = parser._parseMultiValue(value, delimiter, type, [], null, designSet);
                    } else {
                        result[lcname] = parser._parseValue(value, type, designSet);
                    }
                }
                return [result, value, valuePos];
            };

            /**
             * Internal helper for rfc6868. Exposing this on ICAL.parse so that
             * hackers can disable the rfc6868 parsing if the really need to.
             *
             * @function ICAL.parse._rfc6868Escape
             * @param {String} val        The value to escape
             * @return {String}           The escaped value
             */
            parser._rfc6868Escape = function(val) {
                return val.replace(/\^['n^]/g, function(x) {
                    return RFC6868_REPLACE_MAP[x];
                });
            };
            var RFC6868_REPLACE_MAP = {
                "^'": '"',
                "^n": "\n",
                "^^": "^"
            };

            /**
             * Parse a multi value string. This function is used either for parsing
             * actual multi-value property's values, or for handling parameter values. It
             * can be used for both multi-value properties and structured value properties.
             *
             * @private
             * @function ICAL.parse._parseMultiValue
             * @param {String} buffer     The buffer containing the full value
             * @param {String} delim      The multi-value delimiter
             * @param {String} type       The value type to be parsed
             * @param {Array.<?>} result        The array to append results to, varies on value type
             * @param {String} innerMulti The inner delimiter to split each value with
             * @param {ICAL.design.designSet} designSet   The design data for this value
             * @return {?|Array.<?>}            Either an array of results, or the first result
             */
            parser._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {
                var pos = 0;
                var lastPos = 0;
                var value;
                if (delim.length === 0) {
                    return buffer;
                }

                // split each piece
                while ((pos = helpers.unescapedIndexOf(buffer, delim, lastPos)) !== -1) {
                    value = buffer.substr(lastPos, pos - lastPos);
                    if (innerMulti) {
                        value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);
                    } else {
                        value = parser._parseValue(value, type, designSet, structuredValue);
                    }
                    result.push(value);
                    lastPos = pos + delim.length;
                }

                // on the last piece take the rest of string
                value = buffer.substr(lastPos);
                if (innerMulti) {
                    value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);
                } else {
                    value = parser._parseValue(value, type, designSet, structuredValue);
                }
                result.push(value);

                return result.length == 1 ? result[0] : result;
            };

            /**
             * Process a complete buffer of iCalendar/vCard data line by line, correctly
             * unfolding content. Each line will be processed with the given callback
             *
             * @private
             * @function ICAL.parse._eachLine
             * @param {String} buffer                         The buffer to process
             * @param {function(?String, String)} callback    The callback for each line
             */
            parser._eachLine = function(buffer, callback) {
                var len = buffer.length;
                var lastPos = buffer.search(CHAR);
                var pos = lastPos;
                var line;
                var firstChar;

                var newlineOffset;

                do {
                    pos = buffer.indexOf('\n', lastPos) + 1;

                    if (pos > 1 && buffer[pos - 2] === '\r') {
                        newlineOffset = 2;
                    } else {
                        newlineOffset = 1;
                    }

                    if (pos === 0) {
                        pos = len;
                        newlineOffset = 0;
                    }

                    firstChar = buffer[lastPos];

                    if (firstChar === ' ' || firstChar === '\t') {
                        // add to line
                        line += buffer.substr(
                            lastPos + 1,
                            pos - lastPos - (newlineOffset + 1)
                        );
                    } else {
                        if (line)
                            callback(null, line);
                        // push line
                        line = buffer.substr(
                            lastPos,
                            pos - lastPos - newlineOffset
                        );
                    }

                    lastPos = pos;
                } while (pos !== len);

                // extra ending line
                line = line.trim();

                if (line.length)
                    callback(null, line);
            };

            return parser;

        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.Component = (function() {
            'use strict';

            var PROPERTY_INDEX = 1;
            var COMPONENT_INDEX = 2;
            var NAME_INDEX = 0;

            /**
             * @classdesc
             * Wraps a jCal component, adding convenience methods to add, remove and
             * update subcomponents and properties.
             *
             * @class
             * @alias ICAL.Component
             * @param {Array|String} jCal         Raw jCal component data OR name of new
             *                                      component
             * @param {ICAL.Component} parent     Parent component to associate
             */
            function Component(jCal, parent) {
                if (typeof(jCal) === 'string') {
                    // jCal spec (name, properties, components)
                    jCal = [jCal, [],
                        []
                    ];
                }

                // mostly for legacy reasons.
                this.jCal = jCal;

                this.parent = parent || null;
            }

            Component.prototype = {
                /**
                 * Hydrated properties are inserted into the _properties array at the same
                 * position as in the jCal array, so its possible the array contains
                 * undefined values for unhydrdated properties. To avoid iterating the
                 * array when checking if all properties have been hydrated, we save the
                 * count here.
                 *
                 * @type {Number}
                 * @private
                 */
                _hydratedPropertyCount: 0,

                /**
                 * The same count as for _hydratedPropertyCount, but for subcomponents
                 *
                 * @type {Number}
                 * @private
                 */
                _hydratedComponentCount: 0,

                /**
                 * The name of this component
                 * @readonly
                 */
                get name() {
                    return this.jCal[NAME_INDEX];
                },

                /**
                 * The design set for this component, e.g. icalendar vs vcard
                 *
                 * @type {ICAL.design.designSet}
                 * @private
                 */
                get _designSet() {
                    var parentDesign = this.parent && this.parent._designSet;
                    return parentDesign || ICAL.design.getDesignSet(this.name);
                },

                _hydrateComponent: function(index) {
                    if (!this._components) {
                        this._components = [];
                        this._hydratedComponentCount = 0;
                    }

                    if (this._components[index]) {
                        return this._components[index];
                    }

                    var comp = new Component(
                        this.jCal[COMPONENT_INDEX][index],
                        this
                    );

                    this._hydratedComponentCount++;
                    return (this._components[index] = comp);
                },

                _hydrateProperty: function(index) {
                    if (!this._properties) {
                        this._properties = [];
                        this._hydratedPropertyCount = 0;
                    }

                    if (this._properties[index]) {
                        return this._properties[index];
                    }

                    var prop = new ICAL.Property(
                        this.jCal[PROPERTY_INDEX][index],
                        this
                    );

                    this._hydratedPropertyCount++;
                    return (this._properties[index] = prop);
                },

                /**
                 * Finds first sub component, optionally filtered by name.
                 *
                 * @param {String=} name        Optional name to filter by
                 * @return {?ICAL.Component}     The found subcomponent
                 */
                getFirstSubcomponent: function(name) {
                    if (name) {
                        var i = 0;
                        var comps = this.jCal[COMPONENT_INDEX];
                        var len = comps.length;

                        for (; i < len; i++) {
                            if (comps[i][NAME_INDEX] === name) {
                                var result = this._hydrateComponent(i);
                                return result;
                            }
                        }
                    } else {
                        if (this.jCal[COMPONENT_INDEX].length) {
                            return this._hydrateComponent(0);
                        }
                    }

                    // ensure we return a value (strict mode)
                    return null;
                },

                /**
                 * Finds all sub components, optionally filtering by name.
                 *
                 * @param {String=} name            Optional name to filter by
                 * @return {ICAL.Component[]}       The found sub components
                 */
                getAllSubcomponents: function(name) {
                    var jCalLen = this.jCal[COMPONENT_INDEX].length;
                    var i = 0;

                    if (name) {
                        var comps = this.jCal[COMPONENT_INDEX];
                        var result = [];

                        for (; i < jCalLen; i++) {
                            if (name === comps[i][NAME_INDEX]) {
                                result.push(
                                    this._hydrateComponent(i)
                                );
                            }
                        }
                        return result;
                    } else {
                        if (!this._components ||
                            (this._hydratedComponentCount !== jCalLen)) {
                            for (; i < jCalLen; i++) {
                                this._hydrateComponent(i);
                            }
                        }

                        return this._components || [];
                    }
                },

                /**
                 * Returns true when a named property exists.
                 *
                 * @param {String} name     The property name
                 * @return {Boolean}        True, when property is found
                 */
                hasProperty: function(name) {
                    var props = this.jCal[PROPERTY_INDEX];
                    var len = props.length;

                    var i = 0;
                    for (; i < len; i++) {
                        // 0 is property name
                        if (props[i][NAME_INDEX] === name) {
                            return true;
                        }
                    }

                    return false;
                },

                /**
                 * Finds the first property, optionally with the given name.
                 *
                 * @param {String=} name        Lowercase property name
                 * @return {?ICAL.Property}     The found property
                 */
                getFirstProperty: function(name) {
                    if (name) {
                        var i = 0;
                        var props = this.jCal[PROPERTY_INDEX];
                        var len = props.length;

                        for (; i < len; i++) {
                            if (props[i][NAME_INDEX] === name) {
                                var result = this._hydrateProperty(i);
                                return result;
                            }
                        }
                    } else {
                        if (this.jCal[PROPERTY_INDEX].length) {
                            return this._hydrateProperty(0);
                        }
                    }

                    return null;
                },

                /**
                 * Returns first property's value, if available.
                 *
                 * @param {String=} name    Lowercase property name
                 * @return {?String}        The found property value.
                 */
                getFirstPropertyValue: function(name) {
                    var prop = this.getFirstProperty(name);
                    if (prop) {
                        return prop.getFirstValue();
                    }

                    return null;
                },

                /**
                 * Get all properties in the component, optionally filtered by name.
                 *
                 * @param {String=} name        Lowercase property name
                 * @return {ICAL.Property[]}    List of properties
                 */
                getAllProperties: function(name) {
                    var jCalLen = this.jCal[PROPERTY_INDEX].length;
                    var i = 0;

                    if (name) {
                        var props = this.jCal[PROPERTY_INDEX];
                        var result = [];

                        for (; i < jCalLen; i++) {
                            if (name === props[i][NAME_INDEX]) {
                                result.push(
                                    this._hydrateProperty(i)
                                );
                            }
                        }
                        return result;
                    } else {
                        if (!this._properties ||
                            (this._hydratedPropertyCount !== jCalLen)) {
                            for (; i < jCalLen; i++) {
                                this._hydrateProperty(i);
                            }
                        }

                        return this._properties || [];
                    }
                },

                _removeObjectByIndex: function(jCalIndex, cache, index) {
                    cache = cache || [];
                    // remove cached version
                    if (cache[index]) {
                        var obj = cache[index];
                        if ("parent" in obj) {
                            obj.parent = null;
                        }
                    }

                    cache.splice(index, 1);

                    // remove it from the jCal
                    this.jCal[jCalIndex].splice(index, 1);
                },

                _removeObject: function(jCalIndex, cache, nameOrObject) {
                    var i = 0;
                    var objects = this.jCal[jCalIndex];
                    var len = objects.length;
                    var cached = this[cache];

                    if (typeof(nameOrObject) === 'string') {
                        for (; i < len; i++) {
                            if (objects[i][NAME_INDEX] === nameOrObject) {
                                this._removeObjectByIndex(jCalIndex, cached, i);
                                return true;
                            }
                        }
                    } else if (cached) {
                        for (; i < len; i++) {
                            if (cached[i] && cached[i] === nameOrObject) {
                                this._removeObjectByIndex(jCalIndex, cached, i);
                                return true;
                            }
                        }
                    }

                    return false;
                },

                _removeAllObjects: function(jCalIndex, cache, name) {
                    var cached = this[cache];

                    // Unfortunately we have to run through all children to reset their
                    // parent property.
                    var objects = this.jCal[jCalIndex];
                    var i = objects.length - 1;

                    // descending search required because splice
                    // is used and will effect the indices.
                    for (; i >= 0; i--) {
                        if (!name || objects[i][NAME_INDEX] === name) {
                            this._removeObjectByIndex(jCalIndex, cached, i);
                        }
                    }
                },

                /**
                 * Adds a single sub component.
                 *
                 * @param {ICAL.Component} component        The component to add
                 * @return {ICAL.Component}                 The passed in component
                 */
                addSubcomponent: function(component) {
                    if (!this._components) {
                        this._components = [];
                        this._hydratedComponentCount = 0;
                    }

                    if (component.parent) {
                        component.parent.removeSubcomponent(component);
                    }

                    var idx = this.jCal[COMPONENT_INDEX].push(component.jCal);
                    this._components[idx - 1] = component;
                    this._hydratedComponentCount++;
                    component.parent = this;
                    return component;
                },

                /**
                 * Removes a single component by name or the instance of a specific
                 * component.
                 *
                 * @param {ICAL.Component|String} nameOrComp    Name of component, or component
                 * @return {Boolean}                            True when comp is removed
                 */
                removeSubcomponent: function(nameOrComp) {
                    var removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);
                    if (removed) {
                        this._hydratedComponentCount--;
                    }
                    return removed;
                },

                /**
                 * Removes all components or (if given) all components by a particular
                 * name.
                 *
                 * @param {String=} name            Lowercase component name
                 */
                removeAllSubcomponents: function(name) {
                    var removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);
                    this._hydratedComponentCount = 0;
                    return removed;
                },

                /**
                 * Adds an {@link ICAL.Property} to the component.
                 *
                 * @param {ICAL.Property} property      The property to add
                 * @return {ICAL.Property}              The passed in property
                 */
                addProperty: function(property) {
                    if (!(property instanceof ICAL.Property)) {
                        throw new TypeError('must instance of ICAL.Property');
                    }

                    if (!this._properties) {
                        this._properties = [];
                        this._hydratedPropertyCount = 0;
                    }

                    if (property.parent) {
                        property.parent.removeProperty(property);
                    }

                    var idx = this.jCal[PROPERTY_INDEX].push(property.jCal);
                    this._properties[idx - 1] = property;
                    this._hydratedPropertyCount++;
                    property.parent = this;
                    return property;
                },

                /**
                 * Helper method to add a property with a value to the component.
                 *
                 * @param {String}               name         Property name to add
                 * @param {String|Number|Object} value        Property value
                 * @return {ICAL.Property}                    The created property
                 */
                addPropertyWithValue: function(name, value) {
                    var prop = new ICAL.Property(name);
                    prop.setValue(value);

                    this.addProperty(prop);

                    return prop;
                },

                /**
                 * Helper method that will update or create a property of the given name
                 * and sets its value. If multiple properties with the given name exist,
                 * only the first is updated.
                 *
                 * @param {String}               name         Property name to update
                 * @param {String|Number|Object} value        Property value
                 * @return {ICAL.Property}                    The created property
                 */
                updatePropertyWithValue: function(name, value) {
                    var prop = this.getFirstProperty(name);

                    if (prop) {
                        prop.setValue(value);
                    } else {
                        prop = this.addPropertyWithValue(name, value);
                    }

                    return prop;
                },

                /**
                 * Removes a single property by name or the instance of the specific
                 * property.
                 *
                 * @param {String|ICAL.Property} nameOrProp     Property name or instance to remove
                 * @return {Boolean}                            True, when deleted
                 */
                removeProperty: function(nameOrProp) {
                    var removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);
                    if (removed) {
                        this._hydratedPropertyCount--;
                    }
                    return removed;
                },

                /**
                 * Removes all properties associated with this component, optionally
                 * filtered by name.
                 *
                 * @param {String=} name        Lowercase property name
                 * @return {Boolean}            True, when deleted
                 */
                removeAllProperties: function(name) {
                    var removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);
                    this._hydratedPropertyCount = 0;
                    return removed;
                },

                /**
                 * Returns the Object representation of this component. The returned object
                 * is a live jCal object and should be cloned if modified.
                 * @return {Object}
                 */
                toJSON: function() {
                    return this.jCal;
                },

                /**
                 * The string representation of this component.
                 * @return {String}
                 */
                toString: function() {
                    return ICAL.stringify.component(
                        this.jCal, this._designSet
                    );
                }
            };

            /**
             * Create an {@link ICAL.Component} by parsing the passed iCalendar string.
             *
             * @param {String} str        The iCalendar string to parse
             */
            Component.fromString = function(str) {
                return new Component(ICAL.parse.component(str));
            };

            return Component;
        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.Property = (function() {
            'use strict';

            var NAME_INDEX = 0;
            var PROP_INDEX = 1;
            var TYPE_INDEX = 2;
            var VALUE_INDEX = 3;

            var design = ICAL.design;

            /**
             * @classdesc
             * Provides a layer on top of the raw jCal object for manipulating a single
             * property, with its parameters and value.
             *
             * @description
             * Its important to note that mutations done in the wrapper
             * directly mutate the jCal object used to initialize.
             *
             * Can also be used to create new properties by passing
             * the name of the property (as a String).
             *
             * @class
             * @alias ICAL.Property
             * @param {Array|String} jCal         Raw jCal representation OR
             *  the new name of the property
             *
             * @param {ICAL.Component=} parent    Parent component
             */
            function Property(jCal, parent) {
                this._parent = parent || null;

                if (typeof(jCal) === 'string') {
                    // We are creating the property by name and need to detect the type
                    this.jCal = [jCal, {}, design.defaultType];
                    this.jCal[TYPE_INDEX] = this.getDefaultType();
                } else {
                    this.jCal = jCal;
                }
                this._updateType();
            }

            Property.prototype = {

                /**
                 * The value type for this property
                 * @readonly
                 * @type {String}
                 */
                get type() {
                    return this.jCal[TYPE_INDEX];
                },

                /**
                 * The name of this property, in lowercase.
                 * @readonly
                 * @type {String}
                 */
                get name() {
                    return this.jCal[NAME_INDEX];
                },

                /**
                 * The parent component for this property.
                 * @type {ICAL.Component}
                 */
                get parent() {
                    return this._parent;
                },

                set parent(p) {
                    // Before setting the parent, check if the design set has changed. If it
                    // has, we later need to update the type if it was unknown before.
                    var designSetChanged = !this._parent || (p && p._designSet != this._parent._designSet);

                    this._parent = p;

                    if (this.type == design.defaultType && designSetChanged) {
                        this.jCal[TYPE_INDEX] = this.getDefaultType();
                        this._updateType();
                    }

                    return p;
                },

                /**
                 * The design set for this property, e.g. icalendar vs vcard
                 *
                 * @type {ICAL.design.designSet}
                 * @private
                 */
                get _designSet() {
                    return this.parent ? this.parent._designSet : design.defaultSet;
                },

                /**
                 * Updates the type metadata from the current jCal type and design set.
                 *
                 * @private
                 */
                _updateType: function() {
                    var designSet = this._designSet;

                    if (this.type in designSet.value) {
                        var designType = designSet.value[this.type];

                        if ('decorate' in designSet.value[this.type]) {
                            this.isDecorated = true;
                        } else {
                            this.isDecorated = false;
                        }

                        if (this.name in designSet.property) {
                            this.isMultiValue = ('multiValue' in designSet.property[this.name]);
                            this.isStructuredValue = ('structuredValue' in designSet.property[this.name]);
                        }
                    }
                },

                /**
                 * Hydrate a single value. The act of hydrating means turning the raw jCal
                 * value into a potentially wrapped object, for example {@link ICAL.Time}.
                 *
                 * @private
                 * @param {Number} index        The index of the value to hydrate
                 * @return {Object}             The decorated value.
                 */
                _hydrateValue: function(index) {
                    if (this._values && this._values[index]) {
                        return this._values[index];
                    }

                    // for the case where there is no value.
                    if (this.jCal.length <= (VALUE_INDEX + index)) {
                        return null;
                    }

                    if (this.isDecorated) {
                        if (!this._values) {
                            this._values = [];
                        }
                        return (this._values[index] = this._decorate(
                            this.jCal[VALUE_INDEX + index]
                        ));
                    } else {
                        return this.jCal[VALUE_INDEX + index];
                    }
                },

                /**
                 * Decorate a single value, returning its wrapped object. This is used by
                 * the hydrate function to actually wrap the value.
                 *
                 * @private
                 * @param {?} value         The value to decorate
                 * @return {Object}         The decorated value
                 */
                _decorate: function(value) {
                    return this._designSet.value[this.type].decorate(value, this);
                },

                /**
                 * Undecorate a single value, returning its raw jCal data.
                 *
                 * @private
                 * @param {Object} value         The value to undecorate
                 * @return {?}                   The undecorated value
                 */
                _undecorate: function(value) {
                    return this._designSet.value[this.type].undecorate(value, this);
                },

                /**
                 * Sets the value at the given index while also hydrating it. The passed
                 * value can either be a decorated or undecorated value.
                 *
                 * @private
                 * @param {?} value             The value to set
                 * @param {Number} index        The index to set it at
                 */
                _setDecoratedValue: function(value, index) {
                    if (!this._values) {
                        this._values = [];
                    }

                    if (typeof(value) === 'object' && 'icaltype' in value) {
                        // decorated value
                        this.jCal[VALUE_INDEX + index] = this._undecorate(value);
                        this._values[index] = value;
                    } else {
                        // undecorated value
                        this.jCal[VALUE_INDEX + index] = value;
                        this._values[index] = this._decorate(value);
                    }
                },

                /**
                 * Gets a parameter on the property.
                 *
                 * @param {String}        name   Property name (lowercase)
                 * @return {Array|String}        Property value
                 */
                getParameter: function(name) {
                    if (name in this.jCal[PROP_INDEX]) {
                        return this.jCal[PROP_INDEX][name];
                    } else {
                        return undefined;
                    }
                },

                /**
                 * Sets a parameter on the property.
                 *
                 * @param {String}       name     The parameter name
                 * @param {Array|String} value    The parameter value
                 */
                setParameter: function(name, value) {
                    var lcname = name.toLowerCase();
                    if (typeof value === "string" &&
                        lcname in this._designSet.param &&
                        'multiValue' in this._designSet.param[lcname]) {
                        value = [value];
                    }
                    this.jCal[PROP_INDEX][name] = value;
                },

                /**
                 * Removes a parameter
                 *
                 * @param {String} name     The parameter name
                 */
                removeParameter: function(name) {
                    delete this.jCal[PROP_INDEX][name];
                },

                /**
                 * Get the default type based on this property's name.
                 *
                 * @return {String}     The default type for this property
                 */
                getDefaultType: function() {
                    var name = this.jCal[NAME_INDEX];
                    var designSet = this._designSet;

                    if (name in designSet.property) {
                        var details = designSet.property[name];
                        if ('defaultType' in details) {
                            return details.defaultType;
                        }
                    }
                    return design.defaultType;
                },

                /**
                 * Sets type of property and clears out any existing values of the current
                 * type.
                 *
                 * @param {String} type     New iCAL type (see design.*.values)
                 */
                resetType: function(type) {
                    this.removeAllValues();
                    this.jCal[TYPE_INDEX] = type;
                    this._updateType();
                },

                /**
                 * Finds the first property value.
                 *
                 * @return {String}         First property value
                 */
                getFirstValue: function() {
                    return this._hydrateValue(0);
                },

                /**
                 * Gets all values on the property.
                 *
                 * NOTE: this creates an array during each call.
                 *
                 * @return {Array}          List of values
                 */
                getValues: function() {
                    var len = this.jCal.length - VALUE_INDEX;

                    if (len < 1) {
                        // its possible for a property to have no value.
                        return [];
                    }

                    var i = 0;
                    var result = [];

                    for (; i < len; i++) {
                        result[i] = this._hydrateValue(i);
                    }

                    return result;
                },

                /**
                 * Removes all values from this property
                 */
                removeAllValues: function() {
                    if (this._values) {
                        this._values.length = 0;
                    }
                    this.jCal.length = 3;
                },

                /**
                 * Sets the values of the property.  Will overwrite the existing values.
                 * This can only be used for multi-value properties.
                 *
                 * @param {Array} values    An array of values
                 */
                setValues: function(values) {
                    if (!this.isMultiValue) {
                        throw new Error(
                            this.name + ': does not not support mulitValue.\n' +
                            'override isMultiValue'
                        );
                    }

                    var len = values.length;
                    var i = 0;
                    this.removeAllValues();

                    if (len > 0 &&
                        typeof(values[0]) === 'object' &&
                        'icaltype' in values[0]) {
                        this.resetType(values[0].icaltype);
                    }

                    if (this.isDecorated) {
                        for (; i < len; i++) {
                            this._setDecoratedValue(values[i], i);
                        }
                    } else {
                        for (; i < len; i++) {
                            this.jCal[VALUE_INDEX + i] = values[i];
                        }
                    }
                },

                /**
                 * Sets the current value of the property. If this is a multi-value
                 * property, all other values will be removed.
                 *
                 * @param {String|Object} value     New property value.
                 */
                setValue: function(value) {
                    this.removeAllValues();
                    if (typeof(value) === 'object' && 'icaltype' in value) {
                        this.resetType(value.icaltype);
                    }

                    if (this.isDecorated) {
                        this._setDecoratedValue(value, 0);
                    } else {
                        this.jCal[VALUE_INDEX] = value;
                    }
                },

                /**
                 * Returns the Object representation of this component. The returned object
                 * is a live jCal object and should be cloned if modified.
                 * @return {Object}
                 */
                toJSON: function() {
                    return this.jCal;
                },

                /**
                 * The string representation of this component.
                 * @return {String}
                 */
                toICALString: function() {
                    return ICAL.stringify.property(
                        this.jCal, this._designSet, true
                    );
                }
            };

            /**
             * Create an {@link ICAL.Property} by parsing the passed iCalendar string.
             *
             * @param {String} str                        The iCalendar string to parse
             * @param {ICAL.design.designSet=} designSet  The design data to use for this property
             * @return {ICAL.Property}                    The created iCalendar property
             */
            Property.fromString = function(str, designSet) {
                return new Property(ICAL.parse.property(str, designSet));
            };

            return Property;
        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.UtcOffset = (function() {

            /**
             * @classdesc
             * This class represents the "duration" value type, with various calculation
             * and manipulation methods.
             *
             * @class
             * @alias ICAL.UtcOffset
             * @param {Object} aData          An object with members of the utc offset
             * @param {Number=} aData.hours   The hours for the utc offset
             * @param {Number=} aData.minutes The minutes in the utc offset
             * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1
             */
            function UtcOffset(aData) {
                this.fromData(aData);
            }

            UtcOffset.prototype = {

                /**
                 * The hours in the utc-offset
                 * @type {Number}
                 */
                hours: 0,

                /**
                 * The minutes in the utc-offset
                 * @type {Number}
                 */
                minutes: 0,

                /**
                 * The sign of the utc offset, 1 for positive offset, -1 for negative
                 * offsets.
                 * @type {Number}
                 */
                factor: 1,

                /**
                 * The type name, to be used in the jCal object.
                 * @constant
                 * @type {String}
                 * @default "utc-offset"
                 */
                icaltype: "utc-offset",

                /**
                 * Returns a clone of the utc offset object.
                 *
                 * @return {ICAL.UtcOffset}     The cloned object
                 */
                clone: function() {
                    return ICAL.UtcOffset.fromSeconds(this.toSeconds());
                },

                /**
                 * Sets up the current instance using members from the passed data object.
                 *
                 * @param {Object} aData          An object with members of the utc offset
                 * @param {Number=} aData.hours   The hours for the utc offset
                 * @param {Number=} aData.minutes The minutes in the utc offset
                 * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1
                 */
                fromData: function(aData) {
                    if (aData) {
                        for (var key in aData) {
                            /* istanbul ignore else */
                            if (aData.hasOwnProperty(key)) {
                                this[key] = aData[key];
                            }
                        }
                    }
                    this._normalize();
                },

                /**
                 * Sets up the current instance from the given seconds value. The seconds
                 * value is truncated to the minute. Offsets are wrapped when the world
                 * ends, the hour after UTC+14:00 is UTC-12:00.
                 *
                 * @param {Number} aSeconds         The seconds to convert into an offset
                 */
                fromSeconds: function(aSeconds) {
                    var secs = Math.abs(aSeconds);

                    this.factor = aSeconds < 0 ? -1 : 1;
                    this.hours = ICAL.helpers.trunc(secs / 3600);

                    secs -= (this.hours * 3600);
                    this.minutes = ICAL.helpers.trunc(secs / 60);
                    return this;
                },

                /**
                 * Convert the current offset to a value in seconds
                 *
                 * @return {Number}                 The offset in seconds
                 */
                toSeconds: function() {
                    return this.factor * (60 * this.minutes + 3600 * this.hours);
                },

                /**
                 * Compare this utc offset with another one.
                 *
                 * @param {ICAL.UtcOffset} other        The other offset to compare with
                 * @return {Number}                     -1, 0 or 1 for less/equal/greater
                 */
                compare: function icaltime_compare(other) {
                    var a = this.toSeconds();
                    var b = other.toSeconds();
                    return (a > b) - (b > a);
                },

                _normalize: function() {
                    // Range: 97200 seconds (with 1 hour inbetween)
                    var secs = this.toSeconds();
                    var factor = this.factor;
                    while (secs < -43200) { // = UTC-12:00
                        secs += 97200;
                    }
                    while (secs > 50400) { // = UTC+14:00
                        secs -= 97200;
                    }

                    this.fromSeconds(secs);

                    // Avoid changing the factor when on zero seconds
                    if (secs == 0) {
                        this.factor = factor;
                    }
                },

                /**
                 * The iCalendar string representation of this utc-offset.
                 * @return {String}
                 */
                toICALString: function() {
                    return ICAL.design.icalendar.value['utc-offset'].toICAL(this.toString());
                },

                /**
                 * The string representation of this utc-offset.
                 * @return {String}
                 */
                toString: function toString() {
                    return (this.factor == 1 ? "+" : "-") +
                        ICAL.helpers.pad2(this.hours) + ':' +
                        ICAL.helpers.pad2(this.minutes);
                }
            };

            /**
             * Creates a new {@link ICAL.UtcOffset} instance from the passed string.
             *
             * @param {String} aString    The string to parse
             * @return {ICAL.Duration}    The created utc-offset instance
             */
            UtcOffset.fromString = function(aString) {
                // -05:00
                var options = {};
                //TODO: support seconds per rfc5545 ?
                options.factor = (aString[0] === '+') ? 1 : -1;
                options.hours = ICAL.helpers.strictParseInt(aString.substr(1, 2));
                options.minutes = ICAL.helpers.strictParseInt(aString.substr(4, 2));

                return new ICAL.UtcOffset(options);
            };

            /**
             * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds
             * value.
             *
             * @param {Number} aSeconds       The number of seconds to convert
             */
            UtcOffset.fromSeconds = function(aSeconds) {
                var instance = new UtcOffset();
                instance.fromSeconds(aSeconds);
                return instance;
            };

            return UtcOffset;
        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.Binary = (function() {

            /**
             * @classdesc
             * Represents the BINARY value type, which contains extra methods for
             * encoding and decoding.
             *
             * @class
             * @alias ICAL.Binary
             * @param {String} aValue     The binary data for this value
             */
            function Binary(aValue) {
                this.value = aValue;
            }

            Binary.prototype = {
                /**
                 * The type name, to be used in the jCal object.
                 * @default "binary"
                 * @constant
                 */
                icaltype: "binary",

                /**
                 * Base64 decode the current value
                 *
                 * @return {String}         The base64-decoded value
                 */
                decodeValue: function decodeValue() {
                    return this._b64_decode(this.value);
                },

                /**
                 * Encodes the passed parameter with base64 and sets the internal
                 * value to the result.
                 *
                 * @param {String} aValue      The raw binary value to encode
                 */
                setEncodedValue: function setEncodedValue(aValue) {
                    this.value = this._b64_encode(aValue);
                },

                _b64_encode: function base64_encode(data) {
                    // http://kevin.vanzonneveld.net
                    // +   original by: Tyler Akins (http://rumkin.com)
                    // +   improved by: Bayron Guevara
                    // +   improved by: Thunder.m
                    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
                    // +   bugfixed by: Pellentesque Malesuada
                    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
                    // +   improved by: Rafał Kukawski (http://kukawski.pl)
                    // *     example 1: base64_encode('Kevin van Zonneveld');
                    // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='
                    // mozilla has this native
                    // - but breaks in 2.0.0.12!
                    //if (typeof this.window['atob'] == 'function') {
                    //    return atob(data);
                    //}
                    var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" +
                        "abcdefghijklmnopqrstuvwxyz0123456789+/=";
                    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,
                        ac = 0,
                        enc = "",
                        tmp_arr = [];

                    if (!data) {
                        return data;
                    }

                    do { // pack three octets into four hexets
                        o1 = data.charCodeAt(i++);
                        o2 = data.charCodeAt(i++);
                        o3 = data.charCodeAt(i++);

                        bits = o1 << 16 | o2 << 8 | o3;

                        h1 = bits >> 18 & 0x3f;
                        h2 = bits >> 12 & 0x3f;
                        h3 = bits >> 6 & 0x3f;
                        h4 = bits & 0x3f;

                        // use hexets to index into b64, and append result to encoded string
                        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
                    } while (i < data.length);

                    enc = tmp_arr.join('');

                    var r = data.length % 3;

                    return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);

                },

                _b64_decode: function base64_decode(data) {
                    // http://kevin.vanzonneveld.net
                    // +   original by: Tyler Akins (http://rumkin.com)
                    // +   improved by: Thunder.m
                    // +      input by: Aman Gupta
                    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
                    // +   bugfixed by: Onno Marsman
                    // +   bugfixed by: Pellentesque Malesuada
                    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
                    // +      input by: Brett Zamir (http://brett-zamir.me)
                    // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
                    // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');
                    // *     returns 1: 'Kevin van Zonneveld'
                    // mozilla has this native
                    // - but breaks in 2.0.0.12!
                    //if (typeof this.window['btoa'] == 'function') {
                    //    return btoa(data);
                    //}
                    var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" +
                        "abcdefghijklmnopqrstuvwxyz0123456789+/=";
                    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,
                        ac = 0,
                        dec = "",
                        tmp_arr = [];

                    if (!data) {
                        return data;
                    }

                    data += '';

                    do { // unpack four hexets into three octets using index points in b64
                        h1 = b64.indexOf(data.charAt(i++));
                        h2 = b64.indexOf(data.charAt(i++));
                        h3 = b64.indexOf(data.charAt(i++));
                        h4 = b64.indexOf(data.charAt(i++));

                        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;

                        o1 = bits >> 16 & 0xff;
                        o2 = bits >> 8 & 0xff;
                        o3 = bits & 0xff;

                        if (h3 == 64) {
                            tmp_arr[ac++] = String.fromCharCode(o1);
                        } else if (h4 == 64) {
                            tmp_arr[ac++] = String.fromCharCode(o1, o2);
                        } else {
                            tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);
                        }
                    } while (i < data.length);

                    dec = tmp_arr.join('');

                    return dec;
                },

                /**
                 * The string representation of this value
                 * @return {String}
                 */
                toString: function() {
                    return this.value;
                }
            };

            /**
             * Creates a binary value from the given string.
             *
             * @param {String} aString        The binary value string
             * @return {ICAL.Binary}          The binary value instance
             */
            Binary.fromString = function(aString) {
                return new Binary(aString);
            };

            return Binary;
        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */



        (function() {
            /**
             * @classdesc
             * This class represents the "period" value type, with various calculation
             * and manipulation methods.
             *
             * @description
             * The passed data object cannot contain both and end date and a duration.
             *
             * @class
             * @param {Object} aData                  An object with members of the period
             * @param {ICAL.Time=} aData.start        The start of the period
             * @param {ICAL.Time=} aData.end          The end of the period
             * @param {ICAL.Duration=} aData.duration The duration of the period
             */
            ICAL.Period = function icalperiod(aData) {
                this.wrappedJSObject = this;

                if (aData && 'start' in aData) {
                    if (aData.start && !(aData.start instanceof ICAL.Time)) {
                        throw new TypeError('.start must be an instance of ICAL.Time');
                    }
                    this.start = aData.start;
                }

                if (aData && aData.end && aData.duration) {
                    throw new Error('cannot accept both end and duration');
                }

                if (aData && 'end' in aData) {
                    if (aData.end && !(aData.end instanceof ICAL.Time)) {
                        throw new TypeError('.end must be an instance of ICAL.Time');
                    }
                    this.end = aData.end;
                }

                if (aData && 'duration' in aData) {
                    if (aData.duration && !(aData.duration instanceof ICAL.Duration)) {
                        throw new TypeError('.duration must be an instance of ICAL.Duration');
                    }
                    this.duration = aData.duration;
                }
            };

            ICAL.Period.prototype = {

                /**
                 * The start of the period
                 * @type {ICAL.Time}
                 */
                start: null,

                /**
                 * The end of the period
                 * @type {ICAL.Time}
                 */
                end: null,

                /**
                 * The duration of the period
                 * @type {ICAL.Duration}
                 */
                duration: null,

                /**
                 * The class identifier.
                 * @constant
                 * @type {String}
                 * @default "icalperiod"
                 */
                icalclass: "icalperiod",

                /**
                 * The type name, to be used in the jCal object.
                 * @constant
                 * @type {String}
                 * @default "period"
                 */
                icaltype: "period",

                /**
                 * Returns a clone of the duration object.
                 *
                 * @return {ICAL.Period}      The cloned object
                 */
                clone: function() {
                    return ICAL.Period.fromData({
                        start: this.start ? this.start.clone() : null,
                        end: this.end ? this.end.clone() : null,
                        duration: this.duration ? this.duration.clone() : null
                    });
                },

                /**
                 * Calculates the duration of the period, either directly or by subtracting
                 * start from end date.
                 *
                 * @return {ICAL.Duration}      The calculated duration
                 */
                getDuration: function duration() {
                    if (this.duration) {
                        return this.duration;
                    } else {
                        return this.end.subtractDate(this.start);
                    }
                },

                /**
                 * Calculates the end date of the period, either directly or by adding
                 * duration to start date.
                 *
                 * @return {ICAL.Time}          The calculated end date
                 */
                getEnd: function() {
                    if (this.end) {
                        return this.end;
                    } else {
                        var end = this.start.clone();
                        end.addDuration(this.duration);
                        return end;
                    }
                },

                /**
                 * The string representation of this period.
                 * @return {String}
                 */
                toString: function toString() {
                    return this.start + "/" + (this.end || this.duration);
                },

                /**
                 * The jCal representation of this period type.
                 * @return {Object}
                 */
                toJSON: function() {
                    return [this.start.toString(), (this.end || this.duration).toString()];
                },

                /**
                 * The iCalendar string representation of this period.
                 * @return {String}
                 */
                toICALString: function() {
                    return this.start.toICALString() + "/" +
                        (this.end || this.duration).toICALString();
                }
            };

            /**
             * Creates a new {@link ICAL.Period} instance from the passed string.
             *
             * @param {String} str            The string to parse
             * @param {ICAL.Property} prop    The property this period will be on
             * @return {ICAL.Period}          The created period instance
             */
            ICAL.Period.fromString = function fromString(str, prop) {
                var parts = str.split('/');

                if (parts.length !== 2) {
                    throw new Error(
                        'Invalid string value: "' + str + '" must contain a "/" char.'
                    );
                }

                var options = {
                    start: ICAL.Time.fromDateTimeString(parts[0], prop)
                };

                var end = parts[1];

                if (ICAL.Duration.isValueString(end)) {
                    options.duration = ICAL.Duration.fromString(end);
                } else {
                    options.end = ICAL.Time.fromDateTimeString(end, prop);
                }

                return new ICAL.Period(options);
            };

            /**
             * Creates a new {@link ICAL.Period} instance from the given data object.
             * The passed data object cannot contain both and end date and a duration.
             *
             * @param {Object} aData                  An object with members of the period
             * @param {ICAL.Time=} aData.start        The start of the period
             * @param {ICAL.Time=} aData.end          The end of the period
             * @param {ICAL.Duration=} aData.duration The duration of the period
             * @return {ICAL.Period}                  The period instance
             */
            ICAL.Period.fromData = function fromData(aData) {
                return new ICAL.Period(aData);
            };

            /**
             * Returns a new period instance from the given jCal data array. The first
             * member is always the start date string, the second member is either a
             * duration or end date string.
             *
             * @param {Array<String,String>} aData    The jCal data array
             * @param {ICAL.Property} aProp           The property this jCal data is on
             * @return {ICAL.Period}                  The period instance
             */
            ICAL.Period.fromJSON = function(aData, aProp) {
                if (ICAL.Duration.isValueString(aData[1])) {
                    return ICAL.Period.fromData({
                        start: ICAL.Time.fromDateTimeString(aData[0], aProp),
                        duration: ICAL.Duration.fromString(aData[1])
                    });
                } else {
                    return ICAL.Period.fromData({
                        start: ICAL.Time.fromDateTimeString(aData[0], aProp),
                        end: ICAL.Time.fromDateTimeString(aData[1], aProp)
                    });
                }
            };
        })();
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */



        (function() {
            var DURATION_LETTERS = /([PDWHMTS]{1,1})/;

            /**
             * @classdesc
             * This class represents the "duration" value type, with various calculation
             * and manipulation methods.
             *
             * @class
             * @alias ICAL.Duration
             * @param {Object} data               An object with members of the duration
             * @param {Number} data.weeks         Duration in weeks
             * @param {Number} data.days          Duration in days
             * @param {Number} data.hours         Duration in hours
             * @param {Number} data.minutes       Duration in minutes
             * @param {Number} data.seconds       Duration in seconds
             * @param {Boolean} data.isNegative   If true, the duration is negative
             */
            ICAL.Duration = function icalduration(data) {
                this.wrappedJSObject = this;
                this.fromData(data);
            };

            ICAL.Duration.prototype = {
                /**
                 * The weeks in this duration
                 * @type {Number}
                 * @default 0
                 */
                weeks: 0,

                /**
                 * The days in this duration
                 * @type {Number}
                 * @default 0
                 */
                days: 0,

                /**
                 * The days in this duration
                 * @type {Number}
                 * @default 0
                 */
                hours: 0,

                /**
                 * The minutes in this duration
                 * @type {Number}
                 * @default 0
                 */
                minutes: 0,

                /**
                 * The seconds in this duration
                 * @type {Number}
                 * @default 0
                 */
                seconds: 0,

                /**
                 * The seconds in this duration
                 * @type {Boolean}
                 * @default false
                 */
                isNegative: false,

                /**
                 * The class identifier.
                 * @constant
                 * @type {String}
                 * @default "icalduration"
                 */
                icalclass: "icalduration",

                /**
                 * The type name, to be used in the jCal object.
                 * @constant
                 * @type {String}
                 * @default "duration"
                 */
                icaltype: "duration",

                /**
                 * Returns a clone of the duration object.
                 *
                 * @return {ICAL.Duration}      The cloned object
                 */
                clone: function clone() {
                    return ICAL.Duration.fromData(this);
                },

                /**
                 * The duration value expressed as a number of seconds.
                 *
                 * @return {Number}             The duration value in seconds
                 */
                toSeconds: function toSeconds() {
                    var seconds = this.seconds + 60 * this.minutes + 3600 * this.hours +
                        86400 * this.days + 7 * 86400 * this.weeks;
                    return (this.isNegative ? -seconds : seconds);
                },

                /**
                 * Reads the passed seconds value into this duration object. Afterwards,
                 * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up
                 * accordingly.
                 *
                 * @param {Number} aSeconds     The duration value in seconds
                 * @return {ICAL.Duration}      Returns this instance
                 */
                fromSeconds: function fromSeconds(aSeconds) {
                    var secs = Math.abs(aSeconds);

                    this.isNegative = (aSeconds < 0);
                    this.days = ICAL.helpers.trunc(secs / 86400);

                    // If we have a flat number of weeks, use them.
                    if (this.days % 7 == 0) {
                        this.weeks = this.days / 7;
                        this.days = 0;
                    } else {
                        this.weeks = 0;
                    }

                    secs -= (this.days + 7 * this.weeks) * 86400;

                    this.hours = ICAL.helpers.trunc(secs / 3600);
                    secs -= this.hours * 3600;

                    this.minutes = ICAL.helpers.trunc(secs / 60);
                    secs -= this.minutes * 60;

                    this.seconds = secs;
                    return this;
                },

                /**
                 * Sets up the current instance using members from the passed data object.
                 *
                 * @param {Object} aData               An object with members of the duration
                 * @param {Number} aData.weeks         Duration in weeks
                 * @param {Number} aData.days          Duration in days
                 * @param {Number} aData.hours         Duration in hours
                 * @param {Number} aData.minutes       Duration in minutes
                 * @param {Number} aData.seconds       Duration in seconds
                 * @param {Boolean} aData.isNegative   If true, the duration is negative
                 */
                fromData: function fromData(aData) {
                    var propsToCopy = ["weeks", "days", "hours",
                        "minutes", "seconds", "isNegative"
                    ];
                    for (var key in propsToCopy) {
                        /* istanbul ignore if */
                        if (!propsToCopy.hasOwnProperty(key)) {
                            continue;
                        }
                        var prop = propsToCopy[key];
                        if (aData && prop in aData) {
                            this[prop] = aData[prop];
                        } else {
                            this[prop] = 0;
                        }
                    }
                },

                /**
                 * Resets the duration instance to the default values, i.e. PT0S
                 */
                reset: function reset() {
                    this.isNegative = false;
                    this.weeks = 0;
                    this.days = 0;
                    this.hours = 0;
                    this.minutes = 0;
                    this.seconds = 0;
                },

                /**
                 * Compares the duration instance with another one.
                 *
                 * @param {ICAL.Duration} aOther        The instance to compare with
                 * @return {Number}                     -1, 0 or 1 for less/equal/greater
                 */
                compare: function compare(aOther) {
                    var thisSeconds = this.toSeconds();
                    var otherSeconds = aOther.toSeconds();
                    return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);
                },

                /**
                 * Normalizes the duration instance. For example, a duration with a value
                 * of 61 seconds will be normalized to 1 minute and 1 second.
                 */
                normalize: function normalize() {
                    this.fromSeconds(this.toSeconds());
                },

                /**
                 * The string representation of this duration.
                 * @return {String}
                 */
                toString: function toString() {
                    if (this.toSeconds() == 0) {
                        return "PT0S";
                    } else {
                        var str = "";
                        if (this.isNegative) str += "-";
                        str += "P";
                        if (this.weeks) str += this.weeks + "W";
                        if (this.days) str += this.days + "D";

                        if (this.hours || this.minutes || this.seconds) {
                            str += "T";
                            if (this.hours) str += this.hours + "H";
                            if (this.minutes) str += this.minutes + "M";
                            if (this.seconds) str += this.seconds + "S";
                        }
                        return str;
                    }
                },

                /**
                 * The iCalendar string representation of this duration.
                 * @return {String}
                 */
                toICALString: function() {
                    return this.toString();
                }
            };

            /**
             * Returns a new ICAL.Duration instance from the passed seconds value.
             *
             * @param {Number} aSeconds       The seconds to create the instance from
             * @return {ICAL.Duration}        The newly created duration instance
             */
            ICAL.Duration.fromSeconds = function icalduration_from_seconds(aSeconds) {
                return (new ICAL.Duration()).fromSeconds(aSeconds);
            };

            /**
             * Internal helper function to handle a chunk of a duration.
             *
             * @param {String} letter type of duration chunk
             * @param {String} number numeric value or -/+
             * @param {Object} dict target to assign values to
             */
            function parseDurationChunk(letter, number, object) {
                var type;
                switch (letter) {
                    case 'P':
                        if (number && number === '-') {
                            object.isNegative = true;
                        } else {
                            object.isNegative = false;
                        }
                        // period
                        break;
                    case 'D':
                        type = 'days';
                        break;
                    case 'W':
                        type = 'weeks';
                        break;
                    case 'H':
                        type = 'hours';
                        break;
                    case 'M':
                        type = 'minutes';
                        break;
                    case 'S':
                        type = 'seconds';
                        break;
                    default:
                        // Not a valid chunk
                        return 0;
                }

                if (type) {
                    if (!number && number !== 0) {
                        throw new Error(
                            'invalid duration value: Missing number before "' + letter + '"'
                        );
                    }
                    var num = parseInt(number, 10);
                    if (ICAL.helpers.isStrictlyNaN(num)) {
                        throw new Error(
                            'invalid duration value: Invalid number "' + number + '" before "' + letter + '"'
                        );
                    }
                    object[type] = num;
                }

                return 1;
            }

            /**
             * Checks if the given string is an iCalendar duration value.
             *
             * @param {String} value      The raw ical value
             * @return {Boolean}          True, if the given value is of the
             *                              duration ical type
             */
            ICAL.Duration.isValueString = function(string) {
                return (string[0] === 'P' || string[1] === 'P');
            };

            /**
             * Creates a new {@link ICAL.Duration} instance from the passed string.
             *
             * @param {String} aStr       The string to parse
             * @return {ICAL.Duration}    The created duration instance
             */
            ICAL.Duration.fromString = function icalduration_from_string(aStr) {
                var pos = 0;
                var dict = Object.create(null);
                var chunks = 0;

                while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {
                    var type = aStr[pos];
                    var numeric = aStr.substr(0, pos);
                    aStr = aStr.substr(pos + 1);

                    chunks += parseDurationChunk(type, numeric, dict);
                }

                if (chunks < 2) {
                    // There must be at least a chunk with "P" and some unit chunk
                    throw new Error(
                        'invalid duration value: Not enough duration components in "' + aStr + '"'
                    );
                }

                return new ICAL.Duration(dict);
            };

            /**
             * Creates a new ICAL.Duration instance from the given data object.
             *
             * @param {Object} aData               An object with members of the duration
             * @param {Number} aData.weeks         Duration in weeks
             * @param {Number} aData.days          Duration in days
             * @param {Number} aData.hours         Duration in hours
             * @param {Number} aData.minutes       Duration in minutes
             * @param {Number} aData.seconds       Duration in seconds
             * @param {Boolean} aData.isNegative   If true, the duration is negative
             * @return {ICAL.Duration}             The createad duration instance
             */
            ICAL.Duration.fromData = function icalduration_from_data(aData) {
                return new ICAL.Duration(aData);
            };
        })();
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2012 */



        (function() {
            var OPTIONS = ["tzid", "location", "tznames",
                "latitude", "longitude"
            ];

            /**
             * @classdesc
             * Timezone representation, created by passing in a tzid and component.
             *
             * @example
             * var vcalendar;
             * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');
             * var tzid = timezoneComp.getFirstPropertyValue('tzid');
             *
             * var timezone = new ICAL.Timezone({
             *   component: timezoneComp,
             *   tzid
             * });
             *
             * @class
             * @param {ICAL.Component|Object} data options for class
             * @param {String|ICAL.Component} data.component
             *        If data is a simple object, then this member can be set to either a
             *        string containing the component data, or an already parsed
             *        ICAL.Component
             * @param {String} data.tzid      The timezone identifier
             * @param {String} data.location  The timezone locationw
             * @param {String} data.tznames   An alternative string representation of the
             *                                  timezone
             * @param {Number} data.latitude  The latitude of the timezone
             * @param {Number} data.longitude The longitude of the timezone
             */
            ICAL.Timezone = function icaltimezone(data) {
                this.wrappedJSObject = this;
                this.fromData(data);
            };

            ICAL.Timezone.prototype = {

                /**
                 * Timezone identifier
                 * @type {String}
                 */
                tzid: "",

                /**
                 * Timezone location
                 * @type {String}
                 */
                location: "",

                /**
                 * Alternative timezone name, for the string representation
                 * @type {String}
                 */
                tznames: "",

                /**
                 * The primary latitude for the timezone.
                 * @type {Number}
                 */
                latitude: 0.0,

                /**
                 * The primary longitude for the timezone.
                 * @type {Number}
                 */
                longitude: 0.0,

                /**
                 * The vtimezone component for this timezone.
                 * @type {ICAL.Component}
                 */
                component: null,

                /**
                 * The year this timezone has been expanded to. All timezone transition
                 * dates until this year are known and can be used for calculation
                 *
                 * @private
                 * @type {Number}
                 */
                expandedUntilYear: 0,

                /**
                 * The class identifier.
                 * @constant
                 * @type {String}
                 * @default "icaltimezone"
                 */
                icalclass: "icaltimezone",

                /**
                 * Sets up the current instance using members from the passed data object.
                 *
                 * @param {ICAL.Component|Object} aData options for class
                 * @param {String|ICAL.Component} aData.component
                 *        If aData is a simple object, then this member can be set to either a
                 *        string containing the component data, or an already parsed
                 *        ICAL.Component
                 * @param {String} aData.tzid      The timezone identifier
                 * @param {String} aData.location  The timezone locationw
                 * @param {String} aData.tznames   An alternative string representation of the
                 *                                  timezone
                 * @param {Number} aData.latitude  The latitude of the timezone
                 * @param {Number} aData.longitude The longitude of the timezone
                 */
                fromData: function fromData(aData) {
                    this.expandedUntilYear = 0;
                    this.changes = [];

                    if (aData instanceof ICAL.Component) {
                        // Either a component is passed directly
                        this.component = aData;
                    } else {
                        // Otherwise the component may be in the data object
                        if (aData && "component" in aData) {
                            if (typeof aData.component == "string") {
                                // If a string was passed, parse it as a component
                                var jCal = ICAL.parse(aData.component);
                                this.component = new ICAL.Component(jCal);
                            } else if (aData.component instanceof ICAL.Component) {
                                // If it was a component already, then just set it
                                this.component = aData.component;
                            } else {
                                // Otherwise just null out the component
                                this.component = null;
                            }
                        }

                        // Copy remaining passed properties
                        for (var key in OPTIONS) {
                            /* istanbul ignore else */
                            if (OPTIONS.hasOwnProperty(key)) {
                                var prop = OPTIONS[key];
                                if (aData && prop in aData) {
                                    this[prop] = aData[prop];
                                }
                            }
                        }
                    }

                    // If we have a component but no TZID, attempt to get it from the
                    // component's properties.
                    if (this.component instanceof ICAL.Component && !this.tzid) {
                        this.tzid = this.component.getFirstPropertyValue('tzid');
                    }

                    return this;
                },

                /**
                 * Finds the utcOffset the given time would occur in this timezone.
                 *
                 * @param {ICAL.Time} tt        The time to check for
                 * @return {Number} utc offset in seconds
                 */
                utcOffset: function utcOffset(tt) {
                    if (this == ICAL.Timezone.utcTimezone || this == ICAL.Timezone.localTimezone) {
                        return 0;
                    }

                    this._ensureCoverage(tt.year);

                    if (!this.changes.length) {
                        return 0;
                    }

                    var tt_change = {
                        year: tt.year,
                        month: tt.month,
                        day: tt.day,
                        hour: tt.hour,
                        minute: tt.minute,
                        second: tt.second
                    };

                    var change_num = this._findNearbyChange(tt_change);
                    var change_num_to_use = -1;
                    var step = 1;

                    // TODO: replace with bin search?
                    for (;;) {
                        var change = ICAL.helpers.clone(this.changes[change_num], true);
                        if (change.utcOffset < change.prevUtcOffset) {
                            ICAL.Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);
                        } else {
                            ICAL.Timezone.adjust_change(change, 0, 0, 0,
                                change.prevUtcOffset);
                        }

                        var cmp = ICAL.Timezone._compare_change_fn(tt_change, change);

                        if (cmp >= 0) {
                            change_num_to_use = change_num;
                        } else {
                            step = -1;
                        }

                        if (step == -1 && change_num_to_use != -1) {
                            break;
                        }

                        change_num += step;

                        if (change_num < 0) {
                            return 0;
                        }

                        if (change_num >= this.changes.length) {
                            break;
                        }
                    }

                    var zone_change = this.changes[change_num_to_use];
                    var utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;

                    if (utcOffset_change < 0 && change_num_to_use > 0) {
                        var tmp_change = ICAL.helpers.clone(zone_change, true);
                        ICAL.Timezone.adjust_change(tmp_change, 0, 0, 0,
                            tmp_change.prevUtcOffset);

                        if (ICAL.Timezone._compare_change_fn(tt_change, tmp_change) < 0) {
                            var prev_zone_change = this.changes[change_num_to_use - 1];

                            var want_daylight = false; // TODO

                            if (zone_change.is_daylight != want_daylight &&
                                prev_zone_change.is_daylight == want_daylight) {
                                zone_change = prev_zone_change;
                            }
                        }
                    }

                    // TODO return is_daylight?
                    return zone_change.utcOffset;
                },

                _findNearbyChange: function icaltimezone_find_nearby_change(change) {
                    // find the closest match
                    var idx = ICAL.helpers.binsearchInsert(
                        this.changes,
                        change,
                        ICAL.Timezone._compare_change_fn
                    );

                    if (idx >= this.changes.length) {
                        return this.changes.length - 1;
                    }

                    return idx;
                },

                _ensureCoverage: function(aYear) {
                    if (ICAL.Timezone._minimumExpansionYear == -1) {
                        var today = ICAL.Time.now();
                        ICAL.Timezone._minimumExpansionYear = today.year;
                    }

                    var changesEndYear = aYear;
                    if (changesEndYear < ICAL.Timezone._minimumExpansionYear) {
                        changesEndYear = ICAL.Timezone._minimumExpansionYear;
                    }

                    changesEndYear += ICAL.Timezone.EXTRA_COVERAGE;

                    if (changesEndYear > ICAL.Timezone.MAX_YEAR) {
                        changesEndYear = ICAL.Timezone.MAX_YEAR;
                    }

                    if (!this.changes.length || this.expandedUntilYear < aYear) {
                        var subcomps = this.component.getAllSubcomponents();
                        var compLen = subcomps.length;
                        var compIdx = 0;

                        for (; compIdx < compLen; compIdx++) {
                            this._expandComponent(
                                subcomps[compIdx], changesEndYear, this.changes
                            );
                        }

                        this.changes.sort(ICAL.Timezone._compare_change_fn);
                        this.expandedUntilYear = changesEndYear;
                    }
                },

                _expandComponent: function(aComponent, aYear, changes) {
                    if (!aComponent.hasProperty("dtstart") ||
                        !aComponent.hasProperty("tzoffsetto") ||
                        !aComponent.hasProperty("tzoffsetfrom")) {
                        return null;
                    }

                    var dtstart = aComponent.getFirstProperty("dtstart").getFirstValue();
                    var change;

                    function convert_tzoffset(offset) {
                        return offset.factor * (offset.hours * 3600 + offset.minutes * 60);
                    }

                    function init_changes() {
                        var changebase = {};
                        changebase.is_daylight = (aComponent.name == "daylight");
                        changebase.utcOffset = convert_tzoffset(
                            aComponent.getFirstProperty("tzoffsetto").getFirstValue()
                        );

                        changebase.prevUtcOffset = convert_tzoffset(
                            aComponent.getFirstProperty("tzoffsetfrom").getFirstValue()
                        );

                        return changebase;
                    }

                    if (!aComponent.hasProperty("rrule") && !aComponent.hasProperty("rdate")) {
                        change = init_changes();
                        change.year = dtstart.year;
                        change.month = dtstart.month;
                        change.day = dtstart.day;
                        change.hour = dtstart.hour;
                        change.minute = dtstart.minute;
                        change.second = dtstart.second;

                        ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);
                        changes.push(change);
                    } else {
                        var props = aComponent.getAllProperties("rdate");
                        for (var rdatekey in props) {
                            /* istanbul ignore if */
                            if (!props.hasOwnProperty(rdatekey)) {
                                continue;
                            }
                            var rdate = props[rdatekey];
                            var time = rdate.getFirstValue();
                            change = init_changes();

                            change.year = time.year;
                            change.month = time.month;
                            change.day = time.day;

                            if (time.isDate) {
                                change.hour = dtstart.hour;
                                change.minute = dtstart.minute;
                                change.second = dtstart.second;

                                if (dtstart.zone != ICAL.Timezone.utcTimezone) {
                                    ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);
                                }
                            } else {
                                change.hour = time.hour;
                                change.minute = time.minute;
                                change.second = time.second;

                                if (time.zone != ICAL.Timezone.utcTimezone) {
                                    ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);
                                }
                            }

                            changes.push(change);
                        }

                        var rrule = aComponent.getFirstProperty("rrule");

                        if (rrule) {
                            rrule = rrule.getFirstValue();
                            change = init_changes();

                            if (rrule.until && rrule.until.zone == ICAL.Timezone.utcTimezone) {
                                rrule.until.adjust(0, 0, 0, change.prevUtcOffset);
                                rrule.until.zone = ICAL.Timezone.localTimezone;
                            }

                            var iterator = rrule.iterator(dtstart);

                            var occ;
                            while ((occ = iterator.next())) {
                                change = init_changes();
                                if (occ.year > aYear || !occ) {
                                    break;
                                }

                                change.year = occ.year;
                                change.month = occ.month;
                                change.day = occ.day;
                                change.hour = occ.hour;
                                change.minute = occ.minute;
                                change.second = occ.second;
                                change.isDate = occ.isDate;

                                ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);
                                changes.push(change);
                            }
                        }
                    }

                    return changes;
                },

                /**
                 * The string representation of this timezone.
                 * @return {String}
                 */
                toString: function toString() {
                    return (this.tznames ? this.tznames : this.tzid);
                }
            };

            ICAL.Timezone._compare_change_fn = function icaltimezone_compare_change_fn(a, b) {
                if (a.year < b.year) return -1;
                else if (a.year > b.year) return 1;

                if (a.month < b.month) return -1;
                else if (a.month > b.month) return 1;

                if (a.day < b.day) return -1;
                else if (a.day > b.day) return 1;

                if (a.hour < b.hour) return -1;
                else if (a.hour > b.hour) return 1;

                if (a.minute < b.minute) return -1;
                else if (a.minute > b.minute) return 1;

                if (a.second < b.second) return -1;
                else if (a.second > b.second) return 1;

                return 0;
            };

            /**
             * Convert the date/time from one zone to the next.
             *
             * @param {ICAL.Time} tt                  The time to convert
             * @param {ICAL.Timezone} from_zone       The source zone to convert from
             * @param {ICAL.Timezone} to_zone         The target zone to conver to
             * @return {ICAL.Time}                    The converted date/time object
             */
            ICAL.Timezone.convert_time = function icaltimezone_convert_time(tt, from_zone, to_zone) {
                if (tt.isDate ||
                    from_zone.tzid == to_zone.tzid ||
                    from_zone == ICAL.Timezone.localTimezone ||
                    to_zone == ICAL.Timezone.localTimezone) {
                    tt.zone = to_zone;
                    return tt;
                }

                var utcOffset = from_zone.utcOffset(tt);
                tt.adjust(0, 0, 0, -utcOffset);

                utcOffset = to_zone.utcOffset(tt);
                tt.adjust(0, 0, 0, utcOffset);

                return null;
            };

            /**
             * Creates a new ICAL.Timezone instance from the passed data object.
             *
             * @param {ICAL.Component|Object} aData options for class
             * @param {String|ICAL.Component} aData.component
             *        If aData is a simple object, then this member can be set to either a
             *        string containing the component data, or an already parsed
             *        ICAL.Component
             * @param {String} aData.tzid      The timezone identifier
             * @param {String} aData.location  The timezone locationw
             * @param {String} aData.tznames   An alternative string representation of the
             *                                  timezone
             * @param {Number} aData.latitude  The latitude of the timezone
             * @param {Number} aData.longitude The longitude of the timezone
             */
            ICAL.Timezone.fromData = function icaltimezone_fromData(aData) {
                var tt = new ICAL.Timezone();
                return tt.fromData(aData);
            };

            /**
             * The instance describing the UTC timezone
             * @type {ICAL.Timezone}
             * @constant
             * @instance
             */
            ICAL.Timezone.utcTimezone = ICAL.Timezone.fromData({
                tzid: "UTC"
            });

            /**
             * The instance describing the local timezone
             * @type {ICAL.Timezone}
             * @constant
             * @instance
             */
            ICAL.Timezone.localTimezone = ICAL.Timezone.fromData({
                tzid: "floating"
            });

            /**
             * Adjust a timezone change object.
             * @private
             * @param {Object} change     The timezone change object
             * @param {Number} days       The extra amount of days
             * @param {Number} hours      The extra amount of hours
             * @param {Number} minutes    The extra amount of minutes
             * @param {Number} seconds    The extra amount of seconds
             */
            ICAL.Timezone.adjust_change = function icaltimezone_adjust_change(change, days, hours, minutes, seconds) {
                return ICAL.Time.prototype.adjust.call(
                    change,
                    days,
                    hours,
                    minutes,
                    seconds,
                    change
                );
            };

            ICAL.Timezone._minimumExpansionYear = -1;
            ICAL.Timezone.MAX_YEAR = 2035; // TODO this is because of time_t, which we don't need. Still usefull?
            ICAL.Timezone.EXTRA_COVERAGE = 5;
        })();
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.TimezoneService = (function() {
            var zones;

            /**
             * @classdesc
             * Singleton class to contain timezones.  Right now its all manual registry in
             * the future we may use this class to download timezone information or handle
             * loading pre-expanded timezones.
             *
             * @namespace
             * @alias ICAL.TimezoneService
             */
            var TimezoneService = {
                reset: function() {
                    zones = Object.create(null);
                    var utc = ICAL.Timezone.utcTimezone;

                    zones.Z = utc;
                    zones.UTC = utc;
                    zones.GMT = utc;
                },

                /**
                 * Checks if timezone id has been registered.
                 *
                 * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)
                 * @return {Boolean}        False, when not present
                 */
                has: function(tzid) {
                    return !!zones[tzid];
                },

                /**
                 * Returns a timezone by its tzid if present.
                 *
                 * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)
                 * @return {?ICAL.Timezone} The timezone, or null if not found
                 */
                get: function(tzid) {
                    return zones[tzid];
                },

                /**
                 * Registers a timezone object or component.
                 *
                 * @param {String=} name
                 *        The name of the timezone. Defaults to the component's TZID if not
                 *        passed.
                 * @param {ICAL.Component|ICAL.Timezone} zone
                 *        The initialized zone or vtimezone.
                 */
                register: function(name, timezone) {
                    if (name instanceof ICAL.Component) {
                        if (name.name === 'vtimezone') {
                            timezone = new ICAL.Timezone(name);
                            name = timezone.tzid;
                        }
                    }

                    if (timezone instanceof ICAL.Timezone) {
                        zones[name] = timezone;
                    } else {
                        throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');
                    }
                },

                /**
                 * Removes a timezone by its tzid from the list.
                 *
                 * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)
                 * @return {?ICAL.Timezone} The removed timezone, or null if not registered
                 */
                remove: function(tzid) {
                    return (delete zones[tzid]);
                }
            };

            // initialize defaults
            TimezoneService.reset();

            return TimezoneService;
        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */



        (function() {

            /**
             * @classdesc
             * iCalendar Time representation (similar to JS Date object).  Fully
             * independent of system (OS) timezone / time.  Unlike JS Date, the month
             * January is 1, not zero.
             *
             * @example
             * var time = new ICAL.Time({
             *   year: 2012,
             *   month: 10,
             *   day: 11
             *   minute: 0,
             *   second: 0,
             *   isDate: false
             * });
             *
             *
             * @alias ICAL.Time
             * @class
             * @param {Object} data           Time initialization
             * @param {Number=} data.year     The year for this date
             * @param {Number=} data.month    The month for this date
             * @param {Number=} data.day      The day for this date
             * @param {Number=} data.hour     The hour for this date
             * @param {Number=} data.minute   The minute for this date
             * @param {Number=} data.second   The second for this date
             * @param {Boolean=} data.isDate  If true, the instance represents a date (as
             *                                  opposed to a date-time)
             * @param {ICAL.Timezone} zone timezone this position occurs in
             */
            ICAL.Time = function icaltime(data, zone) {
                this.wrappedJSObject = this;
                var time = this._time = Object.create(null);

                /* time defaults */
                time.year = 0;
                time.month = 1;
                time.day = 1;
                time.hour = 0;
                time.minute = 0;
                time.second = 0;
                time.isDate = false;

                this.fromData(data, zone);
            };

            ICAL.Time._dowCache = {};
            ICAL.Time._wnCache = {};

            ICAL.Time.prototype = {

                /**
                 * The class identifier.
                 * @constant
                 * @type {String}
                 * @default "icaltime"
                 */
                icalclass: "icaltime",
                _cachedUnixTime: null,

                /**
                 * The type name, to be used in the jCal object. This value may change and
                 * is strictly defined by the {@link ICAL.Time#isDate isDate} member.
                 * @readonly
                 * @type {String}
                 * @default "date-time"
                 */
                get icaltype() {
                    return this.isDate ? 'date' : 'date-time';
                },

                /**
                 * The timezone for this time.
                 * @type {ICAL.Timezone}
                 */
                zone: null,

                /**
                 * Internal uses to indicate that a change has been made and the next read
                 * operation must attempt to normalize the value (for example changing the
                 * day to 33).
                 *
                 * @type {Boolean}
                 * @private
                 */
                _pendingNormalization: false,

                /**
                 * Returns a clone of the time object.
                 *
                 * @return {ICAL.Time}              The cloned object
                 */
                clone: function() {
                    return new ICAL.Time(this._time, this.zone);
                },

                /**
                 * Reset the time instance to epoch time
                 */
                reset: function icaltime_reset() {
                    this.fromData(ICAL.Time.epochTime);
                    this.zone = ICAL.Timezone.utcTimezone;
                },

                /**
                 * Reset the time instance to the given date/time values.
                 *
                 * @param {Number} year             The year to set
                 * @param {Number} month            The month to set
                 * @param {Number} day              The day to set
                 * @param {Number} hour             The hour to set
                 * @param {Number} minute           The minute to set
                 * @param {Number} second           The second to set
                 * @param {ICAL.Timezone} timezone  The timezone to set
                 */
                resetTo: function icaltime_resetTo(year, month, day,
                    hour, minute, second, timezone) {
                    this.fromData({
                        year: year,
                        month: month,
                        day: day,
                        hour: hour,
                        minute: minute,
                        second: second,
                        zone: timezone
                    });
                },

                /**
                 * Set up the current instance from the Javascript date value.
                 *
                 * @param {?Date} aDate     The Javascript Date to read, or null to reset
                 * @param {Boolean} useUTC  If true, the UTC values of the date will be used
                 */
                fromJSDate: function icaltime_fromJSDate(aDate, useUTC) {
                    if (!aDate) {
                        this.reset();
                    } else {
                        if (useUTC) {
                            this.zone = ICAL.Timezone.utcTimezone;
                            this.year = aDate.getUTCFullYear();
                            this.month = aDate.getUTCMonth() + 1;
                            this.day = aDate.getUTCDate();
                            this.hour = aDate.getUTCHours();
                            this.minute = aDate.getUTCMinutes();
                            this.second = aDate.getUTCSeconds();
                        } else {
                            this.zone = ICAL.Timezone.localTimezone;
                            this.year = aDate.getFullYear();
                            this.month = aDate.getMonth() + 1;
                            this.day = aDate.getDate();
                            this.hour = aDate.getHours();
                            this.minute = aDate.getMinutes();
                            this.second = aDate.getSeconds();
                        }
                    }
                    this._cachedUnixTime = null;
                    return this;
                },

                /**
                 * Sets up the current instance using members from the passed data object.
                 *
                 * @param {Object} aData            Time initialization
                 * @param {Number=} aData.year      The year for this date
                 * @param {Number=} aData.month     The month for this date
                 * @param {Number=} aData.day       The day for this date
                 * @param {Number=} aData.hour      The hour for this date
                 * @param {Number=} aData.minute    The minute for this date
                 * @param {Number=} aData.second    The second for this date
                 * @param {Boolean=} aData.isDate   If true, the instance represents a date
                 *                                    (as opposed to a date-time)
                 * @param {ICAL.Timezone=} aZone    Timezone this position occurs in
                 */
                fromData: function fromData(aData, aZone) {
                    if (aData) {
                        for (var key in aData) {
                            /* istanbul ignore else */
                            if (Object.prototype.hasOwnProperty.call(aData, key)) {
                                // ical type cannot be set
                                if (key === 'icaltype') continue;
                                this[key] = aData[key];
                            }
                        }
                    }

                    if (aZone) {
                        this.zone = aZone;
                    }

                    if (aData && !("isDate" in aData)) {
                        this.isDate = !("hour" in aData);
                    } else if (aData && ("isDate" in aData)) {
                        this.isDate = aData.isDate;
                    }

                    if (aData && "timezone" in aData) {
                        var zone = ICAL.TimezoneService.get(
                            aData.timezone
                        );

                        this.zone = zone || ICAL.Timezone.localTimezone;
                    }

                    if (aData && "zone" in aData) {
                        this.zone = aData.zone;
                    }

                    if (!this.zone) {
                        this.zone = ICAL.Timezone.localTimezone;
                    }

                    this._cachedUnixTime = null;
                    return this;
                },

                /**
                 * Calculate the day of week.
                 * @return {ICAL.Time.weekDay}
                 */
                dayOfWeek: function icaltime_dayOfWeek() {
                    var dowCacheKey = (this.year << 9) + (this.month << 5) + this.day;
                    if (dowCacheKey in ICAL.Time._dowCache) {
                        return ICAL.Time._dowCache[dowCacheKey];
                    }

                    // Using Zeller's algorithm
                    var q = this.day;
                    var m = this.month + (this.month < 3 ? 12 : 0);
                    var Y = this.year - (this.month < 3 ? 1 : 0);

                    var h = (q + Y + ICAL.helpers.trunc(((m + 1) * 26) / 10) + ICAL.helpers.trunc(Y / 4));
                    /* istanbul ignore else */
                    if (true /* gregorian */ ) {
                        h += ICAL.helpers.trunc(Y / 100) * 6 + ICAL.helpers.trunc(Y / 400);
                    } else {
                        h += 5;
                    }

                    // Normalize to 1 = sunday
                    h = ((h + 6) % 7) + 1;
                    ICAL.Time._dowCache[dowCacheKey] = h;
                    return h;
                },

                /**
                 * Calculate the day of year.
                 * @return {Number}
                 */
                dayOfYear: function dayOfYear() {
                    var is_leap = (ICAL.Time.isLeapYear(this.year) ? 1 : 0);
                    var diypm = ICAL.Time.daysInYearPassedMonth;
                    return diypm[is_leap][this.month - 1] + this.day;
                },

                /**
                 * Returns a copy of the current date/time, rewound to the start of the
                 * week. The resulting ICAL.Time instance is of icaltype date, even if this
                 * is a date-time.
                 *
                 * @param {ICAL.Time.weekDay=} aWeekStart
                 *        The week start weekday, defaults to SUNDAY
                 * @return {ICAL.Time}      The start of the week (cloned)
                 */
                startOfWeek: function startOfWeek(aWeekStart) {
                    var firstDow = aWeekStart || ICAL.Time.SUNDAY;
                    var result = this.clone();
                    result.day -= ((this.dayOfWeek() + 7 - firstDow) % 7);
                    result.isDate = true;
                    result.hour = 0;
                    result.minute = 0;
                    result.second = 0;
                    return result;
                },

                /**
                 * Returns a copy of the current date/time, shifted to the end of the week.
                 * The resulting ICAL.Time instance is of icaltype date, even if this is a
                 * date-time.
                 *
                 * @param {ICAL.Time.weekDay=} aWeekStart
                 *        The week start weekday, defaults to SUNDAY
                 * @return {ICAL.Time}      The end of the week (cloned)
                 */
                endOfWeek: function endOfWeek(aWeekStart) {
                    var firstDow = aWeekStart || ICAL.Time.SUNDAY;
                    var result = this.clone();
                    result.day += (7 - this.dayOfWeek() + firstDow - ICAL.Time.SUNDAY) % 7;
                    result.isDate = true;
                    result.hour = 0;
                    result.minute = 0;
                    result.second = 0;
                    return result;
                },

                /**
                 * Returns a copy of the current date/time, rewound to the start of the
                 * month. The resulting ICAL.Time instance is of icaltype date, even if
                 * this is a date-time.
                 *
                 * @return {ICAL.Time}      The start of the month (cloned)
                 */
                startOfMonth: function startOfMonth() {
                    var result = this.clone();
                    result.day = 1;
                    result.isDate = true;
                    result.hour = 0;
                    result.minute = 0;
                    result.second = 0;
                    return result;
                },

                /**
                 * Returns a copy of the current date/time, shifted to the end of the
                 * month.  The resulting ICAL.Time instance is of icaltype date, even if
                 * this is a date-time.
                 *
                 * @return {ICAL.Time}      The end of the month (cloned)
                 */
                endOfMonth: function endOfMonth() {
                    var result = this.clone();
                    result.day = ICAL.Time.daysInMonth(result.month, result.year);
                    result.isDate = true;
                    result.hour = 0;
                    result.minute = 0;
                    result.second = 0;
                    return result;
                },

                /**
                 * Returns a copy of the current date/time, rewound to the start of the
                 * year. The resulting ICAL.Time instance is of icaltype date, even if
                 * this is a date-time.
                 *
                 * @return {ICAL.Time}      The start of the year (cloned)
                 */
                startOfYear: function startOfYear() {
                    var result = this.clone();
                    result.day = 1;
                    result.month = 1;
                    result.isDate = true;
                    result.hour = 0;
                    result.minute = 0;
                    result.second = 0;
                    return result;
                },

                /**
                 * Returns a copy of the current date/time, shifted to the end of the
                 * year.  The resulting ICAL.Time instance is of icaltype date, even if
                 * this is a date-time.
                 *
                 * @return {ICAL.Time}      The end of the year (cloned)
                 */
                endOfYear: function endOfYear() {
                    var result = this.clone();
                    result.day = 31;
                    result.month = 12;
                    result.isDate = true;
                    result.hour = 0;
                    result.minute = 0;
                    result.second = 0;
                    return result;
                },

                /**
                 * First calculates the start of the week, then returns the day of year for
                 * this date. If the day falls into the previous year, the day is zero or negative.
                 *
                 * @param {ICAL.Time.weekDay=} aFirstDayOfWeek
                 *        The week start weekday, defaults to SUNDAY
                 * @return {Number}     The calculated day of year
                 */
                startDoyWeek: function startDoyWeek(aFirstDayOfWeek) {
                    var firstDow = aFirstDayOfWeek || ICAL.Time.SUNDAY;
                    var delta = this.dayOfWeek() - firstDow;
                    if (delta < 0) delta += 7;
                    return this.dayOfYear() - delta;
                },

                /**
                 * Get the dominical letter for the current year. Letters range from A - G
                 * for common years, and AG to GF for leap years.
                 *
                 * @param {Number} yr           The year to retrieve the letter for
                 * @return {String}             The dominical letter.
                 */
                getDominicalLetter: function() {
                    return ICAL.Time.getDominicalLetter(this.year);
                },

                /**
                 * Finds the nthWeekDay relative to the current month (not day).  The
                 * returned value is a day relative the month that this month belongs to so
                 * 1 would indicate the first of the month and 40 would indicate a day in
                 * the following month.
                 *
                 * @param {Number} aDayOfWeek   Day of the week see the day name constants
                 * @param {Number} aPos         Nth occurrence of a given week day values
                 *        of 1 and 0 both indicate the first weekday of that type. aPos may
                 *        be either positive or negative
                 *
                 * @return {Number} numeric value indicating a day relative
                 *                   to the current month of this time object
                 */
                nthWeekDay: function icaltime_nthWeekDay(aDayOfWeek, aPos) {
                    var daysInMonth = ICAL.Time.daysInMonth(this.month, this.year);
                    var weekday;
                    var pos = aPos;

                    var start = 0;

                    var otherDay = this.clone();

                    if (pos >= 0) {
                        otherDay.day = 1;

                        // because 0 means no position has been given
                        // 1 and 0 indicate the same day.
                        if (pos != 0) {
                            // remove the extra numeric value
                            pos--;
                        }

                        // set current start offset to current day.
                        start = otherDay.day;

                        // find the current day of week
                        var startDow = otherDay.dayOfWeek();

                        // calculate the difference between current
                        // day of the week and desired day of the week
                        var offset = aDayOfWeek - startDow;


                        // if the offset goes into the past
                        // week we add 7 so its goes into the next
                        // week. We only want to go forward in time here.
                        if (offset < 0)
                            // this is really important otherwise we would
                            // end up with dates from in the past.
                            offset += 7;

                        // add offset to start so start is the same
                        // day of the week as the desired day of week.
                        start += offset;

                        // because we are going to add (and multiply)
                        // the numeric value of the day we subtract it
                        // from the start position so not to add it twice.
                        start -= aDayOfWeek;

                        // set week day
                        weekday = aDayOfWeek;
                    } else {

                        // then we set it to the last day in the current month
                        otherDay.day = daysInMonth;

                        // find the ends weekday
                        var endDow = otherDay.dayOfWeek();

                        pos++;

                        weekday = (endDow - aDayOfWeek);

                        if (weekday < 0) {
                            weekday += 7;
                        }

                        weekday = daysInMonth - weekday;
                    }

                    weekday += pos * 7;

                    return start + weekday;
                },

                /**
                 * Checks if current time is the nth weekday, relative to the current
                 * month.  Will always return false when rule resolves outside of current
                 * month.
                 *
                 * @param {ICAL.Time.weekDay} aDayOfWeek       Day of week to check
                 * @param {Number} aPos                        Relative position
                 * @return {Boolean}                           True, if its the nth weekday
                 */
                isNthWeekDay: function(aDayOfWeek, aPos) {
                    var dow = this.dayOfWeek();

                    if (aPos === 0 && dow === aDayOfWeek) {
                        return true;
                    }

                    // get pos
                    var day = this.nthWeekDay(aDayOfWeek, aPos);

                    if (day === this.day) {
                        return true;
                    }

                    return false;
                },

                /**
                 * Calculates the ISO 8601 week number. The first week of a year is the
                 * week that contains the first Thursday. The year can have 53 weeks, if
                 * January 1st is a Friday.
                 *
                 * Note there are regions where the first week of the year is the one that
                 * starts on January 1st, which may offset the week number. Also, if a
                 * different week start is specified, this will also affect the week
                 * number.
                 *
                 * @see ICAL.Time.weekOneStarts
                 * @param {ICAL.Time.weekDay} aWeekStart        The weekday the week starts with
                 * @return {Number}                             The ISO week number
                 */
                weekNumber: function weekNumber(aWeekStart) {
                    var wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;
                    if (wnCacheKey in ICAL.Time._wnCache) {
                        return ICAL.Time._wnCache[wnCacheKey];
                    }
                    // This function courtesty of Julian Bucknall, published under the MIT license
                    // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html
                    // plus some fixes to be able to use different week starts.
                    var week1;

                    var dt = this.clone();
                    dt.isDate = true;
                    var isoyear = this.year;

                    if (dt.month == 12 && dt.day > 25) {
                        week1 = ICAL.Time.weekOneStarts(isoyear + 1, aWeekStart);
                        if (dt.compare(week1) < 0) {
                            week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);
                        } else {
                            isoyear++;
                        }
                    } else {
                        week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);
                        if (dt.compare(week1) < 0) {
                            week1 = ICAL.Time.weekOneStarts(--isoyear, aWeekStart);
                        }
                    }

                    var daysBetween = (dt.subtractDate(week1).toSeconds() / 86400);
                    var answer = ICAL.helpers.trunc(daysBetween / 7) + 1;
                    ICAL.Time._wnCache[wnCacheKey] = answer;
                    return answer;
                },

                /**
                 * Adds the duration to the current time. The instance is modified in
                 * place.
                 *
                 * @param {ICAL.Duration} aDuration         The duration to add
                 */
                addDuration: function icaltime_add(aDuration) {
                    var mult = (aDuration.isNegative ? -1 : 1);

                    // because of the duration optimizations it is much
                    // more efficient to grab all the values up front
                    // then set them directly (which will avoid a normalization call).
                    // So we don't actually normalize until we need it.
                    var second = this.second;
                    var minute = this.minute;
                    var hour = this.hour;
                    var day = this.day;

                    second += mult * aDuration.seconds;
                    minute += mult * aDuration.minutes;
                    hour += mult * aDuration.hours;
                    day += mult * aDuration.days;
                    day += mult * 7 * aDuration.weeks;

                    this.second = second;
                    this.minute = minute;
                    this.hour = hour;
                    this.day = day;

                    this._cachedUnixTime = null;
                },

                /**
                 * Subtract the date details (_excluding_ timezone).  Useful for finding
                 * the relative difference between two time objects excluding their
                 * timezone differences.
                 *
                 * @param {ICAL.Time} aDate     The date to substract
                 * @return {ICAL.Duration}      The difference as a duration
                 */
                subtractDate: function icaltime_subtract(aDate) {
                    var unixTime = this.toUnixTime() + this.utcOffset();
                    var other = aDate.toUnixTime() + aDate.utcOffset();
                    return ICAL.Duration.fromSeconds(unixTime - other);
                },

                /**
                 * Subtract the date details, taking timezones into account.
                 *
                 * @param {ICAL.Time} aDate  The date to subtract
                 * @return {ICAL.Duration}  The difference in duration
                 */
                subtractDateTz: function icaltime_subtract_abs(aDate) {
                    var unixTime = this.toUnixTime();
                    var other = aDate.toUnixTime();
                    return ICAL.Duration.fromSeconds(unixTime - other);
                },

                /**
                 * Compares the ICAL.Time instance with another one.
                 *
                 * @param {ICAL.Duration} aOther        The instance to compare with
                 * @return {Number}                     -1, 0 or 1 for less/equal/greater
                 */
                compare: function icaltime_compare(other) {
                    var a = this.toUnixTime();
                    var b = other.toUnixTime();

                    if (a > b) return 1;
                    if (b > a) return -1;
                    return 0;
                },

                /**
                 * Compares only the date part of this instance with another one.
                 *
                 * @param {ICAL.Duration} other         The instance to compare with
                 * @param {ICAL.Timezone} tz            The timezone to compare in
                 * @return {Number}                     -1, 0 or 1 for less/equal/greater
                 */
                compareDateOnlyTz: function icaltime_compareDateOnlyTz(other, tz) {
                    function cmp(attr) {
                        return ICAL.Time._cmp_attr(a, b, attr);
                    }
                    var a = this.convertToZone(tz);
                    var b = other.convertToZone(tz);
                    var rc = 0;

                    if ((rc = cmp("year")) != 0) return rc;
                    if ((rc = cmp("month")) != 0) return rc;
                    if ((rc = cmp("day")) != 0) return rc;

                    return rc;
                },

                /**
                 * Convert the instance into another timzone. The returned ICAL.Time
                 * instance is always a copy.
                 *
                 * @param {ICAL.Timezone} zone      The zone to convert to
                 * @return {ICAL.Time}              The copy, converted to the zone
                 */
                convertToZone: function convertToZone(zone) {
                    var copy = this.clone();
                    var zone_equals = (this.zone.tzid == zone.tzid);

                    if (!this.isDate && !zone_equals) {
                        ICAL.Timezone.convert_time(copy, this.zone, zone);
                    }

                    copy.zone = zone;
                    return copy;
                },

                /**
                 * Calculates the UTC offset of the current date/time in the timezone it is
                 * in.
                 *
                 * @return {Number}     UTC offset in seconds
                 */
                utcOffset: function utc_offset() {
                    if (this.zone == ICAL.Timezone.localTimezone ||
                        this.zone == ICAL.Timezone.utcTimezone) {
                        return 0;
                    } else {
                        return this.zone.utcOffset(this);
                    }
                },

                /**
                 * Returns an RFC 5545 compliant ical representation of this object.
                 *
                 * @return {String} ical date/date-time
                 */
                toICALString: function() {
                    var string = this.toString();

                    if (string.length > 10) {
                        return ICAL.design.icalendar.value['date-time'].toICAL(string);
                    } else {
                        return ICAL.design.icalendar.value.date.toICAL(string);
                    }
                },

                /**
                 * The string representation of this date/time, in jCal form
                 * (including : and - separators).
                 * @return {String}
                 */
                toString: function toString() {
                    var result = this.year + '-' +
                        ICAL.helpers.pad2(this.month) + '-' +
                        ICAL.helpers.pad2(this.day);

                    if (!this.isDate) {
                        result += 'T' + ICAL.helpers.pad2(this.hour) + ':' +
                            ICAL.helpers.pad2(this.minute) + ':' +
                            ICAL.helpers.pad2(this.second);

                        if (this.zone === ICAL.Timezone.utcTimezone) {
                            result += 'Z';
                        }
                    }

                    return result;
                },

                /**
                 * Converts the current instance to a Javascript date
                 * @return {Date}
                 */
                toJSDate: function toJSDate() {
                    if (this.zone == ICAL.Timezone.localTimezone) {
                        if (this.isDate) {
                            return new Date(this.year, this.month - 1, this.day);
                        } else {
                            return new Date(this.year, this.month - 1, this.day,
                                this.hour, this.minute, this.second, 0);
                        }
                    } else {
                        return new Date(this.toUnixTime() * 1000);
                    }
                },

                _normalize: function icaltime_normalize() {
                    var isDate = this._time.isDate;
                    if (this._time.isDate) {
                        this._time.hour = 0;
                        this._time.minute = 0;
                        this._time.second = 0;
                    }
                    this.adjust(0, 0, 0, 0);

                    return this;
                },

                /**
                 * Adjust the date/time by the given offset
                 *
                 * @param {Number} aExtraDays       The extra amount of days
                 * @param {Number} aExtraHours      The extra amount of hours
                 * @param {Number} aExtraMinutes    The extra amount of minutes
                 * @param {Number} aExtraSeconds    The extra amount of seconds
                 * @param {Number=} aTime           The time to adjust, defaults to the
                 *                                    current instance.
                 */
                adjust: function icaltime_adjust(aExtraDays, aExtraHours,
                    aExtraMinutes, aExtraSeconds, aTime) {

                    var minutesOverflow, hoursOverflow,
                        daysOverflow = 0,
                        yearsOverflow = 0;

                    var second, minute, hour, day;
                    var daysInMonth;

                    var time = aTime || this._time;

                    if (!time.isDate) {
                        second = time.second + aExtraSeconds;
                        time.second = second % 60;
                        minutesOverflow = ICAL.helpers.trunc(second / 60);
                        if (time.second < 0) {
                            time.second += 60;
                            minutesOverflow--;
                        }

                        minute = time.minute + aExtraMinutes + minutesOverflow;
                        time.minute = minute % 60;
                        hoursOverflow = ICAL.helpers.trunc(minute / 60);
                        if (time.minute < 0) {
                            time.minute += 60;
                            hoursOverflow--;
                        }

                        hour = time.hour + aExtraHours + hoursOverflow;

                        time.hour = hour % 24;
                        daysOverflow = ICAL.helpers.trunc(hour / 24);
                        if (time.hour < 0) {
                            time.hour += 24;
                            daysOverflow--;
                        }
                    }


                    // Adjust month and year first, because we need to know what month the day
                    // is in before adjusting it.
                    if (time.month > 12) {
                        yearsOverflow = ICAL.helpers.trunc((time.month - 1) / 12);
                    } else if (time.month < 1) {
                        yearsOverflow = ICAL.helpers.trunc(time.month / 12) - 1;
                    }

                    time.year += yearsOverflow;
                    time.month -= 12 * yearsOverflow;

                    // Now take care of the days (and adjust month if needed)
                    day = time.day + aExtraDays + daysOverflow;

                    if (day > 0) {
                        for (;;) {
                            daysInMonth = ICAL.Time.daysInMonth(time.month, time.year);
                            if (day <= daysInMonth) {
                                break;
                            }

                            time.month++;
                            if (time.month > 12) {
                                time.year++;
                                time.month = 1;
                            }

                            day -= daysInMonth;
                        }
                    } else {
                        while (day <= 0) {
                            if (time.month == 1) {
                                time.year--;
                                time.month = 12;
                            } else {
                                time.month--;
                            }

                            day += ICAL.Time.daysInMonth(time.month, time.year);
                        }
                    }

                    time.day = day;

                    this._cachedUnixTime = null;
                    return this;
                },

                /**
                 * Sets up the current instance from unix time, the number of seconds since
                 * January 1st, 1970.
                 *
                 * @param {Number} seconds      The seconds to set up with
                 */
                fromUnixTime: function fromUnixTime(seconds) {
                    this.zone = ICAL.Timezone.utcTimezone;
                    var epoch = ICAL.Time.epochTime.clone();
                    epoch.adjust(0, 0, 0, seconds);

                    this.year = epoch.year;
                    this.month = epoch.month;
                    this.day = epoch.day;
                    this.hour = epoch.hour;
                    this.minute = epoch.minute;
                    this.second = Math.floor(epoch.second);

                    this._cachedUnixTime = null;
                },

                /**
                 * Converts the current instance to seconds since January 1st 1970.
                 *
                 * @return {Number}         Seconds since 1970
                 */
                toUnixTime: function toUnixTime() {
                    if (this._cachedUnixTime !== null) {
                        return this._cachedUnixTime;
                    }
                    var offset = this.utcOffset();

                    // we use the offset trick to ensure
                    // that we are getting the actual UTC time
                    var ms = Date.UTC(
                        this.year,
                        this.month - 1,
                        this.day,
                        this.hour,
                        this.minute,
                        this.second - offset
                    );

                    // seconds
                    this._cachedUnixTime = ms / 1000;
                    return this._cachedUnixTime;
                },

                /**
                 * Converts time to into Object which can be serialized then re-created
                 * using the constructor.
                 *
                 * @example
                 * // toJSON will automatically be called
                 * var json = JSON.stringify(mytime);
                 *
                 * var deserialized = JSON.parse(json);
                 *
                 * var time = new ICAL.Time(deserialized);
                 *
                 * @return {Object}
                 */
                toJSON: function() {
                    var copy = [
                        'year',
                        'month',
                        'day',
                        'hour',
                        'minute',
                        'second',
                        'isDate'
                    ];

                    var result = Object.create(null);

                    var i = 0;
                    var len = copy.length;
                    var prop;

                    for (; i < len; i++) {
                        prop = copy[i];
                        result[prop] = this[prop];
                    }

                    if (this.zone) {
                        result.timezone = this.zone.tzid;
                    }

                    return result;
                }

            };

            (function setupNormalizeAttributes() {
                // This needs to run before any instances are created!
                function defineAttr(attr) {
                    Object.defineProperty(ICAL.Time.prototype, attr, {
                        get: function getTimeAttr() {
                            if (this._pendingNormalization) {
                                this._normalize();
                                this._pendingNormalization = false;
                            }

                            return this._time[attr];
                        },
                        set: function setTimeAttr(val) {
                            this._cachedUnixTime = null;
                            this._pendingNormalization = true;
                            this._time[attr] = val;

                            return val;
                        }
                    });

                }

                /* istanbul ignore else */
                if ("defineProperty" in Object) {
                    defineAttr("year");
                    defineAttr("month");
                    defineAttr("day");
                    defineAttr("hour");
                    defineAttr("minute");
                    defineAttr("second");
                    defineAttr("isDate");
                }
            })();

            /**
             * Returns the days in the given month
             *
             * @param {Number} month      The month to check
             * @param {Number} year       The year to check
             * @return {Number}           The number of days in the month
             */
            ICAL.Time.daysInMonth = function icaltime_daysInMonth(month, year) {
                var _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
                var days = 30;

                if (month < 1 || month > 12) return days;

                days = _daysInMonth[month];

                if (month == 2) {
                    days += ICAL.Time.isLeapYear(year);
                }

                return days;
            };

            /**
             * Checks if the year is a leap year
             *
             * @param {Number} year       The year to check
             * @return {Boolean}          True, if the year is a leap year
             */
            ICAL.Time.isLeapYear = function isLeapYear(year) {
                if (year <= 1752) {
                    return ((year % 4) == 0);
                } else {
                    return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0));
                }
            };

            /**
             * Create a new ICAL.Time from the day of year and year. The date is returned
             * in floating timezone.
             *
             * @param {Number} aDayOfYear     The day of year
             * @param {Number} aYear          The year to create the instance in
             * @return {ICAL.Time}            The created instance with the calculated date
             */
            ICAL.Time.fromDayOfYear = function icaltime_fromDayOfYear(aDayOfYear, aYear) {
                var year = aYear;
                var doy = aDayOfYear;
                var tt = new ICAL.Time();
                tt.auto_normalize = false;
                var is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);

                if (doy < 1) {
                    year--;
                    is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);
                    doy += ICAL.Time.daysInYearPassedMonth[is_leap][12];
                    return ICAL.Time.fromDayOfYear(doy, year);
                } else if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][12]) {
                    is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);
                    doy -= ICAL.Time.daysInYearPassedMonth[is_leap][12];
                    year++;
                    return ICAL.Time.fromDayOfYear(doy, year);
                }

                tt.year = year;
                tt.isDate = true;

                for (var month = 11; month >= 0; month--) {
                    if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][month]) {
                        tt.month = month + 1;
                        tt.day = doy - ICAL.Time.daysInYearPassedMonth[is_leap][month];
                        break;
                    }
                }

                tt.auto_normalize = true;
                return tt;
            };

            /**
             * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.
             *
             * @deprecated                Use {@link ICAL.Time.fromDateString} instead
             * @param {String} str        The string to create from
             * @return {ICAL.Time}        The date/time instance
             */
            ICAL.Time.fromStringv2 = function fromString(str) {
                return new ICAL.Time({
                    year: parseInt(str.substr(0, 4), 10),
                    month: parseInt(str.substr(5, 2), 10),
                    day: parseInt(str.substr(8, 2), 10),
                    isDate: true
                });
            };

            /**
             * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.
             *
             * @param {String} aValue     The string to create from
             * @return {ICAL.Time}        The date/time instance
             */
            ICAL.Time.fromDateString = function(aValue) {
                // Dates should have no timezone.
                // Google likes to sometimes specify Z on dates
                // we specifically ignore that to avoid issues.

                // YYYY-MM-DD
                // 2012-10-10
                return new ICAL.Time({
                    year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),
                    month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),
                    day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),
                    isDate: true
                });
            };

            /**
             * Returns a new ICAL.Time instance from a date-time string, e.g
             * 2015-01-02T03:04:05. If a property is specified, the timezone is set up
             * from the property's TZID parameter.
             *
             * @param {String} aValue         The string to create from
             * @param {ICAL.Property=} prop   The property the date belongs to
             * @return {ICAL.Time}            The date/time instance
             */
            ICAL.Time.fromDateTimeString = function(aValue, prop) {
                if (aValue.length < 19) {
                    throw new Error(
                        'invalid date-time value: "' + aValue + '"'
                    );
                }

                var zone;

                if (aValue[19] && aValue[19] === 'Z') {
                    zone = 'Z';
                } else if (prop) {
                    zone = prop.getParameter('tzid');
                }

                // 2012-10-10T10:10:10(Z)?
                var time = new ICAL.Time({
                    year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),
                    month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),
                    day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),
                    hour: ICAL.helpers.strictParseInt(aValue.substr(11, 2)),
                    minute: ICAL.helpers.strictParseInt(aValue.substr(14, 2)),
                    second: ICAL.helpers.strictParseInt(aValue.substr(17, 2)),
                    timezone: zone
                });

                return time;
            };

            /**
             * Returns a new ICAL.Time instance from a date or date-time string,
             *
             * @param {String} aValue         The string to create from
             * @return {ICAL.Time}            The date/time instance
             */
            ICAL.Time.fromString = function fromString(aValue) {
                if (aValue.length > 10) {
                    return ICAL.Time.fromDateTimeString(aValue);
                } else {
                    return ICAL.Time.fromDateString(aValue);
                }
            };

            /**
             * Creates a new ICAL.Time instance from the given Javascript Date.
             *
             * @param {?Date} aDate     The Javascript Date to read, or null to reset
             * @param {Boolean} useUTC  If true, the UTC values of the date will be used
             */
            ICAL.Time.fromJSDate = function fromJSDate(aDate, useUTC) {
                var tt = new ICAL.Time();
                return tt.fromJSDate(aDate, useUTC);
            };

            /**
             * Creates a new ICAL.Time instance from the the passed data object.
             *
             * @param {Object} aData            Time initialization
             * @param {Number=} aData.year      The year for this date
             * @param {Number=} aData.month     The month for this date
             * @param {Number=} aData.day       The day for this date
             * @param {Number=} aData.hour      The hour for this date
             * @param {Number=} aData.minute    The minute for this date
             * @param {Number=} aData.second    The second for this date
             * @param {Boolean=} aData.isDate   If true, the instance represents a date
             *                                    (as opposed to a date-time)
             * @param {ICAL.Timezone=} aZone    Timezone this position occurs in
             */
            ICAL.Time.fromData = function fromData(aData, aZone) {
                var t = new ICAL.Time();
                return t.fromData(aData, aZone);
            };

            /**
             * Creates a new ICAL.Time instance from the current moment.
             * @return {ICAL.Time}
             */
            ICAL.Time.now = function icaltime_now() {
                return ICAL.Time.fromJSDate(new Date(), false);
            };

            /**
             * Returns the date on which ISO week number 1 starts.
             *
             * @see ICAL.Time#weekNumber
             * @param {Number} aYear                  The year to search in
             * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday, used for calculation.
             * @return {ICAL.Time}                    The date on which week number 1 starts
             */
            ICAL.Time.weekOneStarts = function weekOneStarts(aYear, aWeekStart) {
                var t = ICAL.Time.fromData({
                    year: aYear,
                    month: 1,
                    day: 1,
                    isDate: true
                });

                var dow = t.dayOfWeek();
                var wkst = aWeekStart || ICAL.Time.DEFAULT_WEEK_START;
                if (dow > ICAL.Time.THURSDAY) {
                    t.day += 7;
                }
                if (wkst > ICAL.Time.THURSDAY) {
                    t.day -= 7;
                }

                t.day -= dow - wkst;

                return t;
            };

            /**
             * Get the dominical letter for the given year. Letters range from A - G for
             * common years, and AG to GF for leap years.
             *
             * @param {Number} yr           The year to retrieve the letter for
             * @return {String}             The dominical letter.
             */
            ICAL.Time.getDominicalLetter = function(yr) {
                var LTRS = "GFEDCBA";
                var dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;
                var isLeap = ICAL.Time.isLeapYear(yr);
                if (isLeap) {
                    return LTRS[(dom + 6) % 7] + LTRS[dom];
                } else {
                    return LTRS[dom];
                }
            };

            /**
             * January 1st, 1970 as an ICAL.Time.
             * @type {ICAL.Time}
             * @constant
             * @instance
             */
            ICAL.Time.epochTime = ICAL.Time.fromData({
                year: 1970,
                month: 1,
                day: 1,
                hour: 0,
                minute: 0,
                second: 0,
                isDate: false,
                timezone: "Z"
            });

            ICAL.Time._cmp_attr = function _cmp_attr(a, b, attr) {
                if (a[attr] > b[attr]) return 1;
                if (a[attr] < b[attr]) return -1;
                return 0;
            };

            /**
             * The days that have passed in the year after a given month. The array has
             * two members, one being an array of passed days for non-leap years, the
             * other analog for leap years.
             * @example
             * var isLeapYear = ICAL.Time.isLeapYear(year);
             * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];
             * @type {Array.<Array.<Number>>}
             */
            ICAL.Time.daysInYearPassedMonth = [
                [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],
                [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]
            ];

            /**
             * The weekday, 1 = SUNDAY, 7 = SATURDAY. Access via
             * ICAL.Time.MONDAY, ICAL.Time.TUESDAY, ...
             *
             * @typedef {Number} weekDay
             * @memberof ICAL.Time
             */

            ICAL.Time.SUNDAY = 1;
            ICAL.Time.MONDAY = 2;
            ICAL.Time.TUESDAY = 3;
            ICAL.Time.WEDNESDAY = 4;
            ICAL.Time.THURSDAY = 5;
            ICAL.Time.FRIDAY = 6;
            ICAL.Time.SATURDAY = 7;

            /**
             * The default weekday for the WKST part.
             * @constant
             * @default ICAL.Time.MONDAY
             */
            ICAL.Time.DEFAULT_WEEK_START = ICAL.Time.MONDAY;
        })();
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2015 */



        (function() {

            /**
             * Describes a vCard time, which has slight differences to the ICAL.Time.
             * Properties can be null if not specified, for example for dates with
             * reduced accuracy or truncation.
             *
             * Note that currently not all methods are correctly re-implemented for
             * VCardTime. For example, comparison will have undefined results when some
             * members are null.
             *
             * Also, normalization is not yet implemented for this class!
             *
             * @alias ICAL.VCardTime
             * @class
             * @extends {ICAL.Time}
             * @param {Object} data                           The data for the time instance
             * @param {Number=} data.year                     The year for this date
             * @param {Number=} data.month                    The month for this date
             * @param {Number=} data.day                      The day for this date
             * @param {Number=} data.hour                     The hour for this date
             * @param {Number=} data.minute                   The minute for this date
             * @param {Number=} data.second                   The second for this date
             * @param {ICAL.Timezone|ICAL.UtcOffset} zone     The timezone to use
             * @param {String} icaltype                       The type for this date/time object
             */
            ICAL.VCardTime = function(data, zone, icaltype) {
                this.wrappedJSObject = this;
                var time = this._time = Object.create(null);

                time.year = null;
                time.month = null;
                time.day = null;
                time.hour = null;
                time.minute = null;
                time.second = null;

                this.icaltype = icaltype || "date-and-or-time";

                this.fromData(data, zone);
            };
            ICAL.helpers.inherits(ICAL.Time, ICAL.VCardTime, /** @lends ICAL.VCardTime */ {

                /**
                 * The class identifier.
                 * @constant
                 * @type {String}
                 * @default "vcardtime"
                 */
                icalclass: "vcardtime",

                /**
                 * The type name, to be used in the jCal object.
                 * @type {String}
                 * @default "date-and-or-time"
                 */
                icaltype: "date-and-or-time",

                /**
                 * The timezone. This can either be floating, UTC, or an instance of
                 * ICAL.UtcOffset.
                 * @type {ICAL.Timezone|ICAL.UtcOFfset}
                 */
                zone: null,

                /**
                 * Returns a clone of the vcard date/time object.
                 *
                 * @return {ICAL.VCardTime}     The cloned object
                 */
                clone: function() {
                    return new ICAL.VCardTime(this._time, this.zone, this.icaltype);
                },

                _normalize: function() {
                    return this;
                },

                /**
                 * @inheritdoc
                 */
                utcOffset: function() {
                    if (this.zone instanceof ICAL.UtcOffset) {
                        return this.zone.toSeconds();
                    } else {
                        return ICAL.Time.prototype.utcOffset.apply(this, arguments);
                    }
                },

                /**
                 * Returns an RFC 6350 compliant representation of this object.
                 *
                 * @return {String}         vcard date/time string
                 */
                toICALString: function() {
                    return ICAL.design.vcard.value[this.icaltype].toICAL(this.toString());
                },

                /**
                 * The string representation of this date/time, in jCard form
                 * (including : and - separators).
                 * @return {String}
                 */
                toString: function toString() {
                    var p2 = ICAL.helpers.pad2;
                    var y = this.year,
                        m = this.month,
                        d = this.day;
                    var h = this.hour,
                        mm = this.minute,
                        s = this.second;

                    var hasYear = y !== null,
                        hasMonth = m !== null,
                        hasDay = d !== null;
                    var hasHour = h !== null,
                        hasMinute = mm !== null,
                        hasSecond = s !== null;

                    var datepart = (hasYear ? p2(y) + (hasMonth || hasDay ? '-' : '') : (hasMonth || hasDay ? '--' : '')) +
                        (hasMonth ? p2(m) : '') +
                        (hasDay ? '-' + p2(d) : '');
                    var timepart = (hasHour ? p2(h) : '-') + (hasHour && hasMinute ? ':' : '') +
                        (hasMinute ? p2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') +
                        (hasMinute && hasSecond ? ':' : '') +
                        (hasSecond ? p2(s) : '');

                    var zone;
                    if (this.zone === ICAL.Timezone.utcTimezone) {
                        zone = 'Z';
                    } else if (this.zone instanceof ICAL.UtcOffset) {
                        zone = this.zone.toString();
                    } else if (this.zone === ICAL.Timezone.localTimezone) {
                        zone = '';
                    } else if (this.zone instanceof ICAL.Timezone) {
                        var offset = ICAL.UtcOffset.fromSeconds(this.zone.utcOffset(this));
                        zone = offset.toString();
                    } else {
                        zone = '';
                    }

                    switch (this.icaltype) {
                        case "time":
                            return timepart + zone;
                        case "date-and-or-time":
                        case "date-time":
                            return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);
                        case "date":
                            return datepart;
                    }
                    return null;
                }
            });

            /**
             * Returns a new ICAL.VCardTime instance from a date and/or time string.
             *
             * @param {String} aValue     The string to create from
             * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time
             * @return {ICAL.VCardTime}   The date/time instance
             */
            ICAL.VCardTime.fromDateAndOrTimeString = function(aValue, aIcalType) {
                function part(v, s, e) {
                    return v ? ICAL.helpers.strictParseInt(v.substr(s, e)) : null;
                }
                var parts = aValue.split('T');
                var dt = parts[0],
                    tmz = parts[1];
                var splitzone = tmz ? ICAL.design.vcard.value.time._splitZone(tmz) : [];
                var zone = splitzone[0],
                    tm = splitzone[1];

                var stoi = ICAL.helpers.strictParseInt;
                var dtlen = dt ? dt.length : 0;
                var tmlen = tm ? tm.length : 0;

                var hasDashDate = dt && dt[0] == '-' && dt[1] == '-';
                var hasDashTime = tm && tm[0] == '-';

                var o = {
                    year: hasDashDate ? null : part(dt, 0, 4),
                    month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,
                    day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,

                    hour: hasDashTime ? null : part(tm, 0, 2),
                    minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,
                    second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null
                };

                if (zone == 'Z') {
                    zone = ICAL.Timezone.utcTimezone;
                } else if (zone && zone[3] == ':') {
                    zone = ICAL.UtcOffset.fromString(zone);
                } else {
                    zone = null;
                }

                return new ICAL.VCardTime(o, zone, aIcalType);
            };
        })();
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */



        (function() {
            var DOW_MAP = {
                SU: ICAL.Time.SUNDAY,
                MO: ICAL.Time.MONDAY,
                TU: ICAL.Time.TUESDAY,
                WE: ICAL.Time.WEDNESDAY,
                TH: ICAL.Time.THURSDAY,
                FR: ICAL.Time.FRIDAY,
                SA: ICAL.Time.SATURDAY
            };

            var REVERSE_DOW_MAP = {};
            for (var key in DOW_MAP) {
                /* istanbul ignore else */
                if (DOW_MAP.hasOwnProperty(key)) {
                    REVERSE_DOW_MAP[DOW_MAP[key]] = key;
                }
            }

            var COPY_PARTS = ["BYSECOND", "BYMINUTE", "BYHOUR", "BYDAY",
                "BYMONTHDAY", "BYYEARDAY", "BYWEEKNO",
                "BYMONTH", "BYSETPOS"
            ];

            /**
             * @classdesc
             * This class represents the "recur" value type, with various calculation
             * and manipulation methods.
             *
             * @class
             * @alias ICAL.Recur
             * @param {Object} data                       An object with members of the recurrence
             * @param {ICAL.Recur.frequencyValues} freq   The frequency value
             * @param {Number=} data.interval             The INTERVAL value
             * @param {ICAL.Time.weekDay=} data.wkst      The week start value
             * @param {ICAL.Time=} data.until             The end of the recurrence set
             * @param {Number=} data.count                The number of occurrences
             * @param {Array.<Number>=} data.bysecond     The seconds for the BYSECOND part
             * @param {Array.<Number>=} data.byminute     The minutes for the BYMINUTE part
             * @param {Array.<Number>=} data.byhour       The hours for the BYHOUR part
             * @param {Array.<String>=} data.byday        The BYDAY values
             * @param {Array.<Number>=} data.bymonthday   The days for the BYMONTHDAY part
             * @param {Array.<Number>=} data.byyearday    The days for the BYYEARDAY part
             * @param {Array.<Number>=} data.byweekno     The weeks for the BYWEEKNO part
             * @param {Array.<Number>=} data.bymonth      The month for the BYMONTH part
             * @param {Array.<Number>=} data.bysetpos     The positionals for the BYSETPOS part
             */
            ICAL.Recur = function icalrecur(data) {
                this.wrappedJSObject = this;
                this.parts = {};

                if (data && typeof(data) === 'object') {
                    this.fromData(data);
                }
            };

            ICAL.Recur.prototype = {
                /**
                 * An object holding the BY-parts of the recurrence rule
                 * @type {Object}
                 */
                parts: null,

                /**
                 * The interval value for the recurrence rule.
                 * @type {Number}
                 */
                interval: 1,

                /**
                 * The week start day
                 *
                 * @type {ICAL.Time.weekDay}
                 * @default ICAL.Time.MONDAY
                 */
                wkst: ICAL.Time.MONDAY,

                /**
                 * The end of the recurrence
                 * @type {?ICAL.Time}
                 */
                until: null,

                /**
                 * The maximum number of occurrences
                 * @type {?Number}
                 */
                count: null,

                /**
                 * The frequency value.
                 * @type {ICAL.Recur.frequencyValues}
                 */
                freq: null,

                /**
                 * The class identifier.
                 * @constant
                 * @type {String}
                 * @default "icalrecur"
                 */
                icalclass: "icalrecur",

                /**
                 * The type name, to be used in the jCal object.
                 * @constant
                 * @type {String}
                 * @default "recur"
                 */
                icaltype: "recur",

                /**
                 * Create a new iterator for this recurrence rule. The passed start date
                 * must be the start date of the event, not the start of the range to
                 * search in.
                 *
                 * @example
                 * var recur = comp.getFirstPropertyValue('rrule');
                 * var dtstart = comp.getFirstPropertyValue('dtstart');
                 * var iter = recur.iterator(dtstart);
                 * for (var next = iter.next(); next; next = iter.next()) {
                 *   if (next.compare(rangeStart) < 0) {
                 *     continue;
                 *   }
                 *   console.log(next.toString());
                 * }
                 *
                 * @param {ICAL.Time} aStart        The item's start date
                 * @return {ICAL.RecurIterator}     The recurrence iterator
                 */
                iterator: function(aStart) {
                    return new ICAL.RecurIterator({
                        rule: this,
                        dtstart: aStart
                    });
                },

                /**
                 * Returns a clone of the recurrence object.
                 *
                 * @return {ICAL.Recur}      The cloned object
                 */
                clone: function clone() {
                    return new ICAL.Recur(this.toJSON());
                },

                /**
                 * Checks if the current rule is finite, i.e. has a count or until part.
                 *
                 * @return {Boolean}        True, if the rule is finite
                 */
                isFinite: function isfinite() {
                    return !!(this.count || this.until);
                },

                /**
                 * Checks if the current rule has a count part, and not limited by an until
                 * part.
                 *
                 * @return {Boolean}        True, if the rule is by count
                 */
                isByCount: function isbycount() {
                    return !!(this.count && !this.until);
                },

                /**
                 * Adds a component (part) to the recurrence rule. This is not a component
                 * in the sense of {@link ICAL.Component}, but a part of the recurrence
                 * rule, i.e. BYMONTH.
                 *
                 * @param {String} aType            The name of the component part
                 * @param {Array|String} aValue     The component value
                 */
                addComponent: function addPart(aType, aValue) {
                    var ucname = aType.toUpperCase();
                    if (ucname in this.parts) {
                        this.parts[ucname].push(aValue);
                    } else {
                        this.parts[ucname] = [aValue];
                    }
                },

                /**
                 * Sets the component value for the given by-part.
                 *
                 * @param {String} aType        The component part name
                 * @param {Array} aValues       The component values
                 */
                setComponent: function setComponent(aType, aValues) {
                    this.parts[aType.toUpperCase()] = aValues.slice();
                },

                /**
                 * Gets (a copy) of the requested component value.
                 *
                 * @param {String} aType        The component part name
                 * @return {Array}              The component part value
                 */
                getComponent: function getComponent(aType) {
                    var ucname = aType.toUpperCase();
                    return (ucname in this.parts ? this.parts[ucname].slice() : []);
                },

                /**
                 * Retrieves the next occurrence after the given recurrence id. See the
                 * guide on {@tutorial terminology} for more details.
                 *
                 * NOTE: Currently, this method iterates all occurrences from the start
                 * date. It should not be called in a loop for performance reasons. If you
                 * would like to get more than one occurrence, you can iterate the
                 * occurrences manually, see the example on the
                 * {@link ICAL.Recur#iterator iterator} method.
                 *
                 * @param {ICAL.Time} aStartTime        The start of the event series
                 * @param {ICAL.Time} aRecurrenceId     The date of the last occurrence
                 * @return {ICAL.Time}                  The next occurrence after
                 */
                getNextOccurrence: function getNextOccurrence(aStartTime, aRecurrenceId) {
                    var iter = this.iterator(aStartTime);
                    var next, cdt;

                    do {
                        next = iter.next();
                    } while (next && next.compare(aRecurrenceId) <= 0);

                    if (next && aRecurrenceId.zone) {
                        next.zone = aRecurrenceId.zone;
                    }

                    return next;
                },

                /**
                 * Sets up the current instance using members from the passed data object.
                 *
                 * @param {Object} data                       An object with members of the recurrence
                 * @param {ICAL.Recur.frequencyValues} freq   The frequency value
                 * @param {Number=} data.interval             The INTERVAL value
                 * @param {ICAL.Time.weekDay=} data.wkst      The week start value
                 * @param {ICAL.Time=} data.until             The end of the recurrence set
                 * @param {Number=} data.count                The number of occurrences
                 * @param {Array.<Number>=} data.bysecond     The seconds for the BYSECOND part
                 * @param {Array.<Number>=} data.byminute     The minutes for the BYMINUTE part
                 * @param {Array.<Number>=} data.byhour       The hours for the BYHOUR part
                 * @param {Array.<String>=} data.byday        The BYDAY values
                 * @param {Array.<Number>=} data.bymonthday   The days for the BYMONTHDAY part
                 * @param {Array.<Number>=} data.byyearday    The days for the BYYEARDAY part
                 * @param {Array.<Number>=} data.byweekno     The weeks for the BYWEEKNO part
                 * @param {Array.<Number>=} data.bymonth      The month for the BYMONTH part
                 * @param {Array.<Number>=} data.bysetpos     The positionals for the BYSETPOS part
                 */
                fromData: function(data) {
                    for (var key in data) {
                        var uckey = key.toUpperCase();

                        if (uckey in partDesign) {
                            if (Array.isArray(data[key])) {
                                this.parts[uckey] = data[key];
                            } else {
                                this.parts[uckey] = [data[key]];
                            }
                        } else {
                            this[key] = data[key];
                        }
                    }

                    if (this.wkst && typeof this.wkst != "number") {
                        this.wkst = ICAL.Recur.icalDayToNumericDay(this.wkst);
                    }

                    if (this.until && !(this.until instanceof ICAL.Time)) {
                        this.until = ICAL.Time.fromString(this.until);
                    }
                },

                /**
                 * The jCal representation of this recurrence type.
                 * @return {Object}
                 */
                toJSON: function() {
                    var res = Object.create(null);
                    res.freq = this.freq;

                    if (this.count) {
                        res.count = this.count;
                    }

                    if (this.interval > 1) {
                        res.interval = this.interval;
                    }

                    for (var k in this.parts) {
                        /* istanbul ignore if */
                        if (!this.parts.hasOwnProperty(k)) {
                            continue;
                        }
                        var kparts = this.parts[k];
                        if (Array.isArray(kparts) && kparts.length == 1) {
                            res[k.toLowerCase()] = kparts[0];
                        } else {
                            res[k.toLowerCase()] = ICAL.helpers.clone(this.parts[k]);
                        }
                    }

                    if (this.until) {
                        res.until = this.until.toString();
                    }
                    if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {
                        res.wkst = ICAL.Recur.numericDayToIcalDay(this.wkst);
                    }
                    return res;
                },

                /**
                 * The string representation of this recurrence rule.
                 * @return {String}
                 */
                toString: function icalrecur_toString() {
                    // TODO retain order
                    var str = "FREQ=" + this.freq;
                    if (this.count) {
                        str += ";COUNT=" + this.count;
                    }
                    if (this.interval > 1) {
                        str += ";INTERVAL=" + this.interval;
                    }
                    for (var k in this.parts) {
                        /* istanbul ignore else */
                        if (this.parts.hasOwnProperty(k)) {
                            str += ";" + k + "=" + this.parts[k];
                        }
                    }
                    if (this.until) {
                        str += ';UNTIL=' + this.until.toString();
                    }
                    if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {
                        str += ';WKST=' + ICAL.Recur.numericDayToIcalDay(this.wkst);
                    }
                    return str;
                }
            };

            function parseNumericValue(type, min, max, value) {
                var result = value;

                if (value[0] === '+') {
                    result = value.substr(1);
                }

                result = ICAL.helpers.strictParseInt(result);

                if (min !== undefined && value < min) {
                    throw new Error(
                        type + ': invalid value "' + value + '" must be > ' + min
                    );
                }

                if (max !== undefined && value > max) {
                    throw new Error(
                        type + ': invalid value "' + value + '" must be < ' + min
                    );
                }

                return result;
            }

            /**
             * Convert an ical representation of a day (SU, MO, etc..)
             * into a numeric value of that day.
             *
             * @param {String} string     The iCalendar day name
             * @return {Number}           Numeric value of given day
             */
            ICAL.Recur.icalDayToNumericDay = function toNumericDay(string) {
                //XXX: this is here so we can deal
                //     with possibly invalid string values.

                return DOW_MAP[string];
            };

            /**
             * Convert a numeric day value into its ical representation (SU, MO, etc..)
             *
             * @param {Number} num        Numeric value of given day
             * @return {String}           The ICAL day value, e.g SU,MO,...
             */
            ICAL.Recur.numericDayToIcalDay = function toIcalDay(num) {
                //XXX: this is here so we can deal with possibly invalid number values.
                //     Also, this allows consistent mapping between day numbers and day
                //     names for external users.
                return REVERSE_DOW_MAP[num];
            };

            var VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;
            var VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;

            /**
             * Possible frequency values for the FREQ part
             * (YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY, SECONDLY)
             *
             * @typedef {String} frequencyValues
             * @memberof ICAL.Recur
             */

            var ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY',
                'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'
            ];

            var optionDesign = {
                FREQ: function(value, dict, fmtIcal) {
                    // yes this is actually equal or faster then regex.
                    // upside here is we can enumerate the valid values.
                    if (ALLOWED_FREQ.indexOf(value) !== -1) {
                        dict.freq = value;
                    } else {
                        throw new Error(
                            'invalid frequency "' + value + '" expected: "' +
                            ALLOWED_FREQ.join(', ') + '"'
                        );
                    }
                },

                COUNT: function(value, dict, fmtIcal) {
                    dict.count = ICAL.helpers.strictParseInt(value);
                },

                INTERVAL: function(value, dict, fmtIcal) {
                    dict.interval = ICAL.helpers.strictParseInt(value);
                    if (dict.interval < 1) {
                        // 0 or negative values are not allowed, some engines seem to generate
                        // it though. Assume 1 instead.
                        dict.interval = 1;
                    }
                },

                UNTIL: function(value, dict, fmtIcal) {
                    if (fmtIcal) {
                        if (value.length > 10) {
                            dict.until = ICAL.design.icalendar.value['date-time'].fromICAL(value);
                        } else {
                            dict.until = ICAL.design.icalendar.value.date.fromICAL(value);
                        }
                    } else {
                        dict.until = ICAL.Time.fromString(value);
                    }
                },

                WKST: function(value, dict, fmtIcal) {
                    if (VALID_DAY_NAMES.test(value)) {
                        dict.wkst = ICAL.Recur.icalDayToNumericDay(value);
                    } else {
                        throw new Error('invalid WKST value "' + value + '"');
                    }
                }
            };

            var partDesign = {
                BYSECOND: parseNumericValue.bind(this, 'BYSECOND', 0, 60),
                BYMINUTE: parseNumericValue.bind(this, 'BYMINUTE', 0, 59),
                BYHOUR: parseNumericValue.bind(this, 'BYHOUR', 0, 23),
                BYDAY: function(value) {
                    if (VALID_BYDAY_PART.test(value)) {
                        return value;
                    } else {
                        throw new Error('invalid BYDAY value "' + value + '"');
                    }
                },
                BYMONTHDAY: parseNumericValue.bind(this, 'BYMONTHDAY', -31, 31),
                BYYEARDAY: parseNumericValue.bind(this, 'BYYEARDAY', -366, 366),
                BYWEEKNO: parseNumericValue.bind(this, 'BYWEEKNO', -53, 53),
                BYMONTH: parseNumericValue.bind(this, 'BYMONTH', 0, 12),
                BYSETPOS: parseNumericValue.bind(this, 'BYSETPOS', -366, 366)
            };


            /**
             * Creates a new {@link ICAL.Recur} instance from the passed string.
             *
             * @param {String} string         The string to parse
             * @return {ICAL.Recur}           The created recurrence instance
             */
            ICAL.Recur.fromString = function(string) {
                var data = ICAL.Recur._stringToData(string, false);
                return new ICAL.Recur(data);
            };

            /**
             * Creates a new {@link ICAL.Recur} instance using members from the passed
             * data object.
             *
             * @param {Object} aData                      An object with members of the recurrence
             * @param {ICAL.Recur.frequencyValues} freq   The frequency value
             * @param {Number=} aData.interval            The INTERVAL value
             * @param {ICAL.Time.weekDay=} aData.wkst     The week start value
             * @param {ICAL.Time=} aData.until            The end of the recurrence set
             * @param {Number=} aData.count               The number of occurrences
             * @param {Array.<Number>=} aData.bysecond    The seconds for the BYSECOND part
             * @param {Array.<Number>=} aData.byminute    The minutes for the BYMINUTE part
             * @param {Array.<Number>=} aData.byhour      The hours for the BYHOUR part
             * @param {Array.<String>=} aData.byday       The BYDAY values
             * @param {Array.<Number>=} aData.bymonthday  The days for the BYMONTHDAY part
             * @param {Array.<Number>=} aData.byyearday   The days for the BYYEARDAY part
             * @param {Array.<Number>=} aData.byweekno    The weeks for the BYWEEKNO part
             * @param {Array.<Number>=} aData.bymonth     The month for the BYMONTH part
             * @param {Array.<Number>=} aData.bysetpos    The positionals for the BYSETPOS part
             */
            ICAL.Recur.fromData = function(aData) {
                return new ICAL.Recur(aData);
            };

            /**
             * Converts a recurrence string to a data object, suitable for the fromData
             * method.
             *
             * @param {String} string     The string to parse
             * @param {Boolean} fmtIcal   If true, the string is considered to be an
             *                              iCalendar string
             * @return {ICAL.Recur}       The recurrence instance
             */
            ICAL.Recur._stringToData = function(string, fmtIcal) {
                var dict = Object.create(null);

                // split is slower in FF but fast enough.
                // v8 however this is faster then manual split?
                var values = string.split(';');
                var len = values.length;

                for (var i = 0; i < len; i++) {
                    var parts = values[i].split('=');
                    var ucname = parts[0].toUpperCase();
                    var lcname = parts[0].toLowerCase();
                    var name = (fmtIcal ? lcname : ucname);
                    var value = parts[1];

                    if (ucname in partDesign) {
                        var partArr = value.split(',');
                        var partArrIdx = 0;
                        var partArrLen = partArr.length;

                        for (; partArrIdx < partArrLen; partArrIdx++) {
                            partArr[partArrIdx] = partDesign[ucname](partArr[partArrIdx]);
                        }
                        dict[name] = (partArr.length == 1 ? partArr[0] : partArr);
                    } else if (ucname in optionDesign) {
                        optionDesign[ucname](value, dict, fmtIcal);
                    } else {
                        // Don't swallow unknown values. Just set them as they are.
                        dict[lcname] = value;
                    }
                }

                return dict;
            };
        })();
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.RecurIterator = (function() {

            /**
             * @classdesc
             * An iterator for a single recurrence rule. This class usually doesn't have
             * to be instanciated directly, the convenience method
             * {@link ICAL.Recur#iterator} can be used.
             *
             * @description
             * The options object may contain additional members when resuming iteration from a previous run
             *
             * @description
             * The options object may contain additional members when resuming iteration
             * from a previous run.
             *
             * @class
             * @alias ICAL.RecurIterator
             * @param {Object} options                The iterator options
             * @param {ICAL.Recur} options.rule       The rule to iterate.
             * @param {ICAL.Time} options.dtstart     The start date of the event.
             * @param {Boolean=} options.initialized  When true, assume that options are
             *        from a previously constructed iterator. Initialization will not be
             *        repeated.
             */
            function icalrecur_iterator(options) {
                this.fromData(options);
            }

            icalrecur_iterator.prototype = {

                /**
                 * True when iteration is finished.
                 * @type {Boolean}
                 */
                completed: false,

                /**
                 * The rule that is being iterated
                 * @type {ICAL.Recur}
                 */
                rule: null,

                /**
                 * The start date of the event being iterated.
                 * @type {ICAL.Time}
                 */
                dtstart: null,

                /**
                 * The last occurrence that was returned from the
                 * {@link ICAL.RecurIterator#next} method.
                 * @type {ICAL.Time}
                 */
                last: null,

                /**
                 * The sequence number from the occurrence
                 * @type {Number}
                 */
                occurrence_number: 0,

                /**
                 * The indices used for the {@link ICAL.RecurIterator#by_data} object.
                 * @type {Object}
                 * @private
                 */
                by_indices: null,

                /**
                 * If true, the iterator has already been initialized
                 * @type {Boolean}
                 * @private
                 */
                initialized: false,

                /**
                 * The initializd by-data.
                 * @type {Object}
                 * @private
                 */
                by_data: null,

                /**
                 * The expanded yeardays
                 * @type {Array}
                 * @private
                 */
                days: null,

                /**
                 * The index in the {@link ICAL.RecurIterator#days} array.
                 * @type {Number}
                 * @private
                 */
                days_index: 0,

                /**
                 * Initialize the recurrence iterator from the passed data object. This
                 * method is usually not called directly, you can initialize the iterator
                 * through the constructor.
                 *
                 * @param {Object} options                The iterator options
                 * @param {ICAL.Recur} options.rule       The rule to iterate.
                 * @param {ICAL.Time} options.dtstart     The start date of the event.
                 * @param {Boolean=} options.initialized  When true, assume that options are
                 *        from a previously constructed iterator. Initialization will not be
                 *        repeated.
                 */
                fromData: function(options) {
                    this.rule = ICAL.helpers.formatClassType(options.rule, ICAL.Recur);

                    if (!this.rule) {
                        throw new Error('iterator requires a (ICAL.Recur) rule');
                    }

                    this.dtstart = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);

                    if (!this.dtstart) {
                        throw new Error('iterator requires a (ICAL.Time) dtstart');
                    }

                    if (options.by_data) {
                        this.by_data = options.by_data;
                    } else {
                        this.by_data = ICAL.helpers.clone(this.rule.parts, true);
                    }

                    if (options.occurrence_number)
                        this.occurrence_number = options.occurrence_number;

                    this.days = options.days || [];
                    if (options.last) {
                        this.last = ICAL.helpers.formatClassType(options.last, ICAL.Time);
                    }

                    this.by_indices = options.by_indices;

                    if (!this.by_indices) {
                        this.by_indices = {
                            "BYSECOND": 0,
                            "BYMINUTE": 0,
                            "BYHOUR": 0,
                            "BYDAY": 0,
                            "BYMONTH": 0,
                            "BYWEEKNO": 0,
                            "BYMONTHDAY": 0
                        };
                    }

                    this.initialized = options.initialized || false;

                    if (!this.initialized) {
                        this.init();
                    }
                },

                /**
                 * Intialize the iterator
                 * @private
                 */
                init: function icalrecur_iterator_init() {
                    this.initialized = true;
                    this.last = this.dtstart.clone();
                    var parts = this.by_data;

                    if ("BYDAY" in parts) {
                        // libical does this earlier when the rule is loaded, but we postpone to
                        // now so we can preserve the original order.
                        this.sort_byday_rules(parts.BYDAY, this.rule.wkst);
                    }

                    // If the BYYEARDAY appares, no other date rule part may appear
                    if ("BYYEARDAY" in parts) {
                        if ("BYMONTH" in parts || "BYWEEKNO" in parts ||
                            "BYMONTHDAY" in parts || "BYDAY" in parts) {
                            throw new Error("Invalid BYYEARDAY rule");
                        }
                    }

                    // BYWEEKNO and BYMONTHDAY rule parts may not both appear
                    if ("BYWEEKNO" in parts && "BYMONTHDAY" in parts) {
                        throw new Error("BYWEEKNO does not fit to BYMONTHDAY");
                    }

                    // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor
                    // BYWEEKNO may appear.
                    if (this.rule.freq == "MONTHLY" &&
                        ("BYYEARDAY" in parts || "BYWEEKNO" in parts)) {
                        throw new Error("For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear");
                    }

                    // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor
                    // BYYEARDAY may appear.
                    if (this.rule.freq == "WEEKLY" &&
                        ("BYYEARDAY" in parts || "BYMONTHDAY" in parts)) {
                        throw new Error("For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear");
                    }

                    // BYYEARDAY may only appear in YEARLY rules
                    if (this.rule.freq != "YEARLY" && "BYYEARDAY" in parts) {
                        throw new Error("BYYEARDAY may only appear in YEARLY rules");
                    }

                    this.last.second = this.setup_defaults("BYSECOND", "SECONDLY", this.dtstart.second);
                    this.last.minute = this.setup_defaults("BYMINUTE", "MINUTELY", this.dtstart.minute);
                    this.last.hour = this.setup_defaults("BYHOUR", "HOURLY", this.dtstart.hour);
                    this.last.day = this.setup_defaults("BYMONTHDAY", "DAILY", this.dtstart.day);
                    this.last.month = this.setup_defaults("BYMONTH", "MONTHLY", this.dtstart.month);

                    if (this.rule.freq == "WEEKLY") {
                        if ("BYDAY" in parts) {
                            var bydayParts = this.ruleDayOfWeek(parts.BYDAY[0]);
                            var pos = bydayParts[0];
                            var dow = bydayParts[1];
                            var wkdy = dow - this.last.dayOfWeek();
                            if ((this.last.dayOfWeek() < dow && wkdy >= 0) || wkdy < 0) {
                                // Initial time is after first day of BYDAY data
                                this.last.day += wkdy;
                            }
                        } else {
                            var dayName = ICAL.Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());
                            parts.BYDAY = [dayName];
                        }
                    }

                    if (this.rule.freq == "YEARLY") {
                        for (;;) {
                            this.expand_year_days(this.last.year);
                            if (this.days.length > 0) {
                                break;
                            }
                            this.increment_year(this.rule.interval);
                        }

                        this._nextByYearDay();
                    }

                    if (this.rule.freq == "MONTHLY" && this.has_by_data("BYDAY")) {
                        var tempLast = null;
                        var initLast = this.last.clone();
                        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);

                        // Check every weekday in BYDAY with relative dow and pos.
                        for (var i in this.by_data.BYDAY) {
                            /* istanbul ignore if */
                            if (!this.by_data.BYDAY.hasOwnProperty(i)) {
                                continue;
                            }
                            this.last = initLast.clone();
                            var bydayParts = this.ruleDayOfWeek(this.by_data.BYDAY[i]);
                            var pos = bydayParts[0];
                            var dow = bydayParts[1];
                            var dayOfMonth = this.last.nthWeekDay(dow, pos);

                            // If |pos| >= 6, the byday is invalid for a monthly rule.
                            if (pos >= 6 || pos <= -6) {
                                throw new Error("Malformed values in BYDAY part");
                            }

                            // If a Byday with pos=+/-5 is not in the current month it
                            // must be searched in the next months.
                            if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {
                                // Skip if we have already found a "last" in this month.
                                if (tempLast && tempLast.month == initLast.month) {
                                    continue;
                                }
                                while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {
                                    this.increment_month();
                                    daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                                    dayOfMonth = this.last.nthWeekDay(dow, pos);
                                }
                            }

                            this.last.day = dayOfMonth;
                            if (!tempLast || this.last.compare(tempLast) < 0) {
                                tempLast = this.last.clone();
                            }
                        }
                        this.last = tempLast.clone();

                        //XXX: This feels like a hack, but we need to initialize
                        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles
                        //     this case. It accepts a special flag which will avoid incrementing
                        //     the initial value without the flag days that match the start time
                        //     would be missed.
                        if (this.has_by_data('BYMONTHDAY')) {
                            this._byDayAndMonthDay(true);
                        }

                        if (this.last.day > daysInMonth || this.last.day == 0) {
                            throw new Error("Malformed values in BYDAY part");
                        }

                    } else if (this.has_by_data("BYMONTHDAY")) {
                        if (this.last.day < 0) {
                            var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                            this.last.day = daysInMonth + this.last.day + 1;
                        }
                    }

                },

                /**
                 * Retrieve the next occurrence from the iterator.
                 * @return {ICAL.Time}
                 */
                next: function icalrecur_iterator_next() {
                    var before = (this.last ? this.last.clone() : null);

                    if ((this.rule.count && this.occurrence_number >= this.rule.count) ||
                        (this.rule.until && this.last.compare(this.rule.until) > 0)) {

                        //XXX: right now this is just a flag and has no impact
                        //     we can simplify the above case to check for completed later.
                        this.completed = true;

                        return null;
                    }

                    if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {
                        // First of all, give the instance that was initialized
                        this.occurrence_number++;
                        return this.last;
                    }


                    var valid;
                    do {
                        valid = 1;

                        switch (this.rule.freq) {
                            case "SECONDLY":
                                this.next_second();
                                break;
                            case "MINUTELY":
                                this.next_minute();
                                break;
                            case "HOURLY":
                                this.next_hour();
                                break;
                            case "DAILY":
                                this.next_day();
                                break;
                            case "WEEKLY":
                                this.next_week();
                                break;
                            case "MONTHLY":
                                valid = this.next_month();
                                break;
                            case "YEARLY":
                                this.next_year();
                                break;

                            default:
                                return null;
                        }
                    } while (!this.check_contracting_rules() ||
                        this.last.compare(this.dtstart) < 0 ||
                        !valid);

                    // TODO is this valid?
                    if (this.last.compare(before) == 0) {
                        throw new Error("Same occurrence found twice, protecting " +
                            "you from death by recursion");
                    }

                    if (this.rule.until && this.last.compare(this.rule.until) > 0) {
                        this.completed = true;
                        return null;
                    } else {
                        this.occurrence_number++;
                        return this.last;
                    }
                },

                next_second: function next_second() {
                    return this.next_generic("BYSECOND", "SECONDLY", "second", "minute");
                },

                increment_second: function increment_second(inc) {
                    return this.increment_generic(inc, "second", 60, "minute");
                },

                next_minute: function next_minute() {
                    return this.next_generic("BYMINUTE", "MINUTELY",
                        "minute", "hour", "next_second");
                },

                increment_minute: function increment_minute(inc) {
                    return this.increment_generic(inc, "minute", 60, "hour");
                },

                next_hour: function next_hour() {
                    return this.next_generic("BYHOUR", "HOURLY", "hour",
                        "monthday", "next_minute");
                },

                increment_hour: function increment_hour(inc) {
                    this.increment_generic(inc, "hour", 24, "monthday");
                },

                next_day: function next_day() {
                    var has_by_day = ("BYDAY" in this.by_data);
                    var this_freq = (this.rule.freq == "DAILY");

                    if (this.next_hour() == 0) {
                        return 0;
                    }

                    if (this_freq) {
                        this.increment_monthday(this.rule.interval);
                    } else {
                        this.increment_monthday(1);
                    }

                    return 0;
                },

                next_week: function next_week() {
                    var end_of_data = 0;

                    if (this.next_weekday_by_week() == 0) {
                        return end_of_data;
                    }

                    if (this.has_by_data("BYWEEKNO")) {
                        var idx = ++this.by_indices.BYWEEKNO;

                        if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {
                            this.by_indices.BYWEEKNO = 0;
                            end_of_data = 1;
                        }

                        // HACK should be first month of the year
                        this.last.month = 1;
                        this.last.day = 1;

                        var week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];

                        this.last.day += 7 * week_no;

                        if (end_of_data) {
                            this.increment_year(1);
                        }
                    } else {
                        // Jump to the next week
                        this.increment_monthday(7 * this.rule.interval);
                    }

                    return end_of_data;
                },

                /**
                 * Normalize each by day rule for a given year/month.
                 * Takes into account ordering and negative rules
                 *
                 * @private
                 * @param {Number} year         Current year.
                 * @param {Number} month        Current month.
                 * @param {Array}  rules        Array of rules.
                 *
                 * @return {Array} sorted and normalized rules.
                 *                 Negative rules will be expanded to their
                 *                 correct positive values for easier processing.
                 */
                normalizeByMonthDayRules: function(year, month, rules) {
                    var daysInMonth = ICAL.Time.daysInMonth(month, year);

                    // XXX: This is probably bad for performance to allocate
                    //      a new array for each month we scan, if possible
                    //      we should try to optimize this...
                    var newRules = [];

                    var ruleIdx = 0;
                    var len = rules.length;
                    var rule;

                    for (; ruleIdx < len; ruleIdx++) {
                        rule = rules[ruleIdx];

                        // if this rule falls outside of given
                        // month discard it.
                        if (Math.abs(rule) > daysInMonth) {
                            continue;
                        }

                        // negative case
                        if (rule < 0) {
                            // we add (not subtract its a negative number)
                            // one from the rule because 1 === last day of month
                            rule = daysInMonth + (rule + 1);
                        } else if (rule === 0) {
                            // skip zero its invalid.
                            continue;
                        }

                        // only add unique items...
                        if (newRules.indexOf(rule) === -1) {
                            newRules.push(rule);
                        }

                    }

                    // unique and sort
                    return newRules.sort(function(a, b) {
                        return a - b;
                    });
                },

                /**
                 * NOTES:
                 * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)
                 * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when
                 * both conditions match a given date (this.last.day) iteration stops.
                 *
                 * @private
                 * @param {Boolean=} isInit     When given true will not increment the
                 *                                current day (this.last).
                 */
                _byDayAndMonthDay: function(isInit) {
                    var byMonthDay; // setup in initMonth
                    var byDay = this.by_data.BYDAY;

                    var date;
                    var dateIdx = 0;
                    var dateLen; // setup in initMonth
                    var dayLen = byDay.length;

                    // we are not valid by default
                    var dataIsValid = 0;

                    var daysInMonth;
                    var self = this;
                    // we need a copy of this, because a DateTime gets normalized
                    // automatically if the day is out of range. At some points we
                    // set the last day to 0 to start counting.
                    var lastDay = this.last.day;

                    function initMonth() {
                        daysInMonth = ICAL.Time.daysInMonth(
                            self.last.month, self.last.year
                        );

                        byMonthDay = self.normalizeByMonthDayRules(
                            self.last.year,
                            self.last.month,
                            self.by_data.BYMONTHDAY
                        );

                        dateLen = byMonthDay.length;

                        // For the case of more than one occurrence in one month
                        // we have to be sure to start searching after the last
                        // found date or at the last BYMONTHDAY, unless we are
                        // initializing the iterator because in this case we have
                        // to consider the last found date too.
                        while (byMonthDay[dateIdx] <= lastDay &&
                            !(isInit && byMonthDay[dateIdx] == lastDay) &&
                            dateIdx < dateLen - 1) {
                            dateIdx++;
                        }
                    }

                    function nextMonth() {
                        // since the day is incremented at the start
                        // of the loop below, we need to start at 0
                        lastDay = 0;
                        self.increment_month();
                        dateIdx = 0;
                        initMonth();
                    }

                    initMonth();

                    // should come after initMonth
                    if (isInit) {
                        lastDay -= 1;
                    }

                    // Use a counter to avoid an infinite loop with malformed rules.
                    // Stop checking after 4 years so we consider also a leap year.
                    var monthsCounter = 48;

                    while (!dataIsValid && monthsCounter) {
                        monthsCounter--;
                        // increment the current date. This is really
                        // important otherwise we may fall into the infinite
                        // loop trap. The initial date takes care of the case
                        // where the current date is the date we are looking
                        // for.
                        date = lastDay + 1;

                        if (date > daysInMonth) {
                            nextMonth();
                            continue;
                        }

                        // find next date
                        var next = byMonthDay[dateIdx++];

                        // this logic is dependant on the BYMONTHDAYS
                        // being in order (which is done by #normalizeByMonthDayRules)
                        if (next >= date) {
                            // if the next month day is in the future jump to it.
                            lastDay = next;
                        } else {
                            // in this case the 'next' monthday has past
                            // we must move to the month.
                            nextMonth();
                            continue;
                        }

                        // Now we can loop through the day rules to see
                        // if one matches the current month date.
                        for (var dayIdx = 0; dayIdx < dayLen; dayIdx++) {
                            var parts = this.ruleDayOfWeek(byDay[dayIdx]);
                            var pos = parts[0];
                            var dow = parts[1];

                            this.last.day = lastDay;
                            if (this.last.isNthWeekDay(dow, pos)) {
                                // when we find the valid one we can mark
                                // the conditions as met and break the loop.
                                // (Because we have this condition above
                                //  it will also break the parent loop).
                                dataIsValid = 1;
                                break;
                            }
                        }

                        // Its completely possible that the combination
                        // cannot be matched in the current month.
                        // When we reach the end of possible combinations
                        // in the current month we iterate to the next one.
                        // since dateIdx is incremented right after getting
                        // "next", we don't need dateLen -1 here.
                        if (!dataIsValid && dateIdx === dateLen) {
                            nextMonth();
                            continue;
                        }
                    }

                    if (monthsCounter <= 0) {
                        // Checked 4 years without finding a Byday that matches
                        // a Bymonthday. Maybe the rule is not correct.
                        throw new Error("Malformed values in BYDAY combined with BYMONTHDAY parts");
                    }


                    return dataIsValid;
                },

                next_month: function next_month() {
                    var this_freq = (this.rule.freq == "MONTHLY");
                    var data_valid = 1;

                    if (this.next_hour() == 0) {
                        return data_valid;
                    }

                    if (this.has_by_data("BYDAY") && this.has_by_data("BYMONTHDAY")) {
                        data_valid = this._byDayAndMonthDay();
                    } else if (this.has_by_data("BYDAY")) {
                        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                        var setpos = 0;
                        var setpos_total = 0;

                        if (this.has_by_data("BYSETPOS")) {
                            var last_day = this.last.day;
                            for (var day = 1; day <= daysInMonth; day++) {
                                this.last.day = day;
                                if (this.is_day_in_byday(this.last)) {
                                    setpos_total++;
                                    if (day <= last_day) {
                                        setpos++;
                                    }
                                }
                            }
                            this.last.day = last_day;
                        }

                        data_valid = 0;
                        for (var day = this.last.day + 1; day <= daysInMonth; day++) {
                            this.last.day = day;

                            if (this.is_day_in_byday(this.last)) {
                                if (!this.has_by_data("BYSETPOS") ||
                                    this.check_set_position(++setpos) ||
                                    this.check_set_position(setpos - setpos_total - 1)) {

                                    data_valid = 1;
                                    break;
                                }
                            }
                        }

                        if (day > daysInMonth) {
                            this.last.day = 1;
                            this.increment_month();

                            if (this.is_day_in_byday(this.last)) {
                                if (!this.has_by_data("BYSETPOS") || this.check_set_position(1)) {
                                    data_valid = 1;
                                }
                            } else {
                                data_valid = 0;
                            }
                        }
                    } else if (this.has_by_data("BYMONTHDAY")) {
                        this.by_indices.BYMONTHDAY++;

                        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {
                            this.by_indices.BYMONTHDAY = 0;
                            this.increment_month();
                        }

                        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                        var day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];

                        if (day < 0) {
                            day = daysInMonth + day + 1;
                        }

                        if (day > daysInMonth) {
                            this.last.day = 1;
                            data_valid = this.is_day_in_byday(this.last);
                        } else {
                            this.last.day = day;
                        }

                    } else {
                        this.increment_month();
                        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                        if (this.by_data.BYMONTHDAY[0] > daysInMonth) {
                            data_valid = 0;
                        } else {
                            this.last.day = this.by_data.BYMONTHDAY[0];
                        }
                    }

                    return data_valid;
                },

                next_weekday_by_week: function next_weekday_by_week() {
                    var end_of_data = 0;

                    if (this.next_hour() == 0) {
                        return end_of_data;
                    }

                    if (!this.has_by_data("BYDAY")) {
                        return 1;
                    }

                    for (;;) {
                        var tt = new ICAL.Time();
                        this.by_indices.BYDAY++;

                        if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {
                            this.by_indices.BYDAY = 0;
                            end_of_data = 1;
                        }

                        var coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];
                        var parts = this.ruleDayOfWeek(coded_day);
                        var dow = parts[1];

                        dow -= this.rule.wkst;

                        if (dow < 0) {
                            dow += 7;
                        }

                        tt.year = this.last.year;
                        tt.month = this.last.month;
                        tt.day = this.last.day;

                        var startOfWeek = tt.startDoyWeek(this.rule.wkst);

                        if (dow + startOfWeek < 1) {
                            // The selected date is in the previous year
                            if (!end_of_data) {
                                continue;
                            }
                        }

                        var next = ICAL.Time.fromDayOfYear(startOfWeek + dow,
                            this.last.year);

                        /**
                         * The normalization horrors below are due to
                         * the fact that when the year/month/day changes
                         * it can effect the other operations that come after.
                         */
                        this.last.year = next.year;
                        this.last.month = next.month;
                        this.last.day = next.day;

                        return end_of_data;
                    }
                },

                next_year: function next_year() {

                    if (this.next_hour() == 0) {
                        return 0;
                    }

                    if (++this.days_index == this.days.length) {
                        this.days_index = 0;
                        do {
                            this.increment_year(this.rule.interval);
                            this.expand_year_days(this.last.year);
                        } while (this.days.length == 0);
                    }

                    this._nextByYearDay();

                    return 1;
                },

                _nextByYearDay: function _nextByYearDay() {
                    var doy = this.days[this.days_index];
                    var year = this.last.year;
                    if (doy < 1) {
                        // Time.fromDayOfYear(doy, year) indexes relative to the
                        // start of the given year. That is different from the
                        // semantics of BYYEARDAY where negative indexes are an
                        // offset from the end of the given year.
                        doy += 1;
                        year += 1;
                    }
                    var next = ICAL.Time.fromDayOfYear(doy, year);
                    this.last.day = next.day;
                    this.last.month = next.month;
                },

                ruleDayOfWeek: function ruleDayOfWeek(dow) {
                    var matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);
                    if (matches) {
                        var pos = parseInt(matches[1] || 0, 10);
                        dow = ICAL.Recur.icalDayToNumericDay(matches[2]);
                        return [pos, dow];
                    } else {
                        return [0, 0];
                    }
                },

                next_generic: function next_generic(aRuleType, aInterval, aDateAttr,
                    aFollowingAttr, aPreviousIncr) {
                    var has_by_rule = (aRuleType in this.by_data);
                    var this_freq = (this.rule.freq == aInterval);
                    var end_of_data = 0;

                    if (aPreviousIncr && this[aPreviousIncr]() == 0) {
                        return end_of_data;
                    }

                    if (has_by_rule) {
                        this.by_indices[aRuleType]++;
                        var idx = this.by_indices[aRuleType];
                        var dta = this.by_data[aRuleType];

                        if (this.by_indices[aRuleType] == dta.length) {
                            this.by_indices[aRuleType] = 0;
                            end_of_data = 1;
                        }
                        this.last[aDateAttr] = dta[this.by_indices[aRuleType]];
                    } else if (this_freq) {
                        this["increment_" + aDateAttr](this.rule.interval);
                    }

                    if (has_by_rule && end_of_data && this_freq) {
                        this["increment_" + aFollowingAttr](1);
                    }

                    return end_of_data;
                },

                increment_monthday: function increment_monthday(inc) {
                    for (var i = 0; i < inc; i++) {
                        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                        this.last.day++;

                        if (this.last.day > daysInMonth) {
                            this.last.day -= daysInMonth;
                            this.increment_month();
                        }
                    }
                },

                increment_month: function increment_month() {
                    this.last.day = 1;
                    if (this.has_by_data("BYMONTH")) {
                        this.by_indices.BYMONTH++;

                        if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {
                            this.by_indices.BYMONTH = 0;
                            this.increment_year(1);
                        }

                        this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];
                    } else {
                        if (this.rule.freq == "MONTHLY") {
                            this.last.month += this.rule.interval;
                        } else {
                            this.last.month++;
                        }

                        this.last.month--;
                        var years = ICAL.helpers.trunc(this.last.month / 12);
                        this.last.month %= 12;
                        this.last.month++;

                        if (years != 0) {
                            this.increment_year(years);
                        }
                    }
                },

                increment_year: function increment_year(inc) {
                    this.last.year += inc;
                },

                increment_generic: function increment_generic(inc, aDateAttr,
                    aFactor, aNextIncrement) {
                    this.last[aDateAttr] += inc;
                    var nextunit = ICAL.helpers.trunc(this.last[aDateAttr] / aFactor);
                    this.last[aDateAttr] %= aFactor;
                    if (nextunit != 0) {
                        this["increment_" + aNextIncrement](nextunit);
                    }
                },

                has_by_data: function has_by_data(aRuleType) {
                    return (aRuleType in this.rule.parts);
                },

                expand_year_days: function expand_year_days(aYear) {
                    var t = new ICAL.Time();
                    this.days = [];

                    // We need our own copy with a few keys set
                    var parts = {};
                    var rules = ["BYDAY", "BYWEEKNO", "BYMONTHDAY", "BYMONTH", "BYYEARDAY"];
                    for (var p in rules) {
                        /* istanbul ignore else */
                        if (rules.hasOwnProperty(p)) {
                            var part = rules[p];
                            if (part in this.rule.parts) {
                                parts[part] = this.rule.parts[part];
                            }
                        }
                    }

                    if ("BYMONTH" in parts && "BYWEEKNO" in parts) {
                        var valid = 1;
                        var validWeeks = {};
                        t.year = aYear;
                        t.isDate = true;

                        for (var monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {
                            var month = this.by_data.BYMONTH[monthIdx];
                            t.month = month;
                            t.day = 1;
                            var first_week = t.weekNumber(this.rule.wkst);
                            t.day = ICAL.Time.daysInMonth(month, aYear);
                            var last_week = t.weekNumber(this.rule.wkst);
                            for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {
                                validWeeks[monthIdx] = 1;
                            }
                        }

                        for (var weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {
                            var weekno = this.by_data.BYWEEKNO[weekIdx];
                            if (weekno < 52) {
                                valid &= validWeeks[weekIdx];
                            } else {
                                valid = 0;
                            }
                        }

                        if (valid) {
                            delete parts.BYMONTH;
                        } else {
                            delete parts.BYWEEKNO;
                        }
                    }

                    var partCount = Object.keys(parts).length;

                    if (partCount == 0) {
                        var t1 = this.dtstart.clone();
                        t1.year = this.last.year;
                        this.days.push(t1.dayOfYear());
                    } else if (partCount == 1 && "BYMONTH" in parts) {
                        for (var monthkey in this.by_data.BYMONTH) {
                            /* istanbul ignore if */
                            if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {
                                continue;
                            }
                            var t2 = this.dtstart.clone();
                            t2.year = aYear;
                            t2.month = this.by_data.BYMONTH[monthkey];
                            t2.isDate = true;
                            this.days.push(t2.dayOfYear());
                        }
                    } else if (partCount == 1 && "BYMONTHDAY" in parts) {
                        for (var monthdaykey in this.by_data.BYMONTHDAY) {
                            /* istanbul ignore if */
                            if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {
                                continue;
                            }
                            var t3 = this.dtstart.clone();
                            var day_ = this.by_data.BYMONTHDAY[monthdaykey];
                            if (day_ < 0) {
                                var daysInMonth = ICAL.Time.daysInMonth(t3.month, aYear);
                                day_ = day_ + daysInMonth + 1;
                            }
                            t3.day = day_;
                            t3.year = aYear;
                            t3.isDate = true;
                            this.days.push(t3.dayOfYear());
                        }
                    } else if (partCount == 2 &&
                        "BYMONTHDAY" in parts &&
                        "BYMONTH" in parts) {
                        for (var monthkey in this.by_data.BYMONTH) {
                            /* istanbul ignore if */
                            if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {
                                continue;
                            }
                            var month_ = this.by_data.BYMONTH[monthkey];
                            var daysInMonth = ICAL.Time.daysInMonth(month_, aYear);
                            for (var monthdaykey in this.by_data.BYMONTHDAY) {
                                /* istanbul ignore if */
                                if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {
                                    continue;
                                }
                                var day_ = this.by_data.BYMONTHDAY[monthdaykey];
                                if (day_ < 0) {
                                    day_ = day_ + daysInMonth + 1;
                                }
                                t.day = day_;
                                t.month = month_;
                                t.year = aYear;
                                t.isDate = true;

                                this.days.push(t.dayOfYear());
                            }
                        }
                    } else if (partCount == 1 && "BYWEEKNO" in parts) {
                        // TODO unimplemented in libical
                    } else if (partCount == 2 &&
                        "BYWEEKNO" in parts &&
                        "BYMONTHDAY" in parts) {
                        // TODO unimplemented in libical
                    } else if (partCount == 1 && "BYDAY" in parts) {
                        this.days = this.days.concat(this.expand_by_day(aYear));
                    } else if (partCount == 2 && "BYDAY" in parts && "BYMONTH" in parts) {
                        for (var monthkey in this.by_data.BYMONTH) {
                            /* istanbul ignore if */
                            if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {
                                continue;
                            }
                            var month = this.by_data.BYMONTH[monthkey];
                            var daysInMonth = ICAL.Time.daysInMonth(month, aYear);

                            t.year = aYear;
                            t.month = this.by_data.BYMONTH[monthkey];
                            t.day = 1;
                            t.isDate = true;

                            var first_dow = t.dayOfWeek();
                            var doy_offset = t.dayOfYear() - 1;

                            t.day = daysInMonth;
                            var last_dow = t.dayOfWeek();

                            if (this.has_by_data("BYSETPOS")) {
                                var set_pos_counter = 0;
                                var by_month_day = [];
                                for (var day = 1; day <= daysInMonth; day++) {
                                    t.day = day;
                                    if (this.is_day_in_byday(t)) {
                                        by_month_day.push(day);
                                    }
                                }

                                for (var spIndex = 0; spIndex < by_month_day.length; spIndex++) {
                                    if (this.check_set_position(spIndex + 1) ||
                                        this.check_set_position(spIndex - by_month_day.length)) {
                                        this.days.push(doy_offset + by_month_day[spIndex]);
                                    }
                                }
                            } else {
                                for (var daycodedkey in this.by_data.BYDAY) {
                                    /* istanbul ignore if */
                                    if (!this.by_data.BYDAY.hasOwnProperty(daycodedkey)) {
                                        continue;
                                    }
                                    var coded_day = this.by_data.BYDAY[daycodedkey];
                                    var bydayParts = this.ruleDayOfWeek(coded_day);
                                    var pos = bydayParts[0];
                                    var dow = bydayParts[1];
                                    var month_day;

                                    var first_matching_day = ((dow + 7 - first_dow) % 7) + 1;
                                    var last_matching_day = daysInMonth - ((last_dow + 7 - dow) % 7);

                                    if (pos == 0) {
                                        for (var day = first_matching_day; day <= daysInMonth; day += 7) {
                                            this.days.push(doy_offset + day);
                                        }
                                    } else if (pos > 0) {
                                        month_day = first_matching_day + (pos - 1) * 7;

                                        if (month_day <= daysInMonth) {
                                            this.days.push(doy_offset + month_day);
                                        }
                                    } else {
                                        month_day = last_matching_day + (pos + 1) * 7;

                                        if (month_day > 0) {
                                            this.days.push(doy_offset + month_day);
                                        }
                                    }
                                }
                            }
                        }
                        // Return dates in order of occurrence (1,2,3,...) instead
                        // of by groups of weekdays (1,8,15,...,2,9,16,...).
                        this.days.sort(function(a, b) {
                            return a - b;
                        }); // Comparator function allows to sort numbers.
                    } else if (partCount == 2 && "BYDAY" in parts && "BYMONTHDAY" in parts) {
                        var expandedDays = this.expand_by_day(aYear);

                        for (var daykey in expandedDays) {
                            /* istanbul ignore if */
                            if (!expandedDays.hasOwnProperty(daykey)) {
                                continue;
                            }
                            var day = expandedDays[daykey];
                            var tt = ICAL.Time.fromDayOfYear(day, aYear);
                            if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {
                                this.days.push(day);
                            }
                        }
                    } else if (partCount == 3 &&
                        "BYDAY" in parts &&
                        "BYMONTHDAY" in parts &&
                        "BYMONTH" in parts) {
                        var expandedDays = this.expand_by_day(aYear);

                        for (var daykey in expandedDays) {
                            /* istanbul ignore if */
                            if (!expandedDays.hasOwnProperty(daykey)) {
                                continue;
                            }
                            var day = expandedDays[daykey];
                            var tt = ICAL.Time.fromDayOfYear(day, aYear);

                            if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 &&
                                this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {
                                this.days.push(day);
                            }
                        }
                    } else if (partCount == 2 && "BYDAY" in parts && "BYWEEKNO" in parts) {
                        var expandedDays = this.expand_by_day(aYear);

                        for (var daykey in expandedDays) {
                            /* istanbul ignore if */
                            if (!expandedDays.hasOwnProperty(daykey)) {
                                continue;
                            }
                            var day = expandedDays[daykey];
                            var tt = ICAL.Time.fromDayOfYear(day, aYear);
                            var weekno = tt.weekNumber(this.rule.wkst);

                            if (this.by_data.BYWEEKNO.indexOf(weekno)) {
                                this.days.push(day);
                            }
                        }
                    } else if (partCount == 3 &&
                        "BYDAY" in parts &&
                        "BYWEEKNO" in parts &&
                        "BYMONTHDAY" in parts) {
                        // TODO unimplemted in libical
                    } else if (partCount == 1 && "BYYEARDAY" in parts) {
                        this.days = this.days.concat(this.by_data.BYYEARDAY);
                    } else {
                        this.days = [];
                    }
                    return 0;
                },

                expand_by_day: function expand_by_day(aYear) {

                    var days_list = [];
                    var tmp = this.last.clone();

                    tmp.year = aYear;
                    tmp.month = 1;
                    tmp.day = 1;
                    tmp.isDate = true;

                    var start_dow = tmp.dayOfWeek();

                    tmp.month = 12;
                    tmp.day = 31;
                    tmp.isDate = true;

                    var end_dow = tmp.dayOfWeek();
                    var end_year_day = tmp.dayOfYear();

                    for (var daykey in this.by_data.BYDAY) {
                        /* istanbul ignore if */
                        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {
                            continue;
                        }
                        var day = this.by_data.BYDAY[daykey];
                        var parts = this.ruleDayOfWeek(day);
                        var pos = parts[0];
                        var dow = parts[1];

                        if (pos == 0) {
                            var tmp_start_doy = ((dow + 7 - start_dow) % 7) + 1;

                            for (var doy = tmp_start_doy; doy <= end_year_day; doy += 7) {
                                days_list.push(doy);
                            }

                        } else if (pos > 0) {
                            var first;
                            if (dow >= start_dow) {
                                first = dow - start_dow + 1;
                            } else {
                                first = dow - start_dow + 8;
                            }

                            days_list.push(first + (pos - 1) * 7);
                        } else {
                            var last;
                            pos = -pos;

                            if (dow <= end_dow) {
                                last = end_year_day - end_dow + dow;
                            } else {
                                last = end_year_day - end_dow + dow - 7;
                            }

                            days_list.push(last - (pos - 1) * 7);
                        }
                    }
                    return days_list;
                },

                is_day_in_byday: function is_day_in_byday(tt) {
                    for (var daykey in this.by_data.BYDAY) {
                        /* istanbul ignore if */
                        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {
                            continue;
                        }
                        var day = this.by_data.BYDAY[daykey];
                        var parts = this.ruleDayOfWeek(day);
                        var pos = parts[0];
                        var dow = parts[1];
                        var this_dow = tt.dayOfWeek();

                        if ((pos == 0 && dow == this_dow) ||
                            (tt.nthWeekDay(dow, pos) == tt.day)) {
                            return 1;
                        }
                    }

                    return 0;
                },

                /**
                 * Checks if given value is in BYSETPOS.
                 *
                 * @private
                 * @param {Numeric} aPos position to check for.
                 * @return {Boolean} false unless BYSETPOS rules exist
                 *                   and the given value is present in rules.
                 */
                check_set_position: function check_set_position(aPos) {
                    if (this.has_by_data('BYSETPOS')) {
                        var idx = this.by_data.BYSETPOS.indexOf(aPos);
                        // negative numbers are not false-y
                        return idx !== -1;
                    }
                    return false;
                },

                sort_byday_rules: function icalrecur_sort_byday_rules(aRules, aWeekStart) {
                    for (var i = 0; i < aRules.length; i++) {
                        for (var j = 0; j < i; j++) {
                            var one = this.ruleDayOfWeek(aRules[j])[1];
                            var two = this.ruleDayOfWeek(aRules[i])[1];
                            one -= aWeekStart;
                            two -= aWeekStart;
                            if (one < 0) one += 7;
                            if (two < 0) two += 7;

                            if (one > two) {
                                var tmp = aRules[i];
                                aRules[i] = aRules[j];
                                aRules[j] = tmp;
                            }
                        }
                    }
                },

                check_contract_restriction: function check_contract_restriction(aRuleType, v) {
                    var indexMapValue = icalrecur_iterator._indexMap[aRuleType];
                    var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];
                    var pass = false;

                    if (aRuleType in this.by_data &&
                        ruleMapValue == icalrecur_iterator.CONTRACT) {

                        var ruleType = this.by_data[aRuleType];

                        for (var bydatakey in ruleType) {
                            /* istanbul ignore else */
                            if (ruleType.hasOwnProperty(bydatakey)) {
                                if (ruleType[bydatakey] == v) {
                                    pass = true;
                                    break;
                                }
                            }
                        }
                    } else {
                        // Not a contracting byrule or has no data, test passes
                        pass = true;
                    }
                    return pass;
                },

                check_contracting_rules: function check_contracting_rules() {
                    var dow = this.last.dayOfWeek();
                    var weekNo = this.last.weekNumber(this.rule.wkst);
                    var doy = this.last.dayOfYear();

                    return (this.check_contract_restriction("BYSECOND", this.last.second) &&
                        this.check_contract_restriction("BYMINUTE", this.last.minute) &&
                        this.check_contract_restriction("BYHOUR", this.last.hour) &&
                        this.check_contract_restriction("BYDAY", ICAL.Recur.numericDayToIcalDay(dow)) &&
                        this.check_contract_restriction("BYWEEKNO", weekNo) &&
                        this.check_contract_restriction("BYMONTHDAY", this.last.day) &&
                        this.check_contract_restriction("BYMONTH", this.last.month) &&
                        this.check_contract_restriction("BYYEARDAY", doy));
                },

                setup_defaults: function setup_defaults(aRuleType, req, deftime) {
                    var indexMapValue = icalrecur_iterator._indexMap[aRuleType];
                    var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];

                    if (ruleMapValue != icalrecur_iterator.CONTRACT) {
                        if (!(aRuleType in this.by_data)) {
                            this.by_data[aRuleType] = [deftime];
                        }
                        if (this.rule.freq != req) {
                            return this.by_data[aRuleType][0];
                        }
                    }
                    return deftime;
                },

                /**
                 * Convert iterator into a serialize-able object.  Will preserve current
                 * iteration sequence to ensure the seamless continuation of the recurrence
                 * rule.
                 * @return {Object}
                 */
                toJSON: function() {
                    var result = Object.create(null);

                    result.initialized = this.initialized;
                    result.rule = this.rule.toJSON();
                    result.dtstart = this.dtstart.toJSON();
                    result.by_data = this.by_data;
                    result.days = this.days;
                    result.last = this.last.toJSON();
                    result.by_indices = this.by_indices;
                    result.occurrence_number = this.occurrence_number;

                    return result;
                }
            };

            icalrecur_iterator._indexMap = {
                "BYSECOND": 0,
                "BYMINUTE": 1,
                "BYHOUR": 2,
                "BYDAY": 3,
                "BYMONTHDAY": 4,
                "BYYEARDAY": 5,
                "BYWEEKNO": 6,
                "BYMONTH": 7,
                "BYSETPOS": 8
            };

            icalrecur_iterator._expandMap = {
                "SECONDLY": [1, 1, 1, 1, 1, 1, 1, 1],
                "MINUTELY": [2, 1, 1, 1, 1, 1, 1, 1],
                "HOURLY": [2, 2, 1, 1, 1, 1, 1, 1],
                "DAILY": [2, 2, 2, 1, 1, 1, 1, 1],
                "WEEKLY": [2, 2, 2, 2, 3, 3, 1, 1],
                "MONTHLY": [2, 2, 2, 2, 2, 3, 3, 1],
                "YEARLY": [2, 2, 2, 2, 2, 2, 2, 2]
            };
            icalrecur_iterator.UNKNOWN = 0;
            icalrecur_iterator.CONTRACT = 1;
            icalrecur_iterator.EXPAND = 2;
            icalrecur_iterator.ILLEGAL = 3;

            return icalrecur_iterator;

        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.RecurExpansion = (function() {
            function formatTime(item) {
                return ICAL.helpers.formatClassType(item, ICAL.Time);
            }

            function compareTime(a, b) {
                return a.compare(b);
            }

            function isRecurringComponent(comp) {
                return comp.hasProperty('rdate') ||
                    comp.hasProperty('rrule') ||
                    comp.hasProperty('recurrence-id');
            }

            /**
             * @classdesc
             * Primary class for expanding recurring rules.  Can take multiple rrules,
             * rdates, exdate(s) and iterate (in order) over each next occurrence.
             *
             * Once initialized this class can also be serialized saved and continue
             * iteration from the last point.
             *
             * NOTE: it is intended that this class is to be used
             *       with ICAL.Event which handles recurrence exceptions.
             *
             * @example
             * // assuming event is a parsed ical component
             * var event;
             *
             * var expand = new ICAL.RecurExpansion({
             *   component: event,
             *   dtstart: event.getFirstPropertyValue('dtstart')
             * });
             *
             * // remember there are infinite rules
             * // so its a good idea to limit the scope
             * // of the iterations then resume later on.
             *
             * // next is always an ICAL.Time or null
             * var next;
             *
             * while (someCondition && (next = expand.next())) {
             *   // do something with next
             * }
             *
             * // save instance for later
             * var json = JSON.stringify(expand);
             *
             * //...
             *
             * // NOTE: if the component's properties have
             * //       changed you will need to rebuild the
             * //       class and start over. This only works
             * //       when the component's recurrence info is the same.
             * var expand = new ICAL.RecurExpansion(JSON.parse(json));
             *
             * @description
             * The options object can be filled with the specified initial values. It can
             * also contain additional members, as a result of serializing a previous
             * expansion state, as shown in the example.
             *
             * @class
             * @alias ICAL.RecurExpansion
             * @param {Object} options
             *        Recurrence expansion options
             * @param {ICAL.Time} options.dtstart
             *        Start time of the event
             * @param {ICAL.Component=} options.component
             *        Component for expansion, required if not resuming.
             */
            function RecurExpansion(options) {
                this.ruleDates = [];
                this.exDates = [];
                this.fromData(options);
            }

            RecurExpansion.prototype = {
                /**
                 * True when iteration is fully completed.
                 * @type {Boolean}
                 */
                complete: false,

                /**
                 * Array of rrule iterators.
                 *
                 * @type {ICAL.RecurIterator[]}
                 * @private
                 */
                ruleIterators: null,

                /**
                 * Array of rdate instances.
                 *
                 * @type {ICAL.Time[]}
                 * @private
                 */
                ruleDates: null,

                /**
                 * Array of exdate instances.
                 *
                 * @type {ICAL.Time[]}
                 * @private
                 */
                exDates: null,

                /**
                 * Current position in ruleDates array.
                 * @type {Number}
                 * @private
                 */
                ruleDateInc: 0,

                /**
                 * Current position in exDates array
                 * @type {Number}
                 * @private
                 */
                exDateInc: 0,

                /**
                 * Current negative date.
                 *
                 * @type {ICAL.Time}
                 * @private
                 */
                exDate: null,

                /**
                 * Current additional date.
                 *
                 * @type {ICAL.Time}
                 * @private
                 */
                ruleDate: null,

                /**
                 * Start date of recurring rules.
                 *
                 * @type {ICAL.Time}
                 */
                dtstart: null,

                /**
                 * Last expanded time
                 *
                 * @type {ICAL.Time}
                 */
                last: null,

                /**
                 * Initialize the recurrence expansion from the data object. The options
                 * object may also contain additional members, see the
                 * {@link ICAL.RecurExpansion constructor} for more details.
                 *
                 * @param {Object} options
                 *        Recurrence expansion options
                 * @param {ICAL.Time} options.dtstart
                 *        Start time of the event
                 * @param {ICAL.Component=} options.component
                 *        Component for expansion, required if not resuming.
                 */
                fromData: function(options) {
                    var start = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);

                    if (!start) {
                        throw new Error('.dtstart (ICAL.Time) must be given');
                    } else {
                        this.dtstart = start;
                    }

                    if (options.component) {
                        this._init(options.component);
                    } else {
                        this.last = formatTime(options.last) || start.clone();

                        if (!options.ruleIterators) {
                            throw new Error('.ruleIterators or .component must be given');
                        }

                        this.ruleIterators = options.ruleIterators.map(function(item) {
                            return ICAL.helpers.formatClassType(item, ICAL.RecurIterator);
                        });

                        this.ruleDateInc = options.ruleDateInc;
                        this.exDateInc = options.exDateInc;

                        if (options.ruleDates) {
                            this.ruleDates = options.ruleDates.map(formatTime);
                            this.ruleDate = this.ruleDates[this.ruleDateInc];
                        }

                        if (options.exDates) {
                            this.exDates = options.exDates.map(formatTime);
                            this.exDate = this.exDates[this.exDateInc];
                        }

                        if (typeof(options.complete) !== 'undefined') {
                            this.complete = options.complete;
                        }
                    }
                },

                /**
                 * Retrieve the next occurrence in the series.
                 * @return {ICAL.Time}
                 */
                next: function() {
                    var iter;
                    var ruleOfDay;
                    var next;
                    var compare;

                    var maxTries = 500;
                    var currentTry = 0;

                    while (true) {
                        if (currentTry++ > maxTries) {
                            throw new Error(
                                'max tries have occured, rule may be impossible to forfill.'
                            );
                        }

                        next = this.ruleDate;
                        iter = this._nextRecurrenceIter(this.last);

                        // no more matches
                        // because we increment the rule day or rule
                        // _after_ we choose a value this should be
                        // the only spot where we need to worry about the
                        // end of events.
                        if (!next && !iter) {
                            // there are no more iterators or rdates
                            this.complete = true;
                            break;
                        }

                        // no next rule day or recurrence rule is first.
                        if (!next || (iter && next.compare(iter.last) > 0)) {
                            // must be cloned, recur will reuse the time element.
                            next = iter.last.clone();
                            // move to next so we can continue
                            iter.next();
                        }

                        // if the ruleDate is still next increment it.
                        if (this.ruleDate === next) {
                            this._nextRuleDay();
                        }

                        this.last = next;

                        // check the negative rules
                        if (this.exDate) {
                            compare = this.exDate.compare(this.last);

                            if (compare < 0) {
                                this._nextExDay();
                            }

                            // if the current rule is excluded skip it.
                            if (compare === 0) {
                                this._nextExDay();
                                continue;
                            }
                        }

                        //XXX: The spec states that after we resolve the final
                        //     list of dates we execute exdate this seems somewhat counter
                        //     intuitive to what I have seen most servers do so for now
                        //     I exclude based on the original date not the one that may
                        //     have been modified by the exception.
                        return this.last;
                    }
                },

                /**
                 * Converts object into a serialize-able format. This format can be passed
                 * back into the expansion to resume iteration.
                 * @return {Object}
                 */
                toJSON: function() {
                    function toJSON(item) {
                        return item.toJSON();
                    }

                    var result = Object.create(null);
                    result.ruleIterators = this.ruleIterators.map(toJSON);

                    if (this.ruleDates) {
                        result.ruleDates = this.ruleDates.map(toJSON);
                    }

                    if (this.exDates) {
                        result.exDates = this.exDates.map(toJSON);
                    }

                    result.ruleDateInc = this.ruleDateInc;
                    result.exDateInc = this.exDateInc;
                    result.last = this.last.toJSON();
                    result.dtstart = this.dtstart.toJSON();
                    result.complete = this.complete;

                    return result;
                },

                /**
                 * Extract all dates from the properties in the given component. The
                 * properties will be filtered by the property name.
                 *
                 * @private
                 * @param {ICAL.Component} component        The component to search in
                 * @param {String} propertyName             The property name to search for
                 * @return {ICAL.Time[]}                    The extracted dates.
                 */
                _extractDates: function(component, propertyName) {
                    function handleProp(prop) {
                        idx = ICAL.helpers.binsearchInsert(
                            result,
                            prop,
                            compareTime
                        );

                        // ordered insert
                        result.splice(idx, 0, prop);
                    }

                    var result = [];
                    var props = component.getAllProperties(propertyName);
                    var len = props.length;
                    var i = 0;
                    var prop;

                    var idx;

                    for (; i < len; i++) {
                        props[i].getValues().forEach(handleProp);
                    }

                    return result;
                },

                /**
                 * Initialize the recurrence expansion.
                 *
                 * @private
                 * @param {ICAL.Component} component    The component to initialize from.
                 */
                _init: function(component) {
                    this.ruleIterators = [];

                    this.last = this.dtstart.clone();

                    // to provide api consistency non-recurring
                    // events can also use the iterator though it will
                    // only return a single time.
                    if (!isRecurringComponent(component)) {
                        this.ruleDate = this.last.clone();
                        this.complete = true;
                        return;
                    }

                    if (component.hasProperty('rdate')) {
                        this.ruleDates = this._extractDates(component, 'rdate');

                        // special hack for cases where first rdate is prior
                        // to the start date. We only check for the first rdate.
                        // This is mostly for google's crazy recurring date logic
                        // (contacts birthdays).
                        if ((this.ruleDates[0]) &&
                            (this.ruleDates[0].compare(this.dtstart) < 0)) {

                            this.ruleDateInc = 0;
                            this.last = this.ruleDates[0].clone();
                        } else {
                            this.ruleDateInc = ICAL.helpers.binsearchInsert(
                                this.ruleDates,
                                this.last,
                                compareTime
                            );
                        }

                        this.ruleDate = this.ruleDates[this.ruleDateInc];
                    }

                    if (component.hasProperty('rrule')) {
                        var rules = component.getAllProperties('rrule');
                        var i = 0;
                        var len = rules.length;

                        var rule;
                        var iter;

                        for (; i < len; i++) {
                            rule = rules[i].getFirstValue();
                            iter = rule.iterator(this.dtstart);
                            this.ruleIterators.push(iter);

                            // increment to the next occurrence so future
                            // calls to next return times beyond the initial iteration.
                            // XXX: I find this suspicious might be a bug?
                            iter.next();
                        }
                    }

                    if (component.hasProperty('exdate')) {
                        this.exDates = this._extractDates(component, 'exdate');
                        // if we have a .last day we increment the index to beyond it.
                        this.exDateInc = ICAL.helpers.binsearchInsert(
                            this.exDates,
                            this.last,
                            compareTime
                        );

                        this.exDate = this.exDates[this.exDateInc];
                    }
                },

                /**
                 * Advance to the next exdate
                 * @private
                 */
                _nextExDay: function() {
                    this.exDate = this.exDates[++this.exDateInc];
                },

                /**
                 * Advance to the next rule date
                 * @private
                 */
                _nextRuleDay: function() {
                    this.ruleDate = this.ruleDates[++this.ruleDateInc];
                },

                /**
                 * Find and return the recurrence rule with the most recent event and
                 * return it.
                 *
                 * @private
                 * @return {?ICAL.RecurIterator}    Found iterator.
                 */
                _nextRecurrenceIter: function() {
                    var iters = this.ruleIterators;

                    if (iters.length === 0) {
                        return null;
                    }

                    var len = iters.length;
                    var iter;
                    var iterTime;
                    var iterIdx = 0;
                    var chosenIter;

                    // loop through each iterator
                    for (; iterIdx < len; iterIdx++) {
                        iter = iters[iterIdx];
                        iterTime = iter.last;

                        // if iteration is complete
                        // then we must exclude it from
                        // the search and remove it.
                        if (iter.completed) {
                            len--;
                            if (iterIdx !== 0) {
                                iterIdx--;
                            }
                            iters.splice(iterIdx, 1);
                            continue;
                        }

                        // find the most recent possible choice
                        if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {
                            // that iterator is saved
                            chosenIter = iter;
                        }
                    }

                    // the chosen iterator is returned but not mutated
                    // this iterator contains the most recent event.
                    return chosenIter;
                }
            };

            return RecurExpansion;
        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.Event = (function() {

            /**
             * @classdesc
             * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal
             * object, followed by the component/property layer. The highest level is the
             * event representation, which this class is part of. See the
             * {@tutorial layers} guide for more details.
             *
             * @class
             * @alias ICAL.Event
             * @param {ICAL.Component=} component         The ICAL.Component to base this event on
             * @param {Object} options                    Options for this event
             * @param {Boolean} options.strictExceptions
             *          When true, will verify exceptions are related by their UUID
             * @param {Array<ICAL.Component|ICAL.Event>} options.exceptions
             *          Exceptions to this event, either as components or events
             */
            function Event(component, options) {
                if (!(component instanceof ICAL.Component)) {
                    options = component;
                    component = null;
                }

                if (component) {
                    this.component = component;
                } else {
                    this.component = new ICAL.Component('vevent');
                }

                this._rangeExceptionCache = Object.create(null);
                this.exceptions = Object.create(null);
                this.rangeExceptions = [];

                if (options && options.strictExceptions) {
                    this.strictExceptions = options.strictExceptions;
                }

                if (options && options.exceptions) {
                    options.exceptions.forEach(this.relateException, this);
                }
            }

            Event.prototype = {

                THISANDFUTURE: 'THISANDFUTURE',

                /**
                 * List of related event exceptions.
                 *
                 * @type {ICAL.Event[]}
                 */
                exceptions: null,

                /**
                 * When true, will verify exceptions are related by their UUID.
                 *
                 * @type {Boolean}
                 */
                strictExceptions: false,

                /**
                 * Relates a given event exception to this object.  If the given component
                 * does not share the UID of this event it cannot be related and will throw
                 * an exception.
                 *
                 * If this component is an exception it cannot have other exceptions
                 * related to it.
                 *
                 * @param {ICAL.Component|ICAL.Event} obj       Component or event
                 */
                relateException: function(obj) {
                    if (this.isRecurrenceException()) {
                        throw new Error('cannot relate exception to exceptions');
                    }

                    if (obj instanceof ICAL.Component) {
                        obj = new ICAL.Event(obj);
                    }

                    if (this.strictExceptions && obj.uid !== this.uid) {
                        throw new Error('attempted to relate unrelated exception');
                    }

                    var id = obj.recurrenceId.toString();

                    // we don't sort or manage exceptions directly
                    // here the recurrence expander handles that.
                    this.exceptions[id] = obj;

                    // index RANGE=THISANDFUTURE exceptions so we can
                    // look them up later in getOccurrenceDetails.
                    if (obj.modifiesFuture()) {
                        var item = [
                            obj.recurrenceId.toUnixTime(), id
                        ];

                        // we keep them sorted so we can find the nearest
                        // value later on...
                        var idx = ICAL.helpers.binsearchInsert(
                            this.rangeExceptions,
                            item,
                            compareRangeException
                        );

                        this.rangeExceptions.splice(idx, 0, item);
                    }
                },

                /**
                 * Checks if this record is an exception and has the RANGE=THISANDFUTURE
                 * value.
                 *
                 * @return {Boolean}        True, when exception is within range
                 */
                modifiesFuture: function() {
                    var range = this.component.getFirstPropertyValue('range');
                    return range === this.THISANDFUTURE;
                },

                /**
                 * Finds the range exception nearest to the given date.
                 *
                 * @param {ICAL.Time} time usually an occurrence time of an event
                 * @return {?ICAL.Event} the related event/exception or null
                 */
                findRangeException: function(time) {
                    if (!this.rangeExceptions.length) {
                        return null;
                    }

                    var utc = time.toUnixTime();
                    var idx = ICAL.helpers.binsearchInsert(
                        this.rangeExceptions, [utc],
                        compareRangeException
                    );

                    idx -= 1;

                    // occurs before
                    if (idx < 0) {
                        return null;
                    }

                    var rangeItem = this.rangeExceptions[idx];

                    /* istanbul ignore next: sanity check only */
                    if (utc < rangeItem[0]) {
                        return null;
                    }

                    return rangeItem[1];
                },

                /**
                 * This object is returned by {@link ICAL.Event#getOccurrenceDetails getOccurrenceDetails}
                 *
                 * @typedef {Object} occurrenceDetails
                 * @memberof ICAL.Event
                 * @property {ICAL.Time} recurrenceId       The passed in recurrence id
                 * @property {ICAL.Event} item              The occurrence
                 * @property {ICAL.Time} startDate          The start of the occurrence
                 * @property {ICAL.Time} endDate            The end of the occurrence
                 */

                /**
                 * Returns the occurrence details based on its start time.  If the
                 * occurrence has an exception will return the details for that exception.
                 *
                 * NOTE: this method is intend to be used in conjunction
                 *       with the {@link ICAL.Event#iterator iterator} method.
                 *
                 * @param {ICAL.Time} occurrence time occurrence
                 * @return {ICAL.Event.occurrenceDetails} Information about the occurrence
                 */
                getOccurrenceDetails: function(occurrence) {
                    var id = occurrence.toString();
                    var utcId = occurrence.convertToZone(ICAL.Timezone.utcTimezone).toString();
                    var item;
                    var result = {
                        //XXX: Clone?
                        recurrenceId: occurrence
                    };

                    if (id in this.exceptions) {
                        item = result.item = this.exceptions[id];
                        result.startDate = item.startDate;
                        result.endDate = item.endDate;
                        result.item = item;
                    } else if (utcId in this.exceptions) {
                        item = this.exceptions[utcId];
                        result.startDate = item.startDate;
                        result.endDate = item.endDate;
                        result.item = item;
                    } else {
                        // range exceptions (RANGE=THISANDFUTURE) have a
                        // lower priority then direct exceptions but
                        // must be accounted for first. Their item is
                        // always the first exception with the range prop.
                        var rangeExceptionId = this.findRangeException(
                            occurrence
                        );
                        var end;

                        if (rangeExceptionId) {
                            var exception = this.exceptions[rangeExceptionId];

                            // range exception must modify standard time
                            // by the difference (if any) in start/end times.
                            result.item = exception;

                            var startDiff = this._rangeExceptionCache[rangeExceptionId];

                            if (!startDiff) {
                                var original = exception.recurrenceId.clone();
                                var newStart = exception.startDate.clone();

                                // zones must be same otherwise subtract may be incorrect.
                                original.zone = newStart.zone;
                                startDiff = newStart.subtractDate(original);

                                this._rangeExceptionCache[rangeExceptionId] = startDiff;
                            }

                            var start = occurrence.clone();
                            start.zone = exception.startDate.zone;
                            start.addDuration(startDiff);

                            end = start.clone();
                            end.addDuration(exception.duration);

                            result.startDate = start;
                            result.endDate = end;
                        } else {
                            // no range exception standard expansion
                            end = occurrence.clone();
                            end.addDuration(this.duration);

                            result.endDate = end;
                            result.startDate = occurrence;
                            result.item = this;
                        }
                    }

                    return result;
                },

                /**
                 * Builds a recur expansion instance for a specific point in time (defaults
                 * to startDate).
                 *
                 * @param {ICAL.Time} startTime     Starting point for expansion
                 * @return {ICAL.RecurExpansion}    Expansion object
                 */
                iterator: function(startTime) {
                    return new ICAL.RecurExpansion({
                        component: this.component,
                        dtstart: startTime || this.startDate
                    });
                },

                /**
                 * Checks if the event is recurring
                 *
                 * @return {Boolean}        True, if event is recurring
                 */
                isRecurring: function() {
                    var comp = this.component;
                    return comp.hasProperty('rrule') || comp.hasProperty('rdate');
                },

                /**
                 * Checks if the event describes a recurrence exception. See
                 * {@tutorial terminology} for details.
                 *
                 * @return {Boolean}    True, if the even describes a recurrence exception
                 */
                isRecurrenceException: function() {
                    return this.component.hasProperty('recurrence-id');
                },

                /**
                 * Returns the types of recurrences this event may have.
                 *
                 * Returned as an object with the following possible keys:
                 *
                 *    - YEARLY
                 *    - MONTHLY
                 *    - WEEKLY
                 *    - DAILY
                 *    - MINUTELY
                 *    - SECONDLY
                 *
                 * @return {Object.<ICAL.Recur.frequencyValues, Boolean>}
                 *          Object of recurrence flags
                 */
                getRecurrenceTypes: function() {
                    var rules = this.component.getAllProperties('rrule');
                    var i = 0;
                    var len = rules.length;
                    var result = Object.create(null);

                    for (; i < len; i++) {
                        var value = rules[i].getFirstValue();
                        result[value.freq] = true;
                    }

                    return result;
                },

                /**
                 * The uid of this event
                 * @type {String}
                 */
                get uid() {
                    return this._firstProp('uid');
                },

                set uid(value) {
                    this._setProp('uid', value);
                },

                /**
                 * The start date
                 * @type {ICAL.Time}
                 */
                get startDate() {
                    return this._firstProp('dtstart');
                },

                set startDate(value) {
                    this._setTime('dtstart', value);
                },

                /**
                 * The end date. This can be the result directly from the property, or the
                 * end date calculated from start date and duration.
                 * @type {ICAL.Time}
                 */
                get endDate() {
                    var endDate = this._firstProp('dtend');
                    if (!endDate) {
                        var duration = this._firstProp('duration');
                        endDate = this.startDate.clone();
                        if (duration) {
                            endDate.addDuration(duration);
                        } else if (endDate.isDate) {
                            endDate.day += 1;
                        }
                    }
                    return endDate;
                },

                set endDate(value) {
                    this._setTime('dtend', value);
                },

                /**
                 * The duration. This can be the result directly from the property, or the
                 * duration calculated from start date and end date.
                 * @type {ICAL.Duration}
                 * @readonly
                 */
                get duration() {
                    var duration = this._firstProp('duration');
                    if (!duration) {
                        return this.endDate.subtractDate(this.startDate);
                    }
                    return duration;
                },

                /**
                 * The location of the event.
                 * @type {String}
                 */
                get location() {
                    return this._firstProp('location');
                },

                set location(value) {
                    return this._setProp('location', value);
                },

                /**
                 * The attendees in the event
                 * @type {ICAL.Property[]}
                 * @readonly
                 */
                get attendees() {
                    //XXX: This is way lame we should have a better
                    //     data structure for this later.
                    return this.component.getAllProperties('attendee');
                },


                /**
                 * The event summary
                 * @type {String}
                 */
                get summary() {
                    return this._firstProp('summary');
                },

                set summary(value) {
                    this._setProp('summary', value);
                },

                /**
                 * The event description.
                 * @type {String}
                 */
                get description() {
                    return this._firstProp('description');
                },

                set description(value) {
                    this._setProp('description', value);
                },

                /**
                 * The organizer value as an uri. In most cases this is a mailto: uri, but
                 * it can also be something else, like urn:uuid:...
                 * @type {String}
                 */
                get organizer() {
                    return this._firstProp('organizer');
                },

                set organizer(value) {
                    this._setProp('organizer', value);
                },

                /**
                 * The sequence value for this event. Used for scheduling
                 * see {@tutorial terminology}.
                 * @type {Number}
                 */
                get sequence() {
                    return this._firstProp('sequence');
                },

                set sequence(value) {
                    this._setProp('sequence', value);
                },

                /**
                 * The recurrence id for this event. See {@tutorial terminology} for details.
                 * @type {ICAL.Time}
                 */
                get recurrenceId() {
                    return this._firstProp('recurrence-id');
                },

                set recurrenceId(value) {
                    this._setProp('recurrence-id', value);
                },

                /**
                 * Set/update a time property's value.
                 * This will also update the TZID of the property.
                 *
                 * TODO: this method handles the case where we are switching
                 * from a known timezone to an implied timezone (one without TZID).
                 * This does _not_ handle the case of moving between a known
                 *  (by TimezoneService) timezone to an unknown timezone...
                 *
                 * We will not add/remove/update the VTIMEZONE subcomponents
                 *  leading to invalid ICAL data...
                 * @private
                 * @param {String} propName     The property name
                 * @param {ICAL.Time} time      The time to set
                 */
                _setTime: function(propName, time) {
                    var prop = this.component.getFirstProperty(propName);

                    if (!prop) {
                        prop = new ICAL.Property(propName);
                        this.component.addProperty(prop);
                    }

                    // utc and local don't get a tzid
                    if (
                        time.zone === ICAL.Timezone.localTimezone ||
                        time.zone === ICAL.Timezone.utcTimezone
                    ) {
                        // remove the tzid
                        prop.removeParameter('tzid');
                    } else {
                        prop.setParameter('tzid', time.zone.tzid);
                    }

                    prop.setValue(time);
                },

                _setProp: function(name, value) {
                    this.component.updatePropertyWithValue(name, value);
                },

                _firstProp: function(name) {
                    return this.component.getFirstPropertyValue(name);
                },

                /**
                 * The string representation of this event.
                 * @return {String}
                 */
                toString: function() {
                    return this.component.toString();
                }

            };

            function compareRangeException(a, b) {
                if (a[0] > b[0]) return 1;
                if (b[0] > a[0]) return -1;
                return 0;
            }

            return Event;
        }());
        /* This Source Code Form is subject to the terms of the Mozilla Public
         * License, v. 2.0. If a copy of the MPL was not distributed with this
         * file, You can obtain one at http://mozilla.org/MPL/2.0/.
         * Portions Copyright (C) Philipp Kewisch, 2011-2015 */


        /**
         * This symbol is further described later on
         * @ignore
         */
        ICAL.ComponentParser = (function() {
            /**
             * @classdesc
             * The ComponentParser is used to process a String or jCal Object,
             * firing callbacks for various found components, as well as completion.
             *
             * @example
             * var options = {
             *   // when false no events will be emitted for type
             *   parseEvent: true,
             *   parseTimezone: true
             * };
             *
             * var parser = new ICAL.ComponentParser(options);
             *
             * parser.onevent(eventComponent) {
             *   //...
             * }
             *
             * // ontimezone, etc...
             *
             * parser.oncomplete = function() {
             *
             * };
             *
             * parser.process(stringOrComponent);
             *
             * @class
             * @alias ICAL.ComponentParser
             * @param {Object=} options        Component parser options
             * @param {Boolean} options.parseEvent        Whether events should be parsed
             * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed
             */
            function ComponentParser(options) {
                if (typeof(options) === 'undefined') {
                    options = {};
                }

                var key;
                for (key in options) {
                    /* istanbul ignore else */
                    if (options.hasOwnProperty(key)) {
                        this[key] = options[key];
                    }
                }
            }

            ComponentParser.prototype = {

                /**
                 * When true, parse events
                 *
                 * @type {Boolean}
                 */
                parseEvent: true,

                /**
                 * When true, parse timezones
                 *
                 * @type {Boolean}
                 */
                parseTimezone: true,


                /* SAX like events here for reference */

                /**
                 * Fired when parsing is complete
                 * @callback
                 */
                oncomplete: /* istanbul ignore next */ function() {},

                /**
                 * Fired if an error occurs during parsing.
                 *
                 * @callback
                 * @param {Error} err details of error
                 */
                onerror: /* istanbul ignore next */ function(err) {},

                /**
                 * Fired when a top level component (VTIMEZONE) is found
                 *
                 * @callback
                 * @param {ICAL.Timezone} component     Timezone object
                 */
                ontimezone: /* istanbul ignore next */ function(component) {},

                /**
                 * Fired when a top level component (VEVENT) is found.
                 *
                 * @callback
                 * @param {ICAL.Event} component    Top level component
                 */
                onevent: /* istanbul ignore next */ function(component) {},

                /**
                 * Process a string or parse ical object.  This function itself will return
                 * nothing but will start the parsing process.
                 *
                 * Events must be registered prior to calling this method.
                 *
                 * @param {ICAL.Component|String|Object} ical      The component to process,
                 *        either in its final form, as a jCal Object, or string representation
                 */
                process: function(ical) {
                    //TODO: this is sync now in the future we will have a incremental parser.
                    if (typeof(ical) === 'string') {
                        ical = ICAL.parse(ical);
                    }

                    if (!(ical instanceof ICAL.Component)) {
                        ical = new ICAL.Component(ical);
                    }

                    var components = ical.getAllSubcomponents();
                    var i = 0;
                    var len = components.length;
                    var component;

                    for (; i < len; i++) {
                        component = components[i];

                        switch (component.name) {
                            case 'vtimezone':
                                if (this.parseTimezone) {
                                    var tzid = component.getFirstPropertyValue('tzid');
                                    if (tzid) {
                                        this.ontimezone(new ICAL.Timezone({
                                            tzid: tzid,
                                            component: component
                                        }));
                                    }
                                }
                                break;
                            case 'vevent':
                                if (this.parseEvent) {
                                    this.onevent(new ICAL.Event(component));
                                }
                                break;
                            default:
                                continue;
                        }
                    }

                    //XXX: ideally we should do a "nextTick" here
                    //     so in all cases this is actually async.
                    this.oncomplete();
                }
            };

            return ComponentParser;
        }());


        /***/
    }),
    /* 272 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "static/media/belltimes.faec1209.pdf";

        /***/
    })
    /******/
]);


// WEBPACK FOOTER //
// static/js/main.e2c8743c.js